Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO
    TEXTO

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     empty -> <empty>
Rule 2     E -> E2
Rule 3     E -> E2 MENOR E2 AUX_MENOR
Rule 4     E -> E2 MAYOR E2 AUX_MAYOR
Rule 5     E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
Rule 6     E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
Rule 7     E -> E2 IGUAL E2 AUX_IGUAL
Rule 8     E -> E2 DIFERENTE E2 AUX_DIFERENTE
Rule 9     AUX_MENOR -> empty
Rule 10    AUX_MAYOR -> empty
Rule 11    AUX_MENOR_IGUAL -> empty
Rule 12    AUX_MAYOR_IGUAL -> empty
Rule 13    AUX_IGUAL -> empty
Rule 14    AUX_DIFERENTE -> empty
Rule 15    E2 -> E3
Rule 16    E2 -> E2 OR E3 AUX_OR
Rule 17    E2 -> E2 MAS E3 AUX_MAS
Rule 18    E2 -> E2 MENOS E3 AUX_MENOS
Rule 19    AUX_OR -> empty
Rule 20    AUX_MAS -> empty
Rule 21    AUX_MENOS -> empty
Rule 22    E3 -> E4
Rule 23    E3 -> E3 AND E4 AUX_AND
Rule 24    E3 -> E3 POR E4 AUX_POR
Rule 25    E3 -> E3 ENTRE E4 AUX_ENTRE
Rule 26    E3 -> E3 MODULO E4 AUX_MODULO
Rule 27    AUX_AND -> empty
Rule 28    AUX_POR -> empty
Rule 29    AUX_ENTRE -> empty
Rule 30    AUX_MODULO -> empty
Rule 31    E4 -> T
Rule 32    E4 -> NOT T AUX_NOT
Rule 33    AUX_NOT -> empty
Rule 34    T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
Rule 35    T -> FUNCTION
Rule 36    T -> ID_COMPLETO
Rule 37    T -> VALOR_INT
Rule 38    T -> VALOR_FLOAT
Rule 39    ID_COMPLETO -> ID RANGOS
Rule 40    RANGOS -> empty
Rule 41    RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
Rule 42    V -> TIPO DOS_PUNTOS A PUNTO_COMA
Rule 43    V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
Rule 44    TIPO -> INT
Rule 45    TIPO -> FLOAT
Rule 46    V_M -> empty
Rule 47    V_M -> V V_M
Rule 48    A -> ID_COMPLETO ASIGNACION VALOR_INT
Rule 49    A -> ID_COMPLETO ASIGNACION VALOR_FLOAT
Rule 50    A -> ID_COMPLETO ASIGNACION E
Rule 51    A -> ID_COMPLETO ASIGNACION ID_COMPLETO
Rule 52    A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 53    A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 54    EST -> empty
Rule 55    EST -> LOOP_ EST
Rule 56    EST -> IF_ EST
Rule 57    EST -> A PUNTO_COMA EST
Rule 58    EST -> PROCEDURE PUNTO_COMA EST
Rule 59    EST -> FUNCTION PUNTO_COMA EST
Rule 60    EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
Rule 61    EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
Rule 62    EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
Rule 63    LOOP_ -> DO_WHILE
Rule 64    LOOP_ -> WHILE_
Rule 65    LOOP_ -> FOR_
Rule 66    DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
Rule 67    WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
Rule 68    FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
Rule 69    AUX_FOR1 -> empty
Rule 70    AUX_ENDFOR -> empty
Rule 71    IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_
Rule 72    ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA
Rule 73    ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA
Rule 74    ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_
Rule 75    AUX_IF -> empty
Rule 76    AUX_ELSIF -> empty
Rule 77    AUX_ELSE -> empty
Rule 78    AUX_ENDIF -> empty
Rule 79    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
Rule 80    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
Rule 81    F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
Rule 82    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
Rule 83    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
Rule 84    PROGRAMA -> MP PROGRAMA_H
Rule 85    PROGRAMA_H -> empty
Rule 86    PROGRAMA_H -> P PROGRAMA_H
Rule 87    PROGRAMA_H -> F PROGRAMA_H

Terminals, with rules where they appear

AND                  : 23
ASIGNACION           : 48 49 50 51 52 53
BEGIN                : 79 80 81 82 83
COMILLAS             : 60 60
CORCHETE_DERECHO     : 41
CORCHETE_IZQUIERDO   : 41
DIFERENTE            : 8
DO                   : 66
DOS_PUNTOS           : 42 43 66 67 68 71 73 74 79 80 81 82 83
ELSE                 : 73
ELSIF                : 74
END                  : 66 67 68 72 73 79 80 81 82 83
ENTRE                : 25
FLOAT                : 45
FOR                  : 68
FUNCTION             : 35 59 81
ID                   : 39 52 62 79 80 81 81
IF                   : 71 72 73
IGUAL                : 7
INPUT                : 53 61
INT                  : 44
LOOP                 : 66 67 68
MAIN                 : 82 83
MAS                  : 17
MAYOR                : 4
MAYOR_IGUAL          : 6
MENOR                : 3
MENOR_IGUAL          : 5
MENOS                : 18
MODULO               : 26
NOT                  : 32
OR                   : 16
PARENTESIS_DERECHO   : 34 52 53 60 61 62 79 80 81 82 83
PARENTESIS_IZQUIERDO : 34 52 53 60 61 62 79 80 81 82 83
POR                  : 24
PRINT                : 60
PROCEDURE            : 58 79 79 80 80 82 82 83 83
PUNTO                : 
PUNTO_COMA           : 42 43 57 58 59 60 61 62 66 67 68 68 68 72 73 79 79 80 80 80 81 81 81 82 82 83 83 83
RETURN               : 80 81 83
TEXTO                : 
VALOR_FLOAT          : 38 49
VALOR_INT            : 37 41 48
WHILE                : 66 67
error                : 

Nonterminals, with rules where they appear

A                    : 42 57 68 68
AUX_AND              : 23
AUX_DIFERENTE        : 8
AUX_ELSE             : 73
AUX_ELSIF            : 74
AUX_ENDFOR           : 68
AUX_ENDIF            : 72 73
AUX_ENTRE            : 25
AUX_FOR1             : 68
AUX_IF               : 71
AUX_IGUAL            : 7
AUX_MAS              : 17
AUX_MAYOR            : 4
AUX_MAYOR_IGUAL      : 6
AUX_MENOR            : 3
AUX_MENOR_IGUAL      : 5
AUX_MENOS            : 18
AUX_MODULO           : 26
AUX_NOT              : 32
AUX_OR               : 16
AUX_POR              : 24
DO_WHILE             : 63
E                    : 34 50 66 67 68 71 74
E2                   : 2 3 3 4 4 5 5 6 6 7 7 8 8 16 17 18
E3                   : 15 16 17 18 23 24 25 26
E4                   : 22 23 24 25 26
ELSIF_               : 71 74
EST                  : 55 56 57 58 59 60 61 62 66 67 68 71 73 74 79 80 81 82 83
F                    : 87
FOR_                 : 65
ID_COMPLETO          : 36 43 48 49 50 51 51 52 53
IF_                  : 56
LOOP_                : 55
MP                   : 84
P                    : 86
PROGRAMA             : 0
PROGRAMA_H           : 84 86 87
RANGOS               : 39 41
T                    : 31 32
TIPO                 : 42 43 81
V                    : 47
V_M                  : 47 79 80 81 82 83
WHILE_               : 64
empty                : 9 10 11 12 13 14 19 20 21 27 28 29 30 33 40 46 54 69 70 75 76 77 78 85

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (84) PROGRAMA -> . MP PROGRAMA_H
    (82) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 3

    PROGRAMA                       shift and go to state 1
    MP                             shift and go to state 2

state 1

    (0) S' -> PROGRAMA .



state 2

    (84) PROGRAMA -> MP . PROGRAMA_H
    (85) PROGRAMA_H -> . empty
    (86) PROGRAMA_H -> . P PROGRAMA_H
    (87) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (79) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (81) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    $end            reduce using rule 1 (empty -> .)
    PROCEDURE       shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    PROGRAMA_H                     shift and go to state 4
    empty                          shift and go to state 5
    P                              shift and go to state 6
    F                              shift and go to state 7
    TIPO                           shift and go to state 9

state 3

    (82) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    MAIN            shift and go to state 12


state 4

    (84) PROGRAMA -> MP PROGRAMA_H .

    $end            reduce using rule 84 (PROGRAMA -> MP PROGRAMA_H .)


state 5

    (85) PROGRAMA_H -> empty .

    $end            reduce using rule 85 (PROGRAMA_H -> empty .)


state 6

    (86) PROGRAMA_H -> P . PROGRAMA_H
    (85) PROGRAMA_H -> . empty
    (86) PROGRAMA_H -> . P PROGRAMA_H
    (87) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (79) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (81) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    $end            reduce using rule 1 (empty -> .)
    PROCEDURE       shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    P                              shift and go to state 6
    PROGRAMA_H                     shift and go to state 13
    empty                          shift and go to state 5
    F                              shift and go to state 7
    TIPO                           shift and go to state 9

state 7

    (87) PROGRAMA_H -> F . PROGRAMA_H
    (85) PROGRAMA_H -> . empty
    (86) PROGRAMA_H -> . P PROGRAMA_H
    (87) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (79) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (81) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    $end            reduce using rule 1 (empty -> .)
    PROCEDURE       shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    F                              shift and go to state 7
    PROGRAMA_H                     shift and go to state 14
    empty                          shift and go to state 5
    P                              shift and go to state 6
    TIPO                           shift and go to state 9

state 8

    (79) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    ID              shift and go to state 15


state 9

    (81) F -> TIPO . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 16


state 10

    (44) TIPO -> INT .

    ID              reduce using rule 44 (TIPO -> INT .)
    DOS_PUNTOS      reduce using rule 44 (TIPO -> INT .)


state 11

    (45) TIPO -> FLOAT .

    ID              reduce using rule 45 (TIPO -> FLOAT .)
    DOS_PUNTOS      reduce using rule 45 (TIPO -> FLOAT .)


state 12

    (82) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 17


state 13

    (86) PROGRAMA_H -> P PROGRAMA_H .

    $end            reduce using rule 86 (PROGRAMA_H -> P PROGRAMA_H .)


state 14

    (87) PROGRAMA_H -> F PROGRAMA_H .

    $end            reduce using rule 87 (PROGRAMA_H -> F PROGRAMA_H .)


state 15

    (79) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 18


state 16

    (81) F -> TIPO ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 19


state 17

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 20


state 18

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 21


state 19

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 22


state 20

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    DOS_PUNTOS      shift and go to state 23


state 21

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    DOS_PUNTOS      shift and go to state 24


state 22

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    DOS_PUNTOS      shift and go to state 25


state 23

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    V_M                            shift and go to state 26
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 29

state 24

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    V_M                            shift and go to state 30
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 29

state 25

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    TIPO                           shift and go to state 29
    V_M                            shift and go to state 31
    empty                          shift and go to state 27
    V                              shift and go to state 28

state 26

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    BEGIN           shift and go to state 32


state 27

    (46) V_M -> empty .

    BEGIN           reduce using rule 46 (V_M -> empty .)


state 28

    (47) V_M -> V . V_M
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11

    V                              shift and go to state 28
    V_M                            shift and go to state 33
    empty                          shift and go to state 27
    TIPO                           shift and go to state 29

state 29

    (42) V -> TIPO . DOS_PUNTOS A PUNTO_COMA
    (43) V -> TIPO . DOS_PUNTOS ID_COMPLETO PUNTO_COMA

    DOS_PUNTOS      shift and go to state 34


state 30

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    BEGIN           shift and go to state 35


state 31

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    BEGIN           shift and go to state 36


state 32

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 37


state 33

    (47) V_M -> V V_M .

    BEGIN           reduce using rule 47 (V_M -> V V_M .)


state 34

    (42) V -> TIPO DOS_PUNTOS . A PUNTO_COMA
    (43) V -> TIPO DOS_PUNTOS . ID_COMPLETO PUNTO_COMA
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 38
    ID_COMPLETO                    shift and go to state 39

state 35

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 41


state 36

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 42


state 37

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 44
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 38

    (42) V -> TIPO DOS_PUNTOS A . PUNTO_COMA

    PUNTO_COMA      shift and go to state 61


state 39

    (43) V -> TIPO DOS_PUNTOS ID_COMPLETO . PUNTO_COMA
    (48) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (49) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (50) A -> ID_COMPLETO . ASIGNACION E
    (51) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (52) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PUNTO_COMA      shift and go to state 62
    ASIGNACION      shift and go to state 63


state 40

    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 66
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 64
    empty                          shift and go to state 65

state 41

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 67
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 42

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 68
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 43

    (58) EST -> PROCEDURE . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 69


state 44

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA
    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    END             shift and go to state 70
    RETURN          shift and go to state 71


state 45

    (54) EST -> empty .

    END             reduce using rule 54 (EST -> empty .)
    RETURN          reduce using rule 54 (EST -> empty .)
    ELSE            reduce using rule 54 (EST -> empty .)
    ELSIF           reduce using rule 54 (EST -> empty .)


state 46

    (55) EST -> LOOP_ . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    LOOP_                          shift and go to state 46
    EST                            shift and go to state 72
    empty                          shift and go to state 45
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 47

    (56) EST -> IF_ . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    IF_                            shift and go to state 47
    EST                            shift and go to state 73
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 48

    (57) EST -> A . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 74


state 49

    (59) EST -> FUNCTION . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 75


state 50

    (60) EST -> PRINT . PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 76


state 51

    (61) EST -> INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 77


state 52

    (62) EST -> ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 78
    CORCHETE_IZQUIERDO shift and go to state 66
    ASIGNACION      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 64
    empty                          shift and go to state 65

state 53

    (63) LOOP_ -> DO_WHILE .

    PROCEDURE       reduce using rule 63 (LOOP_ -> DO_WHILE .)
    FUNCTION        reduce using rule 63 (LOOP_ -> DO_WHILE .)
    PRINT           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    INPUT           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ID              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    IF              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    DO              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    WHILE           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    FOR             reduce using rule 63 (LOOP_ -> DO_WHILE .)
    END             reduce using rule 63 (LOOP_ -> DO_WHILE .)
    RETURN          reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ELSE            reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ELSIF           reduce using rule 63 (LOOP_ -> DO_WHILE .)


state 54

    (64) LOOP_ -> WHILE_ .

    PROCEDURE       reduce using rule 64 (LOOP_ -> WHILE_ .)
    FUNCTION        reduce using rule 64 (LOOP_ -> WHILE_ .)
    PRINT           reduce using rule 64 (LOOP_ -> WHILE_ .)
    INPUT           reduce using rule 64 (LOOP_ -> WHILE_ .)
    ID              reduce using rule 64 (LOOP_ -> WHILE_ .)
    IF              reduce using rule 64 (LOOP_ -> WHILE_ .)
    DO              reduce using rule 64 (LOOP_ -> WHILE_ .)
    WHILE           reduce using rule 64 (LOOP_ -> WHILE_ .)
    FOR             reduce using rule 64 (LOOP_ -> WHILE_ .)
    END             reduce using rule 64 (LOOP_ -> WHILE_ .)
    RETURN          reduce using rule 64 (LOOP_ -> WHILE_ .)
    ELSE            reduce using rule 64 (LOOP_ -> WHILE_ .)
    ELSIF           reduce using rule 64 (LOOP_ -> WHILE_ .)


state 55

    (65) LOOP_ -> FOR_ .

    PROCEDURE       reduce using rule 65 (LOOP_ -> FOR_ .)
    FUNCTION        reduce using rule 65 (LOOP_ -> FOR_ .)
    PRINT           reduce using rule 65 (LOOP_ -> FOR_ .)
    INPUT           reduce using rule 65 (LOOP_ -> FOR_ .)
    ID              reduce using rule 65 (LOOP_ -> FOR_ .)
    IF              reduce using rule 65 (LOOP_ -> FOR_ .)
    DO              reduce using rule 65 (LOOP_ -> FOR_ .)
    WHILE           reduce using rule 65 (LOOP_ -> FOR_ .)
    FOR             reduce using rule 65 (LOOP_ -> FOR_ .)
    END             reduce using rule 65 (LOOP_ -> FOR_ .)
    RETURN          reduce using rule 65 (LOOP_ -> FOR_ .)
    ELSE            reduce using rule 65 (LOOP_ -> FOR_ .)
    ELSIF           reduce using rule 65 (LOOP_ -> FOR_ .)


state 56

    (71) IF_ -> IF . E AUX_IF DOS_PUNTOS EST ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 79
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 57

    (48) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (49) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (50) A -> ID_COMPLETO . ASIGNACION E
    (51) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (52) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    ASIGNACION      shift and go to state 63


state 58

    (66) DO_WHILE -> DO . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA

    WHILE           shift and go to state 90


state 59

    (67) WHILE_ -> WHILE . E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 91
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 60

    (68) FOR_ -> FOR . A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 92
    ID_COMPLETO                    shift and go to state 57

state 61

    (42) V -> TIPO DOS_PUNTOS A PUNTO_COMA .

    INT             reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    FLOAT           reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    BEGIN           reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)


state 62

    (43) V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .

    INT             reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    FLOAT           reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    BEGIN           reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)


state 63

    (48) A -> ID_COMPLETO ASIGNACION . VALOR_INT
    (49) A -> ID_COMPLETO ASIGNACION . VALOR_FLOAT
    (50) A -> ID_COMPLETO ASIGNACION . E
    (51) A -> ID_COMPLETO ASIGNACION . ID_COMPLETO
    (52) A -> ID_COMPLETO ASIGNACION . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO ASIGNACION . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (39) ID_COMPLETO -> . ID RANGOS
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT

    VALOR_INT       shift and go to state 94
    VALOR_FLOAT     shift and go to state 95
    ID              shift and go to state 97
    INPUT           shift and go to state 98
    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86

    ID_COMPLETO                    shift and go to state 93
    E                              shift and go to state 96
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83

state 64

    (39) ID_COMPLETO -> ID RANGOS .

    PUNTO_COMA      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    ASIGNACION      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    AND             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    POR             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    ENTRE           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MODULO          reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOR           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAYOR           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOR_IGUAL     reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAYOR_IGUAL     reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    IGUAL           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    DIFERENTE       reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    OR              reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAS             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOS           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    DOS_PUNTOS      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    PARENTESIS_DERECHO reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)


state 65

    (40) RANGOS -> empty .

    PUNTO_COMA      reduce using rule 40 (RANGOS -> empty .)
    ASIGNACION      reduce using rule 40 (RANGOS -> empty .)
    AND             reduce using rule 40 (RANGOS -> empty .)
    POR             reduce using rule 40 (RANGOS -> empty .)
    ENTRE           reduce using rule 40 (RANGOS -> empty .)
    MODULO          reduce using rule 40 (RANGOS -> empty .)
    MENOR           reduce using rule 40 (RANGOS -> empty .)
    MAYOR           reduce using rule 40 (RANGOS -> empty .)
    MENOR_IGUAL     reduce using rule 40 (RANGOS -> empty .)
    MAYOR_IGUAL     reduce using rule 40 (RANGOS -> empty .)
    IGUAL           reduce using rule 40 (RANGOS -> empty .)
    DIFERENTE       reduce using rule 40 (RANGOS -> empty .)
    OR              reduce using rule 40 (RANGOS -> empty .)
    MAS             reduce using rule 40 (RANGOS -> empty .)
    MENOS           reduce using rule 40 (RANGOS -> empty .)
    DOS_PUNTOS      reduce using rule 40 (RANGOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 40 (RANGOS -> empty .)


state 66

    (41) RANGOS -> CORCHETE_IZQUIERDO . VALOR_INT CORCHETE_DERECHO RANGOS

    VALOR_INT       shift and go to state 99


state 67

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA
    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    END             shift and go to state 100
    RETURN          shift and go to state 101


state 68

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    RETURN          shift and go to state 102


state 69

    (58) EST -> PROCEDURE PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 103
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 70

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 104


state 71

    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 105


state 72

    (55) EST -> LOOP_ EST .

    END             reduce using rule 55 (EST -> LOOP_ EST .)
    RETURN          reduce using rule 55 (EST -> LOOP_ EST .)
    ELSE            reduce using rule 55 (EST -> LOOP_ EST .)
    ELSIF           reduce using rule 55 (EST -> LOOP_ EST .)


state 73

    (56) EST -> IF_ EST .

    END             reduce using rule 56 (EST -> IF_ EST .)
    RETURN          reduce using rule 56 (EST -> IF_ EST .)
    ELSE            reduce using rule 56 (EST -> IF_ EST .)
    ELSIF           reduce using rule 56 (EST -> IF_ EST .)


state 74

    (57) EST -> A PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    A                              shift and go to state 48
    EST                            shift and go to state 106
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 75

    (59) EST -> FUNCTION PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 107
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 76

    (60) EST -> PRINT PARENTESIS_IZQUIERDO . COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 108


state 77

    (61) EST -> INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 109


state 78

    (62) EST -> ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 110


state 79

    (71) IF_ -> IF E . AUX_IF DOS_PUNTOS EST ELSIF_
    (75) AUX_IF -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_IF                         shift and go to state 111
    empty                          shift and go to state 112

state 80

    (2) E -> E2 .
    (3) E -> E2 . MENOR E2 AUX_MENOR
    (4) E -> E2 . MAYOR E2 AUX_MAYOR
    (5) E -> E2 . MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> E2 . MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> E2 . IGUAL E2 AUX_IGUAL
    (8) E -> E2 . DIFERENTE E2 AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS

    DOS_PUNTOS      reduce using rule 2 (E -> E2 .)
    PUNTO_COMA      reduce using rule 2 (E -> E2 .)
    PARENTESIS_DERECHO reduce using rule 2 (E -> E2 .)
    MENOR           shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR_IGUAL     shift and go to state 115
    MAYOR_IGUAL     shift and go to state 116
    IGUAL           shift and go to state 117
    DIFERENTE       shift and go to state 118
    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121


state 81

    (15) E2 -> E3 .
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO

    MENOR           reduce using rule 15 (E2 -> E3 .)
    MAYOR           reduce using rule 15 (E2 -> E3 .)
    MENOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    MAYOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    IGUAL           reduce using rule 15 (E2 -> E3 .)
    DIFERENTE       reduce using rule 15 (E2 -> E3 .)
    OR              reduce using rule 15 (E2 -> E3 .)
    MAS             reduce using rule 15 (E2 -> E3 .)
    MENOS           reduce using rule 15 (E2 -> E3 .)
    DOS_PUNTOS      reduce using rule 15 (E2 -> E3 .)
    PUNTO_COMA      reduce using rule 15 (E2 -> E3 .)
    PARENTESIS_DERECHO reduce using rule 15 (E2 -> E3 .)
    AND             shift and go to state 122
    POR             shift and go to state 123
    ENTRE           shift and go to state 124
    MODULO          shift and go to state 125


state 82

    (22) E3 -> E4 .

    AND             reduce using rule 22 (E3 -> E4 .)
    POR             reduce using rule 22 (E3 -> E4 .)
    ENTRE           reduce using rule 22 (E3 -> E4 .)
    MODULO          reduce using rule 22 (E3 -> E4 .)
    MENOR           reduce using rule 22 (E3 -> E4 .)
    MAYOR           reduce using rule 22 (E3 -> E4 .)
    MENOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    MAYOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    IGUAL           reduce using rule 22 (E3 -> E4 .)
    DIFERENTE       reduce using rule 22 (E3 -> E4 .)
    OR              reduce using rule 22 (E3 -> E4 .)
    MAS             reduce using rule 22 (E3 -> E4 .)
    MENOS           reduce using rule 22 (E3 -> E4 .)
    DOS_PUNTOS      reduce using rule 22 (E3 -> E4 .)
    PUNTO_COMA      reduce using rule 22 (E3 -> E4 .)
    PARENTESIS_DERECHO reduce using rule 22 (E3 -> E4 .)


state 83

    (31) E4 -> T .

    AND             reduce using rule 31 (E4 -> T .)
    POR             reduce using rule 31 (E4 -> T .)
    ENTRE           reduce using rule 31 (E4 -> T .)
    MODULO          reduce using rule 31 (E4 -> T .)
    MENOR           reduce using rule 31 (E4 -> T .)
    MAYOR           reduce using rule 31 (E4 -> T .)
    MENOR_IGUAL     reduce using rule 31 (E4 -> T .)
    MAYOR_IGUAL     reduce using rule 31 (E4 -> T .)
    IGUAL           reduce using rule 31 (E4 -> T .)
    DIFERENTE       reduce using rule 31 (E4 -> T .)
    OR              reduce using rule 31 (E4 -> T .)
    MAS             reduce using rule 31 (E4 -> T .)
    MENOS           reduce using rule 31 (E4 -> T .)
    DOS_PUNTOS      reduce using rule 31 (E4 -> T .)
    PUNTO_COMA      reduce using rule 31 (E4 -> T .)
    PARENTESIS_DERECHO reduce using rule 31 (E4 -> T .)


state 84

    (32) E4 -> NOT . T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    T                              shift and go to state 126
    ID_COMPLETO                    shift and go to state 87

state 85

    (34) T -> PARENTESIS_IZQUIERDO . E PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 127
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 86

    (35) T -> FUNCTION .

    AND             reduce using rule 35 (T -> FUNCTION .)
    POR             reduce using rule 35 (T -> FUNCTION .)
    ENTRE           reduce using rule 35 (T -> FUNCTION .)
    MODULO          reduce using rule 35 (T -> FUNCTION .)
    MENOR           reduce using rule 35 (T -> FUNCTION .)
    MAYOR           reduce using rule 35 (T -> FUNCTION .)
    MENOR_IGUAL     reduce using rule 35 (T -> FUNCTION .)
    MAYOR_IGUAL     reduce using rule 35 (T -> FUNCTION .)
    IGUAL           reduce using rule 35 (T -> FUNCTION .)
    DIFERENTE       reduce using rule 35 (T -> FUNCTION .)
    OR              reduce using rule 35 (T -> FUNCTION .)
    MAS             reduce using rule 35 (T -> FUNCTION .)
    MENOS           reduce using rule 35 (T -> FUNCTION .)
    DOS_PUNTOS      reduce using rule 35 (T -> FUNCTION .)
    PUNTO_COMA      reduce using rule 35 (T -> FUNCTION .)
    PARENTESIS_DERECHO reduce using rule 35 (T -> FUNCTION .)


state 87

    (36) T -> ID_COMPLETO .

    AND             reduce using rule 36 (T -> ID_COMPLETO .)
    POR             reduce using rule 36 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 36 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 36 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 36 (T -> ID_COMPLETO .)
    OR              reduce using rule 36 (T -> ID_COMPLETO .)
    MAS             reduce using rule 36 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 36 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 36 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 36 (T -> ID_COMPLETO .)
    PARENTESIS_DERECHO reduce using rule 36 (T -> ID_COMPLETO .)


state 88

    (37) T -> VALOR_INT .

    AND             reduce using rule 37 (T -> VALOR_INT .)
    POR             reduce using rule 37 (T -> VALOR_INT .)
    ENTRE           reduce using rule 37 (T -> VALOR_INT .)
    MODULO          reduce using rule 37 (T -> VALOR_INT .)
    MENOR           reduce using rule 37 (T -> VALOR_INT .)
    MAYOR           reduce using rule 37 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    IGUAL           reduce using rule 37 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_INT .)
    OR              reduce using rule 37 (T -> VALOR_INT .)
    MAS             reduce using rule 37 (T -> VALOR_INT .)
    MENOS           reduce using rule 37 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_INT .)
    PARENTESIS_DERECHO reduce using rule 37 (T -> VALOR_INT .)


state 89

    (38) T -> VALOR_FLOAT .

    AND             reduce using rule 38 (T -> VALOR_FLOAT .)
    POR             reduce using rule 38 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 38 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 38 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 38 (T -> VALOR_FLOAT .)
    OR              reduce using rule 38 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 38 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 38 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 38 (T -> VALOR_FLOAT .)
    PARENTESIS_DERECHO reduce using rule 38 (T -> VALOR_FLOAT .)


state 90

    (66) DO_WHILE -> DO WHILE . E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 128
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 91

    (67) WHILE_ -> WHILE E . DOS_PUNTOS EST END LOOP PUNTO_COMA

    DOS_PUNTOS      shift and go to state 129


state 92

    (68) FOR_ -> FOR A . PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 130


state 93

    (51) A -> ID_COMPLETO ASIGNACION ID_COMPLETO .
    (36) T -> ID_COMPLETO .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 36 (T -> ID_COMPLETO .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 36 (T -> ID_COMPLETO .)
    AND             reduce using rule 36 (T -> ID_COMPLETO .)
    POR             reduce using rule 36 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 36 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 36 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 36 (T -> ID_COMPLETO .)
    OR              reduce using rule 36 (T -> ID_COMPLETO .)
    MAS             reduce using rule 36 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 36 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 36 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 36 (T -> ID_COMPLETO .)

  ! PUNTO_COMA      [ reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]
  ! DOS_PUNTOS      [ reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]


state 94

    (48) A -> ID_COMPLETO ASIGNACION VALOR_INT .
    (37) T -> VALOR_INT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 37 (T -> VALOR_INT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 37 (T -> VALOR_INT .)
    AND             reduce using rule 37 (T -> VALOR_INT .)
    POR             reduce using rule 37 (T -> VALOR_INT .)
    ENTRE           reduce using rule 37 (T -> VALOR_INT .)
    MODULO          reduce using rule 37 (T -> VALOR_INT .)
    MENOR           reduce using rule 37 (T -> VALOR_INT .)
    MAYOR           reduce using rule 37 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    IGUAL           reduce using rule 37 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_INT .)
    OR              reduce using rule 37 (T -> VALOR_INT .)
    MAS             reduce using rule 37 (T -> VALOR_INT .)
    MENOS           reduce using rule 37 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_INT .)

  ! PUNTO_COMA      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]
  ! DOS_PUNTOS      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]


state 95

    (49) A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .
    (38) T -> VALOR_FLOAT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 38 (T -> VALOR_FLOAT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 38 (T -> VALOR_FLOAT .)
    AND             reduce using rule 38 (T -> VALOR_FLOAT .)
    POR             reduce using rule 38 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 38 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 38 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 38 (T -> VALOR_FLOAT .)
    OR              reduce using rule 38 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 38 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 38 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 38 (T -> VALOR_FLOAT .)

  ! PUNTO_COMA      [ reduce using rule 49 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]
  ! DOS_PUNTOS      [ reduce using rule 49 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]


state 96

    (50) A -> ID_COMPLETO ASIGNACION E .

    PUNTO_COMA      reduce using rule 50 (A -> ID_COMPLETO ASIGNACION E .)
    DOS_PUNTOS      reduce using rule 50 (A -> ID_COMPLETO ASIGNACION E .)


state 97

    (52) A -> ID_COMPLETO ASIGNACION ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 131
    CORCHETE_IZQUIERDO shift and go to state 66
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 64
    empty                          shift and go to state 65

state 98

    (53) A -> ID_COMPLETO ASIGNACION INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PARENTESIS_IZQUIERDO shift and go to state 132


state 99

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT . CORCHETE_DERECHO RANGOS

    CORCHETE_DERECHO shift and go to state 133


state 100

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 134


state 101

    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 135


state 102

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 136


state 103

    (58) EST -> PROCEDURE PUNTO_COMA EST .

    END             reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    RETURN          reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    ELSE            reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    ELSIF           reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)


state 104

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 137


state 105

    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA

    END             shift and go to state 138


state 106

    (57) EST -> A PUNTO_COMA EST .

    END             reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    RETURN          reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    ELSE            reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    ELSIF           reduce using rule 57 (EST -> A PUNTO_COMA EST .)


state 107

    (59) EST -> FUNCTION PUNTO_COMA EST .

    END             reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    RETURN          reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    ELSE            reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    ELSIF           reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)


state 108

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS . COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 139


state 109

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 140


state 110

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 141


state 111

    (71) IF_ -> IF E AUX_IF . DOS_PUNTOS EST ELSIF_

    DOS_PUNTOS      shift and go to state 142


state 112

    (75) AUX_IF -> empty .

    DOS_PUNTOS      reduce using rule 75 (AUX_IF -> empty .)


state 113

    (3) E -> E2 MENOR . E2 AUX_MENOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 143
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 114

    (4) E -> E2 MAYOR . E2 AUX_MAYOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 144
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 115

    (5) E -> E2 MENOR_IGUAL . E2 AUX_MENOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 145
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 116

    (6) E -> E2 MAYOR_IGUAL . E2 AUX_MAYOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 146
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 117

    (7) E -> E2 IGUAL . E2 AUX_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 147
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 118

    (8) E -> E2 DIFERENTE . E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E2                             shift and go to state 148
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 119

    (16) E2 -> E2 OR . E3 AUX_OR
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E3                             shift and go to state 149
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 120

    (17) E2 -> E2 MAS . E3 AUX_MAS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E3                             shift and go to state 150
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 121

    (18) E2 -> E2 MENOS . E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E3                             shift and go to state 151
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 122

    (23) E3 -> E3 AND . E4 AUX_AND
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E4                             shift and go to state 152
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 123

    (24) E3 -> E3 POR . E4 AUX_POR
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E4                             shift and go to state 153
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 124

    (25) E3 -> E3 ENTRE . E4 AUX_ENTRE
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E4                             shift and go to state 154
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 125

    (26) E3 -> E3 MODULO . E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E4                             shift and go to state 155
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 126

    (32) E4 -> NOT T . AUX_NOT
    (33) AUX_NOT -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_NOT                        shift and go to state 156
    empty                          shift and go to state 157

state 127

    (34) T -> PARENTESIS_IZQUIERDO E . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 158


state 128

    (66) DO_WHILE -> DO WHILE E . DOS_PUNTOS EST END LOOP PUNTO_COMA

    DOS_PUNTOS      shift and go to state 159


state 129

    (67) WHILE_ -> WHILE E DOS_PUNTOS . EST END LOOP PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 160
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 130

    (68) FOR_ -> FOR A PUNTO_COMA . E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 161
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 131

    (52) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 162


state 132

    (53) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 163


state 133

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 66
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 164
    empty                          shift and go to state 65

state 134

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 165


state 135

    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA

    END             shift and go to state 166


state 136

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID . PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 167


state 137

    (82) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 82 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 82 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 82 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 82 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)


state 138

    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 168


state 139

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 169


state 140

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 170
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 141

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 171
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 142

    (71) IF_ -> IF E AUX_IF DOS_PUNTOS . EST ELSIF_
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 172
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 143

    (3) E -> E2 MENOR E2 . AUX_MENOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (9) AUX_MENOR -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR                      shift and go to state 173
    empty                          shift and go to state 174

state 144

    (4) E -> E2 MAYOR E2 . AUX_MAYOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (10) AUX_MAYOR -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR                      shift and go to state 175
    empty                          shift and go to state 176

state 145

    (5) E -> E2 MENOR_IGUAL E2 . AUX_MENOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (11) AUX_MENOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR_IGUAL                shift and go to state 177
    empty                          shift and go to state 178

state 146

    (6) E -> E2 MAYOR_IGUAL E2 . AUX_MAYOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (12) AUX_MAYOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR_IGUAL                shift and go to state 179
    empty                          shift and go to state 180

state 147

    (7) E -> E2 IGUAL E2 . AUX_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (13) AUX_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_IGUAL                      shift and go to state 181
    empty                          shift and go to state 182

state 148

    (8) E -> E2 DIFERENTE E2 . AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (14) AUX_DIFERENTE -> . empty
    (1) empty -> .

    OR              shift and go to state 119
    MAS             shift and go to state 120
    MENOS           shift and go to state 121
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_DIFERENTE                  shift and go to state 183
    empty                          shift and go to state 184

state 149

    (16) E2 -> E2 OR E3 . AUX_OR
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (19) AUX_OR -> . empty
    (1) empty -> .

    AND             shift and go to state 122
    POR             shift and go to state 123
    ENTRE           shift and go to state 124
    MODULO          shift and go to state 125
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_OR                         shift and go to state 185
    empty                          shift and go to state 186

state 150

    (17) E2 -> E2 MAS E3 . AUX_MAS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (20) AUX_MAS -> . empty
    (1) empty -> .

    AND             shift and go to state 122
    POR             shift and go to state 123
    ENTRE           shift and go to state 124
    MODULO          shift and go to state 125
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAS                        shift and go to state 187
    empty                          shift and go to state 188

state 151

    (18) E2 -> E2 MENOS E3 . AUX_MENOS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (21) AUX_MENOS -> . empty
    (1) empty -> .

    AND             shift and go to state 122
    POR             shift and go to state 123
    ENTRE           shift and go to state 124
    MODULO          shift and go to state 125
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOS                      shift and go to state 189
    empty                          shift and go to state 190

state 152

    (23) E3 -> E3 AND E4 . AUX_AND
    (27) AUX_AND -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_AND                        shift and go to state 191
    empty                          shift and go to state 192

state 153

    (24) E3 -> E3 POR E4 . AUX_POR
    (28) AUX_POR -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_POR                        shift and go to state 193
    empty                          shift and go to state 194

state 154

    (25) E3 -> E3 ENTRE E4 . AUX_ENTRE
    (29) AUX_ENTRE -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_ENTRE                      shift and go to state 195
    empty                          shift and go to state 196

state 155

    (26) E3 -> E3 MODULO E4 . AUX_MODULO
    (30) AUX_MODULO -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MODULO                     shift and go to state 197
    empty                          shift and go to state 198

state 156

    (32) E4 -> NOT T AUX_NOT .

    AND             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    POR             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    ENTRE           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MODULO          reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    IGUAL           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DIFERENTE       reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    OR              reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAS             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOS           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DOS_PUNTOS      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PUNTO_COMA      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PARENTESIS_DERECHO reduce using rule 32 (E4 -> NOT T AUX_NOT .)


state 157

    (33) AUX_NOT -> empty .

    AND             reduce using rule 33 (AUX_NOT -> empty .)
    POR             reduce using rule 33 (AUX_NOT -> empty .)
    ENTRE           reduce using rule 33 (AUX_NOT -> empty .)
    MODULO          reduce using rule 33 (AUX_NOT -> empty .)
    MENOR           reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR           reduce using rule 33 (AUX_NOT -> empty .)
    MENOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    IGUAL           reduce using rule 33 (AUX_NOT -> empty .)
    DIFERENTE       reduce using rule 33 (AUX_NOT -> empty .)
    OR              reduce using rule 33 (AUX_NOT -> empty .)
    MAS             reduce using rule 33 (AUX_NOT -> empty .)
    MENOS           reduce using rule 33 (AUX_NOT -> empty .)
    DOS_PUNTOS      reduce using rule 33 (AUX_NOT -> empty .)
    PUNTO_COMA      reduce using rule 33 (AUX_NOT -> empty .)
    PARENTESIS_DERECHO reduce using rule 33 (AUX_NOT -> empty .)


state 158

    (34) T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .

    AND             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    POR             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    ENTRE           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MODULO          reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DIFERENTE       reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    OR              reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAS             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOS           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PUNTO_COMA      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)


state 159

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS . EST END LOOP PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 199
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 160

    (67) WHILE_ -> WHILE E DOS_PUNTOS EST . END LOOP PUNTO_COMA

    END             shift and go to state 200


state 161

    (68) FOR_ -> FOR A PUNTO_COMA E . AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (69) AUX_FOR1 -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_FOR1                       shift and go to state 201
    empty                          shift and go to state 202

state 162

    (52) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 163

    (53) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 53 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 53 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 164

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .

    PUNTO_COMA      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ASIGNACION      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    AND             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    POR             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ENTRE           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MODULO          reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR_IGUAL     reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR_IGUAL     reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    IGUAL           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DIFERENTE       reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    OR              reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAS             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOS           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DOS_PUNTOS      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    PARENTESIS_DERECHO reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)


state 165

    (79) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 79 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 79 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 79 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 79 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)


state 166

    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 203


state 167

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA . END FUNCTION PUNTO_COMA

    END             shift and go to state 204


state 168

    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 205


state 169

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 206


state 170

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)


state 171

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)


state 172

    (71) IF_ -> IF E AUX_IF DOS_PUNTOS EST . ELSIF_
    (72) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (73) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA
    (74) ELSIF_ -> . ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_

    END             shift and go to state 208
    ELSE            shift and go to state 209
    ELSIF           shift and go to state 210

    ELSIF_                         shift and go to state 207

state 173

    (3) E -> E2 MENOR E2 AUX_MENOR .

    DOS_PUNTOS      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    PUNTO_COMA      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    PARENTESIS_DERECHO reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)


state 174

    (9) AUX_MENOR -> empty .

    DOS_PUNTOS      reduce using rule 9 (AUX_MENOR -> empty .)
    PUNTO_COMA      reduce using rule 9 (AUX_MENOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 9 (AUX_MENOR -> empty .)


state 175

    (4) E -> E2 MAYOR E2 AUX_MAYOR .

    DOS_PUNTOS      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    PUNTO_COMA      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    PARENTESIS_DERECHO reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)


state 176

    (10) AUX_MAYOR -> empty .

    DOS_PUNTOS      reduce using rule 10 (AUX_MAYOR -> empty .)
    PUNTO_COMA      reduce using rule 10 (AUX_MAYOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 10 (AUX_MAYOR -> empty .)


state 177

    (5) E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .

    DOS_PUNTOS      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    PUNTO_COMA      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)


state 178

    (11) AUX_MENOR_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)


state 179

    (6) E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .

    DOS_PUNTOS      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    PUNTO_COMA      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)


state 180

    (12) AUX_MAYOR_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)


state 181

    (7) E -> E2 IGUAL E2 AUX_IGUAL .

    DOS_PUNTOS      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    PUNTO_COMA      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)


state 182

    (13) AUX_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 13 (AUX_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 13 (AUX_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 13 (AUX_IGUAL -> empty .)


state 183

    (8) E -> E2 DIFERENTE E2 AUX_DIFERENTE .

    DOS_PUNTOS      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    PUNTO_COMA      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    PARENTESIS_DERECHO reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)


state 184

    (14) AUX_DIFERENTE -> empty .

    DOS_PUNTOS      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    PUNTO_COMA      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    PARENTESIS_DERECHO reduce using rule 14 (AUX_DIFERENTE -> empty .)


state 185

    (16) E2 -> E2 OR E3 AUX_OR .

    MENOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    IGUAL           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DIFERENTE       reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    OR              reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAS             reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOS           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DOS_PUNTOS      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PUNTO_COMA      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PARENTESIS_DERECHO reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)


state 186

    (19) AUX_OR -> empty .

    MENOR           reduce using rule 19 (AUX_OR -> empty .)
    MAYOR           reduce using rule 19 (AUX_OR -> empty .)
    MENOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    MAYOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    IGUAL           reduce using rule 19 (AUX_OR -> empty .)
    DIFERENTE       reduce using rule 19 (AUX_OR -> empty .)
    OR              reduce using rule 19 (AUX_OR -> empty .)
    MAS             reduce using rule 19 (AUX_OR -> empty .)
    MENOS           reduce using rule 19 (AUX_OR -> empty .)
    DOS_PUNTOS      reduce using rule 19 (AUX_OR -> empty .)
    PUNTO_COMA      reduce using rule 19 (AUX_OR -> empty .)
    PARENTESIS_DERECHO reduce using rule 19 (AUX_OR -> empty .)


state 187

    (17) E2 -> E2 MAS E3 AUX_MAS .

    MENOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    IGUAL           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DIFERENTE       reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    OR              reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAS             reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOS           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DOS_PUNTOS      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PUNTO_COMA      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PARENTESIS_DERECHO reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)


state 188

    (20) AUX_MAS -> empty .

    MENOR           reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR           reduce using rule 20 (AUX_MAS -> empty .)
    MENOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    IGUAL           reduce using rule 20 (AUX_MAS -> empty .)
    DIFERENTE       reduce using rule 20 (AUX_MAS -> empty .)
    OR              reduce using rule 20 (AUX_MAS -> empty .)
    MAS             reduce using rule 20 (AUX_MAS -> empty .)
    MENOS           reduce using rule 20 (AUX_MAS -> empty .)
    DOS_PUNTOS      reduce using rule 20 (AUX_MAS -> empty .)
    PUNTO_COMA      reduce using rule 20 (AUX_MAS -> empty .)
    PARENTESIS_DERECHO reduce using rule 20 (AUX_MAS -> empty .)


state 189

    (18) E2 -> E2 MENOS E3 AUX_MENOS .

    MENOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    IGUAL           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DIFERENTE       reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    OR              reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAS             reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOS           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DOS_PUNTOS      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PUNTO_COMA      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PARENTESIS_DERECHO reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)


state 190

    (21) AUX_MENOS -> empty .

    MENOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MENOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    IGUAL           reduce using rule 21 (AUX_MENOS -> empty .)
    DIFERENTE       reduce using rule 21 (AUX_MENOS -> empty .)
    OR              reduce using rule 21 (AUX_MENOS -> empty .)
    MAS             reduce using rule 21 (AUX_MENOS -> empty .)
    MENOS           reduce using rule 21 (AUX_MENOS -> empty .)
    DOS_PUNTOS      reduce using rule 21 (AUX_MENOS -> empty .)
    PUNTO_COMA      reduce using rule 21 (AUX_MENOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 21 (AUX_MENOS -> empty .)


state 191

    (23) E3 -> E3 AND E4 AUX_AND .

    AND             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    POR             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    ENTRE           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MODULO          reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    IGUAL           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DIFERENTE       reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    OR              reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAS             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOS           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DOS_PUNTOS      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PUNTO_COMA      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PARENTESIS_DERECHO reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)


state 192

    (27) AUX_AND -> empty .

    AND             reduce using rule 27 (AUX_AND -> empty .)
    POR             reduce using rule 27 (AUX_AND -> empty .)
    ENTRE           reduce using rule 27 (AUX_AND -> empty .)
    MODULO          reduce using rule 27 (AUX_AND -> empty .)
    MENOR           reduce using rule 27 (AUX_AND -> empty .)
    MAYOR           reduce using rule 27 (AUX_AND -> empty .)
    MENOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    MAYOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    IGUAL           reduce using rule 27 (AUX_AND -> empty .)
    DIFERENTE       reduce using rule 27 (AUX_AND -> empty .)
    OR              reduce using rule 27 (AUX_AND -> empty .)
    MAS             reduce using rule 27 (AUX_AND -> empty .)
    MENOS           reduce using rule 27 (AUX_AND -> empty .)
    DOS_PUNTOS      reduce using rule 27 (AUX_AND -> empty .)
    PUNTO_COMA      reduce using rule 27 (AUX_AND -> empty .)
    PARENTESIS_DERECHO reduce using rule 27 (AUX_AND -> empty .)


state 193

    (24) E3 -> E3 POR E4 AUX_POR .

    AND             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    POR             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    ENTRE           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MODULO          reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    IGUAL           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DIFERENTE       reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    OR              reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAS             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOS           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DOS_PUNTOS      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PUNTO_COMA      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PARENTESIS_DERECHO reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)


state 194

    (28) AUX_POR -> empty .

    AND             reduce using rule 28 (AUX_POR -> empty .)
    POR             reduce using rule 28 (AUX_POR -> empty .)
    ENTRE           reduce using rule 28 (AUX_POR -> empty .)
    MODULO          reduce using rule 28 (AUX_POR -> empty .)
    MENOR           reduce using rule 28 (AUX_POR -> empty .)
    MAYOR           reduce using rule 28 (AUX_POR -> empty .)
    MENOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    MAYOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    IGUAL           reduce using rule 28 (AUX_POR -> empty .)
    DIFERENTE       reduce using rule 28 (AUX_POR -> empty .)
    OR              reduce using rule 28 (AUX_POR -> empty .)
    MAS             reduce using rule 28 (AUX_POR -> empty .)
    MENOS           reduce using rule 28 (AUX_POR -> empty .)
    DOS_PUNTOS      reduce using rule 28 (AUX_POR -> empty .)
    PUNTO_COMA      reduce using rule 28 (AUX_POR -> empty .)
    PARENTESIS_DERECHO reduce using rule 28 (AUX_POR -> empty .)


state 195

    (25) E3 -> E3 ENTRE E4 AUX_ENTRE .

    AND             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    POR             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    ENTRE           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MODULO          reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    IGUAL           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DIFERENTE       reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    OR              reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAS             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOS           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DOS_PUNTOS      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PUNTO_COMA      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PARENTESIS_DERECHO reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)


state 196

    (29) AUX_ENTRE -> empty .

    AND             reduce using rule 29 (AUX_ENTRE -> empty .)
    POR             reduce using rule 29 (AUX_ENTRE -> empty .)
    ENTRE           reduce using rule 29 (AUX_ENTRE -> empty .)
    MODULO          reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    IGUAL           reduce using rule 29 (AUX_ENTRE -> empty .)
    DIFERENTE       reduce using rule 29 (AUX_ENTRE -> empty .)
    OR              reduce using rule 29 (AUX_ENTRE -> empty .)
    MAS             reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOS           reduce using rule 29 (AUX_ENTRE -> empty .)
    DOS_PUNTOS      reduce using rule 29 (AUX_ENTRE -> empty .)
    PUNTO_COMA      reduce using rule 29 (AUX_ENTRE -> empty .)
    PARENTESIS_DERECHO reduce using rule 29 (AUX_ENTRE -> empty .)


state 197

    (26) E3 -> E3 MODULO E4 AUX_MODULO .

    AND             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    POR             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    ENTRE           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MODULO          reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    IGUAL           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DIFERENTE       reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    OR              reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAS             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOS           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DOS_PUNTOS      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PUNTO_COMA      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PARENTESIS_DERECHO reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)


state 198

    (30) AUX_MODULO -> empty .

    AND             reduce using rule 30 (AUX_MODULO -> empty .)
    POR             reduce using rule 30 (AUX_MODULO -> empty .)
    ENTRE           reduce using rule 30 (AUX_MODULO -> empty .)
    MODULO          reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    IGUAL           reduce using rule 30 (AUX_MODULO -> empty .)
    DIFERENTE       reduce using rule 30 (AUX_MODULO -> empty .)
    OR              reduce using rule 30 (AUX_MODULO -> empty .)
    MAS             reduce using rule 30 (AUX_MODULO -> empty .)
    MENOS           reduce using rule 30 (AUX_MODULO -> empty .)
    DOS_PUNTOS      reduce using rule 30 (AUX_MODULO -> empty .)
    PUNTO_COMA      reduce using rule 30 (AUX_MODULO -> empty .)
    PARENTESIS_DERECHO reduce using rule 30 (AUX_MODULO -> empty .)


state 199

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST . END LOOP PUNTO_COMA

    END             shift and go to state 211


state 200

    (67) WHILE_ -> WHILE E DOS_PUNTOS EST END . LOOP PUNTO_COMA

    LOOP            shift and go to state 212


state 201

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 . PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 213


state 202

    (69) AUX_FOR1 -> empty .

    PUNTO_COMA      reduce using rule 69 (AUX_FOR1 -> empty .)


state 203

    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 214


state 204

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END . FUNCTION PUNTO_COMA

    FUNCTION        shift and go to state 215


state 205

    (83) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 83 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 83 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 83 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 83 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)


state 206

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 216
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 207

    (71) IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .

    PROCEDURE       reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    FUNCTION        reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    PRINT           reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    INPUT           reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    ID              reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    IF              reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    DO              reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    WHILE           reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    FOR             reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    END             reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    RETURN          reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    ELSE            reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)
    ELSIF           reduce using rule 71 (IF_ -> IF E AUX_IF DOS_PUNTOS EST ELSIF_ .)


state 208

    (72) ELSIF_ -> END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 217


state 209

    (73) ELSIF_ -> ELSE . AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA
    (77) AUX_ELSE -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSE                       shift and go to state 218
    empty                          shift and go to state 219

state 210

    (74) ELSIF_ -> ELSIF . E AUX_ELSIF DOS_PUNTOS EST ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 84
    PARENTESIS_IZQUIERDO shift and go to state 85
    FUNCTION        shift and go to state 86
    VALOR_INT       shift and go to state 88
    VALOR_FLOAT     shift and go to state 89
    ID              shift and go to state 40

    E                              shift and go to state 220
    E2                             shift and go to state 80
    E3                             shift and go to state 81
    E4                             shift and go to state 82
    T                              shift and go to state 83
    ID_COMPLETO                    shift and go to state 87

state 211

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END . LOOP PUNTO_COMA

    LOOP            shift and go to state 221


state 212

    (67) WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP . PUNTO_COMA

    PUNTO_COMA      shift and go to state 222


state 213

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA . A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 223
    ID_COMPLETO                    shift and go to state 57

state 214

    (80) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 80 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 80 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 80 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 80 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)


state 215

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 224


state 216

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)


state 217

    (72) ELSIF_ -> END IF . AUX_ENDIF PUNTO_COMA
    (78) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 225
    empty                          shift and go to state 226

state 218

    (73) ELSIF_ -> ELSE AUX_ELSE . DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA

    DOS_PUNTOS      shift and go to state 227


state 219

    (77) AUX_ELSE -> empty .

    DOS_PUNTOS      reduce using rule 77 (AUX_ELSE -> empty .)


state 220

    (74) ELSIF_ -> ELSIF E . AUX_ELSIF DOS_PUNTOS EST ELSIF_
    (76) AUX_ELSIF -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSIF                      shift and go to state 228
    empty                          shift and go to state 229

state 221

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP . PUNTO_COMA

    PUNTO_COMA      shift and go to state 230


state 222

    (67) WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .

    PROCEDURE       reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FUNCTION        reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    PRINT           reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    INPUT           reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ID              reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    IF              reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    DO              reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    WHILE           reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FOR             reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    END             reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    RETURN          reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSE            reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSIF           reduce using rule 67 (WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)


state 223

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A . DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    DOS_PUNTOS      shift and go to state 231


state 224

    (81) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .

    PROCEDURE       reduce using rule 81 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    INT             reduce using rule 81 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    FLOAT           reduce using rule 81 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    $end            reduce using rule 81 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)


state 225

    (72) ELSIF_ -> END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 232


state 226

    (78) AUX_ENDIF -> empty .

    PUNTO_COMA      reduce using rule 78 (AUX_ENDIF -> empty .)


state 227

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS . EST END IF AUX_ENDIF PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 233
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 228

    (74) ELSIF_ -> ELSIF E AUX_ELSIF . DOS_PUNTOS EST ELSIF_

    DOS_PUNTOS      shift and go to state 234


state 229

    (76) AUX_ELSIF -> empty .

    DOS_PUNTOS      reduce using rule 76 (AUX_ELSIF -> empty .)


state 230

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .

    PROCEDURE       reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FUNCTION        reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    PRINT           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    INPUT           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ID              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    IF              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    DO              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    WHILE           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FOR             reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    END             reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    RETURN          reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSE            reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSIF           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)


state 231

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS . EST END LOOP PUNTO_COMA AUX_ENDFOR
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    A                              shift and go to state 48
    EST                            shift and go to state 235
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 232

    (72) ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .

    PROCEDURE       reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    FUNCTION        reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    PRINT           reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 72 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)


state 233

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST . END IF AUX_ENDIF PUNTO_COMA

    END             shift and go to state 236


state 234

    (74) ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS . EST ELSIF_
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (71) IF_ -> . IF E AUX_IF DOS_PUNTOS EST ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (68) FOR_ -> . FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 43
    FUNCTION        shift and go to state 49
    PRINT           shift and go to state 50
    INPUT           shift and go to state 51
    ID              shift and go to state 52
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 56
    DO              shift and go to state 58
    WHILE           shift and go to state 59
    FOR             shift and go to state 60

    EST                            shift and go to state 237
    empty                          shift and go to state 45
    LOOP_                          shift and go to state 46
    IF_                            shift and go to state 47
    A                              shift and go to state 48
    DO_WHILE                       shift and go to state 53
    WHILE_                         shift and go to state 54
    FOR_                           shift and go to state 55
    ID_COMPLETO                    shift and go to state 57

state 235

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST . END LOOP PUNTO_COMA AUX_ENDFOR

    END             shift and go to state 238


state 236

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 239


state 237

    (74) ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST . ELSIF_
    (72) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (73) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA
    (74) ELSIF_ -> . ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_

    END             shift and go to state 208
    ELSE            shift and go to state 209
    ELSIF           shift and go to state 210

    ELSIF_                         shift and go to state 240

state 238

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END . LOOP PUNTO_COMA AUX_ENDFOR

    LOOP            shift and go to state 241


state 239

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF . AUX_ENDIF PUNTO_COMA
    (78) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 242
    empty                          shift and go to state 226

state 240

    (74) ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .

    PROCEDURE       reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    FUNCTION        reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    PRINT           reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    INPUT           reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    ID              reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    IF              reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    DO              reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    WHILE           reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    FOR             reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    END             reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    RETURN          reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    ELSE            reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)
    ELSIF           reduce using rule 74 (ELSIF_ -> ELSIF E AUX_ELSIF DOS_PUNTOS EST ELSIF_ .)


state 241

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP . PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 243


state 242

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 244


state 243

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA . AUX_ENDFOR
    (70) AUX_ENDFOR -> . empty
    (1) empty -> .

    PROCEDURE       reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    INPUT           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_ENDFOR                     shift and go to state 245
    empty                          shift and go to state 246

state 244

    (73) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .

    PROCEDURE       reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    FUNCTION        reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    PRINT           reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 73 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST END IF AUX_ENDIF PUNTO_COMA .)


state 245

    (68) FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .

    PROCEDURE       reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    FUNCTION        reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    PRINT           reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    INPUT           reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ID              reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    IF              reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    DO              reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    WHILE           reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    FOR             reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    END             reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    RETURN          reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSE            reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSIF           reduce using rule 68 (FOR_ -> FOR A PUNTO_COMA E AUX_FOR1 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)


state 246

    (70) AUX_ENDFOR -> empty .

    PROCEDURE       reduce using rule 70 (AUX_ENDFOR -> empty .)
    FUNCTION        reduce using rule 70 (AUX_ENDFOR -> empty .)
    PRINT           reduce using rule 70 (AUX_ENDFOR -> empty .)
    INPUT           reduce using rule 70 (AUX_ENDFOR -> empty .)
    ID              reduce using rule 70 (AUX_ENDFOR -> empty .)
    IF              reduce using rule 70 (AUX_ENDFOR -> empty .)
    DO              reduce using rule 70 (AUX_ENDFOR -> empty .)
    WHILE           reduce using rule 70 (AUX_ENDFOR -> empty .)
    FOR             reduce using rule 70 (AUX_ENDFOR -> empty .)
    END             reduce using rule 70 (AUX_ENDFOR -> empty .)
    RETURN          reduce using rule 70 (AUX_ENDFOR -> empty .)
    ELSE            reduce using rule 70 (AUX_ENDFOR -> empty .)
    ELSIF           reduce using rule 70 (AUX_ENDFOR -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 93 resolved using rule (T -> ID_COMPLETO)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) in state 93
WARNING: reduce/reduce conflict in state 94 resolved using rule (T -> VALOR_INT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (T -> VALOR_FLOAT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) in state 95
WARNING: Rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) is never reduced
