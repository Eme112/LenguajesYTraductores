Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO
    TEXTO

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     empty -> <empty>
Rule 2     E -> E2
Rule 3     E -> E2 MENOR E2 AUX_MENOR
Rule 4     E -> E2 MAYOR E2 AUX_MAYOR
Rule 5     E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
Rule 6     E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
Rule 7     E -> E2 IGUAL E2 AUX_IGUAL
Rule 8     E -> E2 DIFERENTE E2 AUX_DIFERENTE
Rule 9     AUX_MENOR -> empty
Rule 10    AUX_MAYOR -> empty
Rule 11    AUX_MENOR_IGUAL -> empty
Rule 12    AUX_MAYOR_IGUAL -> empty
Rule 13    AUX_IGUAL -> empty
Rule 14    AUX_DIFERENTE -> empty
Rule 15    E2 -> E3
Rule 16    E2 -> E2 OR E3 AUX_OR
Rule 17    E2 -> E2 MAS E3 AUX_MAS
Rule 18    E2 -> E2 MENOS E3 AUX_MENOS
Rule 19    AUX_OR -> empty
Rule 20    AUX_MAS -> empty
Rule 21    AUX_MENOS -> empty
Rule 22    E3 -> E4
Rule 23    E3 -> E3 AND E4 AUX_AND
Rule 24    E3 -> E3 POR E4 AUX_POR
Rule 25    E3 -> E3 ENTRE E4 AUX_ENTRE
Rule 26    E3 -> E3 MODULO E4 AUX_MODULO
Rule 27    AUX_AND -> empty
Rule 28    AUX_POR -> empty
Rule 29    AUX_ENTRE -> empty
Rule 30    AUX_MODULO -> empty
Rule 31    E4 -> T
Rule 32    E4 -> NOT T AUX_NOT
Rule 33    AUX_NOT -> empty
Rule 34    T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
Rule 35    T -> FUNCTION
Rule 36    T -> ID_COMPLETO
Rule 37    T -> VALOR_INT
Rule 38    T -> VALOR_FLOAT
Rule 39    ID_COMPLETO -> ID RANGOS
Rule 40    RANGOS -> empty
Rule 41    RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
Rule 42    V -> TIPO DOS_PUNTOS A PUNTO_COMA
Rule 43    V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
Rule 44    TIPO -> INT
Rule 45    TIPO -> FLOAT
Rule 46    V_M -> empty
Rule 47    V_M -> V V_M
Rule 48    A -> ID_COMPLETO ASIGNACION VALOR_INT
Rule 49    A -> ID_COMPLETO ASIGNACION VALOR_FLOAT
Rule 50    A -> ID_COMPLETO ASIGNACION E
Rule 51    A -> ID_COMPLETO ASIGNACION ID_COMPLETO
Rule 52    A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 53    A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 54    EST -> empty
Rule 55    EST -> LOOP_ EST
Rule 56    EST -> IF_ EST
Rule 57    EST -> A PUNTO_COMA EST
Rule 58    EST -> PROCEDURE PUNTO_COMA EST
Rule 59    EST -> FUNCTION PUNTO_COMA EST
Rule 60    EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
Rule 61    EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
Rule 62    EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
Rule 63    LOOP_ -> DO_WHILE
Rule 64    LOOP_ -> WHILE_
Rule 65    LOOP_ -> FOR_
Rule 66    DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
Rule 67    WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
Rule 68    AUX_WHILE1 -> empty
Rule 69    AUX_WHILE2 -> empty
Rule 70    AUX_ENDWHILE -> empty
Rule 71    FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
Rule 72    AUX_FOR1 -> empty
Rule 73    AUX_FOR2 -> empty
Rule 74    AUX_ENDFOR -> empty
Rule 75    IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
Rule 76    ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA
Rule 77    ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
Rule 78    ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
Rule 79    AUX_IF -> empty
Rule 80    AUX_ELSIF -> empty
Rule 81    AUX_ELSIF2 -> empty
Rule 82    AUX_ELSE -> empty
Rule 83    AUX_SALIRIF -> empty
Rule 84    AUX_ENDIF -> empty
Rule 85    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
Rule 86    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
Rule 87    F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
Rule 88    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
Rule 89    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
Rule 90    MP_AUX -> empty
Rule 91    PROGRAMA -> PROGRAMA_H MP
Rule 92    PROGRAMA_H -> empty
Rule 93    PROGRAMA_H -> P PROGRAMA_H
Rule 94    PROGRAMA_H -> F PROGRAMA_H

Terminals, with rules where they appear

AND                  : 23
ASIGNACION           : 48 49 50 51 52 53
BEGIN                : 85 86 87 88 89
COMILLAS             : 60 60
CORCHETE_DERECHO     : 41
CORCHETE_IZQUIERDO   : 41
DIFERENTE            : 8
DO                   : 66
DOS_PUNTOS           : 42 43 66 67 71 75 77 78 85 86 87 88 89
ELSE                 : 77
ELSIF                : 78
END                  : 66 67 71 76 77 85 86 87 88 89
ENTRE                : 25
FLOAT                : 45
FOR                  : 71
FUNCTION             : 35 59 87
ID                   : 39 52 62 85 86 87 87
IF                   : 75 76 77
IGUAL                : 7
INPUT                : 53 61
INT                  : 44
LOOP                 : 66 67 71
MAIN                 : 88 89
MAS                  : 17
MAYOR                : 4
MAYOR_IGUAL          : 6
MENOR                : 3
MENOR_IGUAL          : 5
MENOS                : 18
MODULO               : 26
NOT                  : 32
OR                   : 16
PARENTESIS_DERECHO   : 34 52 53 60 61 62 85 86 87 88 89
PARENTESIS_IZQUIERDO : 34 52 53 60 61 62 85 86 87 88 89
POR                  : 24
PRINT                : 60
PROCEDURE            : 58 85 85 86 86 88 88 89 89
PUNTO                : 
PUNTO_COMA           : 42 43 57 58 59 60 61 62 66 67 71 71 71 76 77 85 85 86 86 86 87 87 87 88 88 89 89 89
RETURN               : 86 87 89
TEXTO                : 
VALOR_FLOAT          : 38 49
VALOR_INT            : 37 41 48
WHILE                : 66 67
error                : 

Nonterminals, with rules where they appear

A                    : 42 57 71 71
AUX_AND              : 23
AUX_DIFERENTE        : 8
AUX_ELSE             : 77
AUX_ELSIF            : 78
AUX_ELSIF2           : 78
AUX_ENDFOR           : 71
AUX_ENDIF            : 76 77
AUX_ENDWHILE         : 67
AUX_ENTRE            : 25
AUX_FOR1             : 71
AUX_FOR2             : 71
AUX_IF               : 75
AUX_IGUAL            : 7
AUX_MAS              : 17
AUX_MAYOR            : 4
AUX_MAYOR_IGUAL      : 6
AUX_MENOR            : 3
AUX_MENOR_IGUAL      : 5
AUX_MENOS            : 18
AUX_MODULO           : 26
AUX_NOT              : 32
AUX_OR               : 16
AUX_POR              : 24
AUX_SALIRIF          : 75 77 78
AUX_WHILE1           : 67
AUX_WHILE2           : 67
DO_WHILE             : 63
E                    : 34 50 66 67 71 75 78
E2                   : 2 3 3 4 4 5 5 6 6 7 7 8 8 16 17 18
E3                   : 15 16 17 18 23 24 25 26
E4                   : 22 23 24 25 26
ELSIF_               : 75 78
EST                  : 55 56 57 58 59 60 61 62 66 67 71 75 77 78 85 86 87 88 89
F                    : 94
FOR_                 : 65
ID_COMPLETO          : 36 43 48 49 50 51 51 52 53
IF_                  : 56
LOOP_                : 55
MP                   : 91
MP_AUX               : 88 89
P                    : 93
PROGRAMA             : 0
PROGRAMA_H           : 91 93 94
RANGOS               : 39 41
T                    : 31 32
TIPO                 : 42 43 87
V                    : 47
V_M                  : 47 85 86 87 88 89
WHILE_               : 64
empty                : 9 10 11 12 13 14 19 20 21 27 28 29 30 33 40 46 54 68 69 70 72 73 74 79 80 81 82 83 84 90 92

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (91) PROGRAMA -> . PROGRAMA_H MP
    (92) PROGRAMA_H -> . empty
    (93) PROGRAMA_H -> . P PROGRAMA_H
    (94) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (85) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 6
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

  ! PROCEDURE       [ reduce using rule 1 (empty -> .) ]

    PROGRAMA                       shift and go to state 1
    PROGRAMA_H                     shift and go to state 2
    empty                          shift and go to state 3
    P                              shift and go to state 4
    F                              shift and go to state 5
    TIPO                           shift and go to state 7

state 1

    (0) S' -> PROGRAMA .



state 2

    (91) PROGRAMA -> PROGRAMA_H . MP
    (88) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 11

    MP                             shift and go to state 10

state 3

    (92) PROGRAMA_H -> empty .

    PROCEDURE       reduce using rule 92 (PROGRAMA_H -> empty .)


state 4

    (93) PROGRAMA_H -> P . PROGRAMA_H
    (92) PROGRAMA_H -> . empty
    (93) PROGRAMA_H -> . P PROGRAMA_H
    (94) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (85) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 6
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

  ! PROCEDURE       [ reduce using rule 1 (empty -> .) ]

    P                              shift and go to state 4
    PROGRAMA_H                     shift and go to state 12
    empty                          shift and go to state 3
    F                              shift and go to state 5
    TIPO                           shift and go to state 7

state 5

    (94) PROGRAMA_H -> F . PROGRAMA_H
    (92) PROGRAMA_H -> . empty
    (93) PROGRAMA_H -> . P PROGRAMA_H
    (94) PROGRAMA_H -> . F PROGRAMA_H
    (1) empty -> .
    (85) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

  ! shift/reduce conflict for PROCEDURE resolved as shift
    PROCEDURE       shift and go to state 6
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

  ! PROCEDURE       [ reduce using rule 1 (empty -> .) ]

    F                              shift and go to state 5
    PROGRAMA_H                     shift and go to state 13
    empty                          shift and go to state 3
    P                              shift and go to state 4
    TIPO                           shift and go to state 7

state 6

    (85) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    ID              shift and go to state 14


state 7

    (87) F -> TIPO . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 15


state 8

    (44) TIPO -> INT .

    ID              reduce using rule 44 (TIPO -> INT .)
    DOS_PUNTOS      reduce using rule 44 (TIPO -> INT .)


state 9

    (45) TIPO -> FLOAT .

    ID              reduce using rule 45 (TIPO -> FLOAT .)
    DOS_PUNTOS      reduce using rule 45 (TIPO -> FLOAT .)


state 10

    (91) PROGRAMA -> PROGRAMA_H MP .

    $end            reduce using rule 91 (PROGRAMA -> PROGRAMA_H MP .)


state 11

    (88) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    MAIN            shift and go to state 16


state 12

    (93) PROGRAMA_H -> P PROGRAMA_H .

    PROCEDURE       reduce using rule 93 (PROGRAMA_H -> P PROGRAMA_H .)


state 13

    (94) PROGRAMA_H -> F PROGRAMA_H .

    PROCEDURE       reduce using rule 94 (PROGRAMA_H -> F PROGRAMA_H .)


state 14

    (85) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 17


state 15

    (87) F -> TIPO ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 18


state 16

    (88) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 19


state 17

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 20


state 18

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 21


state 19

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 22


state 20

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    DOS_PUNTOS      shift and go to state 23


state 21

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    DOS_PUNTOS      shift and go to state 24


state 22

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    DOS_PUNTOS      shift and go to state 25


state 23

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V_M                            shift and go to state 26
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 29

state 24

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    TIPO                           shift and go to state 29
    V_M                            shift and go to state 30
    empty                          shift and go to state 27
    V                              shift and go to state 28

state 25

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (90) MP_AUX -> . empty
    (1) empty -> .

    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    BEGIN           reduce using rule 1 (empty -> .)

    MP_AUX                         shift and go to state 31
    empty                          shift and go to state 32

state 26

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    BEGIN           shift and go to state 33


state 27

    (46) V_M -> empty .

    BEGIN           reduce using rule 46 (V_M -> empty .)


state 28

    (47) V_M -> V . V_M
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V                              shift and go to state 28
    V_M                            shift and go to state 34
    empty                          shift and go to state 27
    TIPO                           shift and go to state 29

state 29

    (42) V -> TIPO . DOS_PUNTOS A PUNTO_COMA
    (43) V -> TIPO . DOS_PUNTOS ID_COMPLETO PUNTO_COMA

    DOS_PUNTOS      shift and go to state 35


state 30

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    BEGIN           shift and go to state 36


state 31

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (46) V_M -> . empty
    (47) V_M -> . V V_M
    (1) empty -> .
    (42) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (43) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (44) TIPO -> . INT
    (45) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V_M                            shift and go to state 37
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 29

state 32

    (90) MP_AUX -> empty .

    INT             reduce using rule 90 (MP_AUX -> empty .)
    FLOAT           reduce using rule 90 (MP_AUX -> empty .)
    BEGIN           reduce using rule 90 (MP_AUX -> empty .)


state 33

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 38


state 34

    (47) V_M -> V V_M .

    BEGIN           reduce using rule 47 (V_M -> V V_M .)


state 35

    (42) V -> TIPO DOS_PUNTOS . A PUNTO_COMA
    (43) V -> TIPO DOS_PUNTOS . ID_COMPLETO PUNTO_COMA
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 41

    A                              shift and go to state 39
    ID_COMPLETO                    shift and go to state 40

state 36

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 42


state 37

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    BEGIN           shift and go to state 43


state 38

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 46
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 39

    (42) V -> TIPO DOS_PUNTOS A . PUNTO_COMA

    PUNTO_COMA      shift and go to state 62


state 40

    (43) V -> TIPO DOS_PUNTOS ID_COMPLETO . PUNTO_COMA
    (48) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (49) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (50) A -> ID_COMPLETO . ASIGNACION E
    (51) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (52) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PUNTO_COMA      shift and go to state 63
    ASIGNACION      shift and go to state 64


state 41

    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 67
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 65
    empty                          shift and go to state 66

state 42

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 68
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 43

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 69


state 44

    (58) EST -> PROCEDURE . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 70


state 45

    (62) EST -> ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 71
    CORCHETE_IZQUIERDO shift and go to state 67
    ASIGNACION      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 65
    empty                          shift and go to state 66

state 46

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA
    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    END             shift and go to state 72
    RETURN          shift and go to state 73


state 47

    (54) EST -> empty .

    END             reduce using rule 54 (EST -> empty .)
    RETURN          reduce using rule 54 (EST -> empty .)
    ELSE            reduce using rule 54 (EST -> empty .)
    ELSIF           reduce using rule 54 (EST -> empty .)


state 48

    (55) EST -> LOOP_ . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    LOOP_                          shift and go to state 48
    EST                            shift and go to state 74
    empty                          shift and go to state 47
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 49

    (56) EST -> IF_ . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    IF_                            shift and go to state 49
    EST                            shift and go to state 75
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 50

    (57) EST -> A . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 76


state 51

    (59) EST -> FUNCTION . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 77


state 52

    (60) EST -> PRINT . PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 78


state 53

    (61) EST -> INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 79


state 54

    (63) LOOP_ -> DO_WHILE .

    PROCEDURE       reduce using rule 63 (LOOP_ -> DO_WHILE .)
    FUNCTION        reduce using rule 63 (LOOP_ -> DO_WHILE .)
    PRINT           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    INPUT           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ID              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    IF              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    DO              reduce using rule 63 (LOOP_ -> DO_WHILE .)
    WHILE           reduce using rule 63 (LOOP_ -> DO_WHILE .)
    FOR             reduce using rule 63 (LOOP_ -> DO_WHILE .)
    END             reduce using rule 63 (LOOP_ -> DO_WHILE .)
    RETURN          reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ELSE            reduce using rule 63 (LOOP_ -> DO_WHILE .)
    ELSIF           reduce using rule 63 (LOOP_ -> DO_WHILE .)


state 55

    (64) LOOP_ -> WHILE_ .

    PROCEDURE       reduce using rule 64 (LOOP_ -> WHILE_ .)
    FUNCTION        reduce using rule 64 (LOOP_ -> WHILE_ .)
    PRINT           reduce using rule 64 (LOOP_ -> WHILE_ .)
    INPUT           reduce using rule 64 (LOOP_ -> WHILE_ .)
    ID              reduce using rule 64 (LOOP_ -> WHILE_ .)
    IF              reduce using rule 64 (LOOP_ -> WHILE_ .)
    DO              reduce using rule 64 (LOOP_ -> WHILE_ .)
    WHILE           reduce using rule 64 (LOOP_ -> WHILE_ .)
    FOR             reduce using rule 64 (LOOP_ -> WHILE_ .)
    END             reduce using rule 64 (LOOP_ -> WHILE_ .)
    RETURN          reduce using rule 64 (LOOP_ -> WHILE_ .)
    ELSE            reduce using rule 64 (LOOP_ -> WHILE_ .)
    ELSIF           reduce using rule 64 (LOOP_ -> WHILE_ .)


state 56

    (65) LOOP_ -> FOR_ .

    PROCEDURE       reduce using rule 65 (LOOP_ -> FOR_ .)
    FUNCTION        reduce using rule 65 (LOOP_ -> FOR_ .)
    PRINT           reduce using rule 65 (LOOP_ -> FOR_ .)
    INPUT           reduce using rule 65 (LOOP_ -> FOR_ .)
    ID              reduce using rule 65 (LOOP_ -> FOR_ .)
    IF              reduce using rule 65 (LOOP_ -> FOR_ .)
    DO              reduce using rule 65 (LOOP_ -> FOR_ .)
    WHILE           reduce using rule 65 (LOOP_ -> FOR_ .)
    FOR             reduce using rule 65 (LOOP_ -> FOR_ .)
    END             reduce using rule 65 (LOOP_ -> FOR_ .)
    RETURN          reduce using rule 65 (LOOP_ -> FOR_ .)
    ELSE            reduce using rule 65 (LOOP_ -> FOR_ .)
    ELSIF           reduce using rule 65 (LOOP_ -> FOR_ .)


state 57

    (75) IF_ -> IF . E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 80
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 58

    (48) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (49) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (50) A -> ID_COMPLETO . ASIGNACION E
    (51) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (52) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    ASIGNACION      shift and go to state 64


state 59

    (66) DO_WHILE -> DO . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA

    WHILE           shift and go to state 91


state 60

    (67) WHILE_ -> WHILE . AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (68) AUX_WHILE1 -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_WHILE1                     shift and go to state 92
    empty                          shift and go to state 93

state 61

    (71) FOR_ -> FOR . A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 41

    A                              shift and go to state 94
    ID_COMPLETO                    shift and go to state 58

state 62

    (42) V -> TIPO DOS_PUNTOS A PUNTO_COMA .

    INT             reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    FLOAT           reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    BEGIN           reduce using rule 42 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)


state 63

    (43) V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .

    INT             reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    FLOAT           reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    BEGIN           reduce using rule 43 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)


state 64

    (48) A -> ID_COMPLETO ASIGNACION . VALOR_INT
    (49) A -> ID_COMPLETO ASIGNACION . VALOR_FLOAT
    (50) A -> ID_COMPLETO ASIGNACION . E
    (51) A -> ID_COMPLETO ASIGNACION . ID_COMPLETO
    (52) A -> ID_COMPLETO ASIGNACION . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> ID_COMPLETO ASIGNACION . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (39) ID_COMPLETO -> . ID RANGOS
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT

    VALOR_INT       shift and go to state 96
    VALOR_FLOAT     shift and go to state 97
    ID              shift and go to state 99
    INPUT           shift and go to state 100
    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87

    ID_COMPLETO                    shift and go to state 95
    E                              shift and go to state 98
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84

state 65

    (39) ID_COMPLETO -> ID RANGOS .

    PUNTO_COMA      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    ASIGNACION      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    AND             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    POR             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    ENTRE           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MODULO          reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOR           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAYOR           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOR_IGUAL     reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAYOR_IGUAL     reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    IGUAL           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    DIFERENTE       reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    OR              reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MAS             reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    MENOS           reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    DOS_PUNTOS      reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)
    PARENTESIS_DERECHO reduce using rule 39 (ID_COMPLETO -> ID RANGOS .)


state 66

    (40) RANGOS -> empty .

    PUNTO_COMA      reduce using rule 40 (RANGOS -> empty .)
    ASIGNACION      reduce using rule 40 (RANGOS -> empty .)
    AND             reduce using rule 40 (RANGOS -> empty .)
    POR             reduce using rule 40 (RANGOS -> empty .)
    ENTRE           reduce using rule 40 (RANGOS -> empty .)
    MODULO          reduce using rule 40 (RANGOS -> empty .)
    MENOR           reduce using rule 40 (RANGOS -> empty .)
    MAYOR           reduce using rule 40 (RANGOS -> empty .)
    MENOR_IGUAL     reduce using rule 40 (RANGOS -> empty .)
    MAYOR_IGUAL     reduce using rule 40 (RANGOS -> empty .)
    IGUAL           reduce using rule 40 (RANGOS -> empty .)
    DIFERENTE       reduce using rule 40 (RANGOS -> empty .)
    OR              reduce using rule 40 (RANGOS -> empty .)
    MAS             reduce using rule 40 (RANGOS -> empty .)
    MENOS           reduce using rule 40 (RANGOS -> empty .)
    DOS_PUNTOS      reduce using rule 40 (RANGOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 40 (RANGOS -> empty .)


state 67

    (41) RANGOS -> CORCHETE_IZQUIERDO . VALOR_INT CORCHETE_DERECHO RANGOS

    VALOR_INT       shift and go to state 101


state 68

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    RETURN          shift and go to state 102


state 69

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 103
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 70

    (58) EST -> PROCEDURE PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 104
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 71

    (62) EST -> ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 105


state 72

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 106


state 73

    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 107


state 74

    (55) EST -> LOOP_ EST .

    END             reduce using rule 55 (EST -> LOOP_ EST .)
    RETURN          reduce using rule 55 (EST -> LOOP_ EST .)
    ELSE            reduce using rule 55 (EST -> LOOP_ EST .)
    ELSIF           reduce using rule 55 (EST -> LOOP_ EST .)


state 75

    (56) EST -> IF_ EST .

    END             reduce using rule 56 (EST -> IF_ EST .)
    RETURN          reduce using rule 56 (EST -> IF_ EST .)
    ELSE            reduce using rule 56 (EST -> IF_ EST .)
    ELSIF           reduce using rule 56 (EST -> IF_ EST .)


state 76

    (57) EST -> A PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    A                              shift and go to state 50
    EST                            shift and go to state 108
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 77

    (59) EST -> FUNCTION PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 109
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 78

    (60) EST -> PRINT PARENTESIS_IZQUIERDO . COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 110


state 79

    (61) EST -> INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 111


state 80

    (75) IF_ -> IF E . AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (79) AUX_IF -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_IF                         shift and go to state 112
    empty                          shift and go to state 113

state 81

    (2) E -> E2 .
    (3) E -> E2 . MENOR E2 AUX_MENOR
    (4) E -> E2 . MAYOR E2 AUX_MAYOR
    (5) E -> E2 . MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> E2 . MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> E2 . IGUAL E2 AUX_IGUAL
    (8) E -> E2 . DIFERENTE E2 AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS

    DOS_PUNTOS      reduce using rule 2 (E -> E2 .)
    PUNTO_COMA      reduce using rule 2 (E -> E2 .)
    PARENTESIS_DERECHO reduce using rule 2 (E -> E2 .)
    MENOR           shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR_IGUAL     shift and go to state 116
    MAYOR_IGUAL     shift and go to state 117
    IGUAL           shift and go to state 118
    DIFERENTE       shift and go to state 119
    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122


state 82

    (15) E2 -> E3 .
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO

    MENOR           reduce using rule 15 (E2 -> E3 .)
    MAYOR           reduce using rule 15 (E2 -> E3 .)
    MENOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    MAYOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    IGUAL           reduce using rule 15 (E2 -> E3 .)
    DIFERENTE       reduce using rule 15 (E2 -> E3 .)
    OR              reduce using rule 15 (E2 -> E3 .)
    MAS             reduce using rule 15 (E2 -> E3 .)
    MENOS           reduce using rule 15 (E2 -> E3 .)
    DOS_PUNTOS      reduce using rule 15 (E2 -> E3 .)
    PUNTO_COMA      reduce using rule 15 (E2 -> E3 .)
    PARENTESIS_DERECHO reduce using rule 15 (E2 -> E3 .)
    AND             shift and go to state 123
    POR             shift and go to state 124
    ENTRE           shift and go to state 125
    MODULO          shift and go to state 126


state 83

    (22) E3 -> E4 .

    AND             reduce using rule 22 (E3 -> E4 .)
    POR             reduce using rule 22 (E3 -> E4 .)
    ENTRE           reduce using rule 22 (E3 -> E4 .)
    MODULO          reduce using rule 22 (E3 -> E4 .)
    MENOR           reduce using rule 22 (E3 -> E4 .)
    MAYOR           reduce using rule 22 (E3 -> E4 .)
    MENOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    MAYOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    IGUAL           reduce using rule 22 (E3 -> E4 .)
    DIFERENTE       reduce using rule 22 (E3 -> E4 .)
    OR              reduce using rule 22 (E3 -> E4 .)
    MAS             reduce using rule 22 (E3 -> E4 .)
    MENOS           reduce using rule 22 (E3 -> E4 .)
    DOS_PUNTOS      reduce using rule 22 (E3 -> E4 .)
    PUNTO_COMA      reduce using rule 22 (E3 -> E4 .)
    PARENTESIS_DERECHO reduce using rule 22 (E3 -> E4 .)


state 84

    (31) E4 -> T .

    AND             reduce using rule 31 (E4 -> T .)
    POR             reduce using rule 31 (E4 -> T .)
    ENTRE           reduce using rule 31 (E4 -> T .)
    MODULO          reduce using rule 31 (E4 -> T .)
    MENOR           reduce using rule 31 (E4 -> T .)
    MAYOR           reduce using rule 31 (E4 -> T .)
    MENOR_IGUAL     reduce using rule 31 (E4 -> T .)
    MAYOR_IGUAL     reduce using rule 31 (E4 -> T .)
    IGUAL           reduce using rule 31 (E4 -> T .)
    DIFERENTE       reduce using rule 31 (E4 -> T .)
    OR              reduce using rule 31 (E4 -> T .)
    MAS             reduce using rule 31 (E4 -> T .)
    MENOS           reduce using rule 31 (E4 -> T .)
    DOS_PUNTOS      reduce using rule 31 (E4 -> T .)
    PUNTO_COMA      reduce using rule 31 (E4 -> T .)
    PARENTESIS_DERECHO reduce using rule 31 (E4 -> T .)


state 85

    (32) E4 -> NOT . T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    T                              shift and go to state 127
    ID_COMPLETO                    shift and go to state 88

state 86

    (34) T -> PARENTESIS_IZQUIERDO . E PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 128
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 87

    (35) T -> FUNCTION .

    AND             reduce using rule 35 (T -> FUNCTION .)
    POR             reduce using rule 35 (T -> FUNCTION .)
    ENTRE           reduce using rule 35 (T -> FUNCTION .)
    MODULO          reduce using rule 35 (T -> FUNCTION .)
    MENOR           reduce using rule 35 (T -> FUNCTION .)
    MAYOR           reduce using rule 35 (T -> FUNCTION .)
    MENOR_IGUAL     reduce using rule 35 (T -> FUNCTION .)
    MAYOR_IGUAL     reduce using rule 35 (T -> FUNCTION .)
    IGUAL           reduce using rule 35 (T -> FUNCTION .)
    DIFERENTE       reduce using rule 35 (T -> FUNCTION .)
    OR              reduce using rule 35 (T -> FUNCTION .)
    MAS             reduce using rule 35 (T -> FUNCTION .)
    MENOS           reduce using rule 35 (T -> FUNCTION .)
    DOS_PUNTOS      reduce using rule 35 (T -> FUNCTION .)
    PUNTO_COMA      reduce using rule 35 (T -> FUNCTION .)
    PARENTESIS_DERECHO reduce using rule 35 (T -> FUNCTION .)


state 88

    (36) T -> ID_COMPLETO .

    AND             reduce using rule 36 (T -> ID_COMPLETO .)
    POR             reduce using rule 36 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 36 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 36 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 36 (T -> ID_COMPLETO .)
    OR              reduce using rule 36 (T -> ID_COMPLETO .)
    MAS             reduce using rule 36 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 36 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 36 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 36 (T -> ID_COMPLETO .)
    PARENTESIS_DERECHO reduce using rule 36 (T -> ID_COMPLETO .)


state 89

    (37) T -> VALOR_INT .

    AND             reduce using rule 37 (T -> VALOR_INT .)
    POR             reduce using rule 37 (T -> VALOR_INT .)
    ENTRE           reduce using rule 37 (T -> VALOR_INT .)
    MODULO          reduce using rule 37 (T -> VALOR_INT .)
    MENOR           reduce using rule 37 (T -> VALOR_INT .)
    MAYOR           reduce using rule 37 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    IGUAL           reduce using rule 37 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_INT .)
    OR              reduce using rule 37 (T -> VALOR_INT .)
    MAS             reduce using rule 37 (T -> VALOR_INT .)
    MENOS           reduce using rule 37 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_INT .)
    PARENTESIS_DERECHO reduce using rule 37 (T -> VALOR_INT .)


state 90

    (38) T -> VALOR_FLOAT .

    AND             reduce using rule 38 (T -> VALOR_FLOAT .)
    POR             reduce using rule 38 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 38 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 38 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 38 (T -> VALOR_FLOAT .)
    OR              reduce using rule 38 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 38 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 38 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 38 (T -> VALOR_FLOAT .)
    PARENTESIS_DERECHO reduce using rule 38 (T -> VALOR_FLOAT .)


state 91

    (66) DO_WHILE -> DO WHILE . E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 129
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 92

    (67) WHILE_ -> WHILE AUX_WHILE1 . E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 130
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 93

    (68) AUX_WHILE1 -> empty .

    NOT             reduce using rule 68 (AUX_WHILE1 -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 68 (AUX_WHILE1 -> empty .)
    FUNCTION        reduce using rule 68 (AUX_WHILE1 -> empty .)
    VALOR_INT       reduce using rule 68 (AUX_WHILE1 -> empty .)
    VALOR_FLOAT     reduce using rule 68 (AUX_WHILE1 -> empty .)
    ID              reduce using rule 68 (AUX_WHILE1 -> empty .)


state 94

    (71) FOR_ -> FOR A . PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 131


state 95

    (51) A -> ID_COMPLETO ASIGNACION ID_COMPLETO .
    (36) T -> ID_COMPLETO .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 36 (T -> ID_COMPLETO .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 36 (T -> ID_COMPLETO .)
    AND             reduce using rule 36 (T -> ID_COMPLETO .)
    POR             reduce using rule 36 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 36 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 36 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 36 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 36 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 36 (T -> ID_COMPLETO .)
    OR              reduce using rule 36 (T -> ID_COMPLETO .)
    MAS             reduce using rule 36 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 36 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 36 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 36 (T -> ID_COMPLETO .)

  ! PUNTO_COMA      [ reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]
  ! DOS_PUNTOS      [ reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]


state 96

    (48) A -> ID_COMPLETO ASIGNACION VALOR_INT .
    (37) T -> VALOR_INT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 37 (T -> VALOR_INT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 37 (T -> VALOR_INT .)
    AND             reduce using rule 37 (T -> VALOR_INT .)
    POR             reduce using rule 37 (T -> VALOR_INT .)
    ENTRE           reduce using rule 37 (T -> VALOR_INT .)
    MODULO          reduce using rule 37 (T -> VALOR_INT .)
    MENOR           reduce using rule 37 (T -> VALOR_INT .)
    MAYOR           reduce using rule 37 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_INT .)
    IGUAL           reduce using rule 37 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_INT .)
    OR              reduce using rule 37 (T -> VALOR_INT .)
    MAS             reduce using rule 37 (T -> VALOR_INT .)
    MENOS           reduce using rule 37 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_INT .)

  ! PUNTO_COMA      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]
  ! DOS_PUNTOS      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]


state 97

    (49) A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .
    (38) T -> VALOR_FLOAT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 38 (T -> VALOR_FLOAT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 38 (T -> VALOR_FLOAT .)
    AND             reduce using rule 38 (T -> VALOR_FLOAT .)
    POR             reduce using rule 38 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 38 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 38 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 38 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 38 (T -> VALOR_FLOAT .)
    OR              reduce using rule 38 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 38 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 38 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 38 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 38 (T -> VALOR_FLOAT .)

  ! PUNTO_COMA      [ reduce using rule 49 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]
  ! DOS_PUNTOS      [ reduce using rule 49 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]


state 98

    (50) A -> ID_COMPLETO ASIGNACION E .

    PUNTO_COMA      reduce using rule 50 (A -> ID_COMPLETO ASIGNACION E .)
    DOS_PUNTOS      reduce using rule 50 (A -> ID_COMPLETO ASIGNACION E .)


state 99

    (52) A -> ID_COMPLETO ASIGNACION ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> ID . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 132
    CORCHETE_IZQUIERDO shift and go to state 67
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 65
    empty                          shift and go to state 66

state 100

    (53) A -> ID_COMPLETO ASIGNACION INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PARENTESIS_IZQUIERDO shift and go to state 133


state 101

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT . CORCHETE_DERECHO RANGOS

    CORCHETE_DERECHO shift and go to state 134


state 102

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 135


state 103

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    END             shift and go to state 136
    RETURN          shift and go to state 137


state 104

    (58) EST -> PROCEDURE PUNTO_COMA EST .

    END             reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    RETURN          reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    ELSE            reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)
    ELSIF           reduce using rule 58 (EST -> PROCEDURE PUNTO_COMA EST .)


state 105

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 138


state 106

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 139


state 107

    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA

    END             shift and go to state 140


state 108

    (57) EST -> A PUNTO_COMA EST .

    END             reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    RETURN          reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    ELSE            reduce using rule 57 (EST -> A PUNTO_COMA EST .)
    ELSIF           reduce using rule 57 (EST -> A PUNTO_COMA EST .)


state 109

    (59) EST -> FUNCTION PUNTO_COMA EST .

    END             reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    RETURN          reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    ELSE            reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)
    ELSIF           reduce using rule 59 (EST -> FUNCTION PUNTO_COMA EST .)


state 110

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS . COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 141


state 111

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 142


state 112

    (75) IF_ -> IF E AUX_IF . DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    DOS_PUNTOS      shift and go to state 143


state 113

    (79) AUX_IF -> empty .

    DOS_PUNTOS      reduce using rule 79 (AUX_IF -> empty .)


state 114

    (3) E -> E2 MENOR . E2 AUX_MENOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 144
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 115

    (4) E -> E2 MAYOR . E2 AUX_MAYOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 145
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 116

    (5) E -> E2 MENOR_IGUAL . E2 AUX_MENOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 146
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 117

    (6) E -> E2 MAYOR_IGUAL . E2 AUX_MAYOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 147
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 118

    (7) E -> E2 IGUAL . E2 AUX_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 148
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 119

    (8) E -> E2 DIFERENTE . E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E2                             shift and go to state 149
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 120

    (16) E2 -> E2 OR . E3 AUX_OR
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E3                             shift and go to state 150
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 121

    (17) E2 -> E2 MAS . E3 AUX_MAS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E3                             shift and go to state 151
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 122

    (18) E2 -> E2 MENOS . E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E3                             shift and go to state 152
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 123

    (23) E3 -> E3 AND . E4 AUX_AND
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E4                             shift and go to state 153
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 124

    (24) E3 -> E3 POR . E4 AUX_POR
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E4                             shift and go to state 154
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 125

    (25) E3 -> E3 ENTRE . E4 AUX_ENTRE
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E4                             shift and go to state 155
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 126

    (26) E3 -> E3 MODULO . E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E4                             shift and go to state 156
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 127

    (32) E4 -> NOT T . AUX_NOT
    (33) AUX_NOT -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_NOT                        shift and go to state 157
    empty                          shift and go to state 158

state 128

    (34) T -> PARENTESIS_IZQUIERDO E . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 159


state 129

    (66) DO_WHILE -> DO WHILE E . DOS_PUNTOS EST END LOOP PUNTO_COMA

    DOS_PUNTOS      shift and go to state 160


state 130

    (67) WHILE_ -> WHILE AUX_WHILE1 E . AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) AUX_WHILE2 -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_WHILE2                     shift and go to state 161
    empty                          shift and go to state 162

state 131

    (71) FOR_ -> FOR A PUNTO_COMA . AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (72) AUX_FOR1 -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_FOR1                       shift and go to state 163
    empty                          shift and go to state 164

state 132

    (52) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 165


state 133

    (53) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 166


state 134

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO . RANGOS
    (40) RANGOS -> . empty
    (41) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 67
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 167
    empty                          shift and go to state 66

state 135

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID . PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 168


state 136

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 169


state 137

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 170


state 138

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 171
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 139

    (85) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 85 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 85 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 85 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)


state 140

    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 172


state 141

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 173


state 142

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 174
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 143

    (75) IF_ -> IF E AUX_IF DOS_PUNTOS . EST AUX_SALIRIF ELSIF_
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 175
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 144

    (3) E -> E2 MENOR E2 . AUX_MENOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (9) AUX_MENOR -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR                      shift and go to state 176
    empty                          shift and go to state 177

state 145

    (4) E -> E2 MAYOR E2 . AUX_MAYOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (10) AUX_MAYOR -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR                      shift and go to state 178
    empty                          shift and go to state 179

state 146

    (5) E -> E2 MENOR_IGUAL E2 . AUX_MENOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (11) AUX_MENOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR_IGUAL                shift and go to state 180
    empty                          shift and go to state 181

state 147

    (6) E -> E2 MAYOR_IGUAL E2 . AUX_MAYOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (12) AUX_MAYOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR_IGUAL                shift and go to state 182
    empty                          shift and go to state 183

state 148

    (7) E -> E2 IGUAL E2 . AUX_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (13) AUX_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_IGUAL                      shift and go to state 184
    empty                          shift and go to state 185

state 149

    (8) E -> E2 DIFERENTE E2 . AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (14) AUX_DIFERENTE -> . empty
    (1) empty -> .

    OR              shift and go to state 120
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_DIFERENTE                  shift and go to state 186
    empty                          shift and go to state 187

state 150

    (16) E2 -> E2 OR E3 . AUX_OR
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (19) AUX_OR -> . empty
    (1) empty -> .

    AND             shift and go to state 123
    POR             shift and go to state 124
    ENTRE           shift and go to state 125
    MODULO          shift and go to state 126
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_OR                         shift and go to state 188
    empty                          shift and go to state 189

state 151

    (17) E2 -> E2 MAS E3 . AUX_MAS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (20) AUX_MAS -> . empty
    (1) empty -> .

    AND             shift and go to state 123
    POR             shift and go to state 124
    ENTRE           shift and go to state 125
    MODULO          shift and go to state 126
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAS                        shift and go to state 190
    empty                          shift and go to state 191

state 152

    (18) E2 -> E2 MENOS E3 . AUX_MENOS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (21) AUX_MENOS -> . empty
    (1) empty -> .

    AND             shift and go to state 123
    POR             shift and go to state 124
    ENTRE           shift and go to state 125
    MODULO          shift and go to state 126
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOS                      shift and go to state 192
    empty                          shift and go to state 193

state 153

    (23) E3 -> E3 AND E4 . AUX_AND
    (27) AUX_AND -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_AND                        shift and go to state 194
    empty                          shift and go to state 195

state 154

    (24) E3 -> E3 POR E4 . AUX_POR
    (28) AUX_POR -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_POR                        shift and go to state 196
    empty                          shift and go to state 197

state 155

    (25) E3 -> E3 ENTRE E4 . AUX_ENTRE
    (29) AUX_ENTRE -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_ENTRE                      shift and go to state 198
    empty                          shift and go to state 199

state 156

    (26) E3 -> E3 MODULO E4 . AUX_MODULO
    (30) AUX_MODULO -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MODULO                     shift and go to state 200
    empty                          shift and go to state 201

state 157

    (32) E4 -> NOT T AUX_NOT .

    AND             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    POR             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    ENTRE           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MODULO          reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    IGUAL           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DIFERENTE       reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    OR              reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAS             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOS           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DOS_PUNTOS      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PUNTO_COMA      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PARENTESIS_DERECHO reduce using rule 32 (E4 -> NOT T AUX_NOT .)


state 158

    (33) AUX_NOT -> empty .

    AND             reduce using rule 33 (AUX_NOT -> empty .)
    POR             reduce using rule 33 (AUX_NOT -> empty .)
    ENTRE           reduce using rule 33 (AUX_NOT -> empty .)
    MODULO          reduce using rule 33 (AUX_NOT -> empty .)
    MENOR           reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR           reduce using rule 33 (AUX_NOT -> empty .)
    MENOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    IGUAL           reduce using rule 33 (AUX_NOT -> empty .)
    DIFERENTE       reduce using rule 33 (AUX_NOT -> empty .)
    OR              reduce using rule 33 (AUX_NOT -> empty .)
    MAS             reduce using rule 33 (AUX_NOT -> empty .)
    MENOS           reduce using rule 33 (AUX_NOT -> empty .)
    DOS_PUNTOS      reduce using rule 33 (AUX_NOT -> empty .)
    PUNTO_COMA      reduce using rule 33 (AUX_NOT -> empty .)
    PARENTESIS_DERECHO reduce using rule 33 (AUX_NOT -> empty .)


state 159

    (34) T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .

    AND             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    POR             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    ENTRE           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MODULO          reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DIFERENTE       reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    OR              reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAS             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOS           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PUNTO_COMA      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)


state 160

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS . EST END LOOP PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 202
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 161

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 . DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE

    DOS_PUNTOS      shift and go to state 203


state 162

    (69) AUX_WHILE2 -> empty .

    DOS_PUNTOS      reduce using rule 69 (AUX_WHILE2 -> empty .)


state 163

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 . E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 204
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 164

    (72) AUX_FOR1 -> empty .

    NOT             reduce using rule 72 (AUX_FOR1 -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 72 (AUX_FOR1 -> empty .)
    FUNCTION        reduce using rule 72 (AUX_FOR1 -> empty .)
    VALOR_INT       reduce using rule 72 (AUX_FOR1 -> empty .)
    VALOR_FLOAT     reduce using rule 72 (AUX_FOR1 -> empty .)
    ID              reduce using rule 72 (AUX_FOR1 -> empty .)


state 165

    (52) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 166

    (53) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 53 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 53 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 167

    (41) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .

    PUNTO_COMA      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ASIGNACION      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    AND             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    POR             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ENTRE           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MODULO          reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR_IGUAL     reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR_IGUAL     reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    IGUAL           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DIFERENTE       reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    OR              reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAS             reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOS           reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DOS_PUNTOS      reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    PARENTESIS_DERECHO reduce using rule 41 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)


state 168

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA . END FUNCTION PUNTO_COMA

    END             shift and go to state 205


state 169

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 206


state 170

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA

    END             shift and go to state 207


state 171

    (62) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 62 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)


state 172

    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 208


state 173

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 209


state 174

    (61) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 61 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)


state 175

    (75) IF_ -> IF E AUX_IF DOS_PUNTOS EST . AUX_SALIRIF ELSIF_
    (83) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 210
    empty                          shift and go to state 211

state 176

    (3) E -> E2 MENOR E2 AUX_MENOR .

    DOS_PUNTOS      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    PUNTO_COMA      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    PARENTESIS_DERECHO reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)


state 177

    (9) AUX_MENOR -> empty .

    DOS_PUNTOS      reduce using rule 9 (AUX_MENOR -> empty .)
    PUNTO_COMA      reduce using rule 9 (AUX_MENOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 9 (AUX_MENOR -> empty .)


state 178

    (4) E -> E2 MAYOR E2 AUX_MAYOR .

    DOS_PUNTOS      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    PUNTO_COMA      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    PARENTESIS_DERECHO reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)


state 179

    (10) AUX_MAYOR -> empty .

    DOS_PUNTOS      reduce using rule 10 (AUX_MAYOR -> empty .)
    PUNTO_COMA      reduce using rule 10 (AUX_MAYOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 10 (AUX_MAYOR -> empty .)


state 180

    (5) E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .

    DOS_PUNTOS      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    PUNTO_COMA      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)


state 181

    (11) AUX_MENOR_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)


state 182

    (6) E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .

    DOS_PUNTOS      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    PUNTO_COMA      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)


state 183

    (12) AUX_MAYOR_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)


state 184

    (7) E -> E2 IGUAL E2 AUX_IGUAL .

    DOS_PUNTOS      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    PUNTO_COMA      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)


state 185

    (13) AUX_IGUAL -> empty .

    DOS_PUNTOS      reduce using rule 13 (AUX_IGUAL -> empty .)
    PUNTO_COMA      reduce using rule 13 (AUX_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 13 (AUX_IGUAL -> empty .)


state 186

    (8) E -> E2 DIFERENTE E2 AUX_DIFERENTE .

    DOS_PUNTOS      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    PUNTO_COMA      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    PARENTESIS_DERECHO reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)


state 187

    (14) AUX_DIFERENTE -> empty .

    DOS_PUNTOS      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    PUNTO_COMA      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    PARENTESIS_DERECHO reduce using rule 14 (AUX_DIFERENTE -> empty .)


state 188

    (16) E2 -> E2 OR E3 AUX_OR .

    MENOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    IGUAL           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DIFERENTE       reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    OR              reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAS             reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOS           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DOS_PUNTOS      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PUNTO_COMA      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PARENTESIS_DERECHO reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)


state 189

    (19) AUX_OR -> empty .

    MENOR           reduce using rule 19 (AUX_OR -> empty .)
    MAYOR           reduce using rule 19 (AUX_OR -> empty .)
    MENOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    MAYOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    IGUAL           reduce using rule 19 (AUX_OR -> empty .)
    DIFERENTE       reduce using rule 19 (AUX_OR -> empty .)
    OR              reduce using rule 19 (AUX_OR -> empty .)
    MAS             reduce using rule 19 (AUX_OR -> empty .)
    MENOS           reduce using rule 19 (AUX_OR -> empty .)
    DOS_PUNTOS      reduce using rule 19 (AUX_OR -> empty .)
    PUNTO_COMA      reduce using rule 19 (AUX_OR -> empty .)
    PARENTESIS_DERECHO reduce using rule 19 (AUX_OR -> empty .)


state 190

    (17) E2 -> E2 MAS E3 AUX_MAS .

    MENOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    IGUAL           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DIFERENTE       reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    OR              reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAS             reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOS           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DOS_PUNTOS      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PUNTO_COMA      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PARENTESIS_DERECHO reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)


state 191

    (20) AUX_MAS -> empty .

    MENOR           reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR           reduce using rule 20 (AUX_MAS -> empty .)
    MENOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    IGUAL           reduce using rule 20 (AUX_MAS -> empty .)
    DIFERENTE       reduce using rule 20 (AUX_MAS -> empty .)
    OR              reduce using rule 20 (AUX_MAS -> empty .)
    MAS             reduce using rule 20 (AUX_MAS -> empty .)
    MENOS           reduce using rule 20 (AUX_MAS -> empty .)
    DOS_PUNTOS      reduce using rule 20 (AUX_MAS -> empty .)
    PUNTO_COMA      reduce using rule 20 (AUX_MAS -> empty .)
    PARENTESIS_DERECHO reduce using rule 20 (AUX_MAS -> empty .)


state 192

    (18) E2 -> E2 MENOS E3 AUX_MENOS .

    MENOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    IGUAL           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DIFERENTE       reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    OR              reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAS             reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOS           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DOS_PUNTOS      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PUNTO_COMA      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PARENTESIS_DERECHO reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)


state 193

    (21) AUX_MENOS -> empty .

    MENOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MENOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    IGUAL           reduce using rule 21 (AUX_MENOS -> empty .)
    DIFERENTE       reduce using rule 21 (AUX_MENOS -> empty .)
    OR              reduce using rule 21 (AUX_MENOS -> empty .)
    MAS             reduce using rule 21 (AUX_MENOS -> empty .)
    MENOS           reduce using rule 21 (AUX_MENOS -> empty .)
    DOS_PUNTOS      reduce using rule 21 (AUX_MENOS -> empty .)
    PUNTO_COMA      reduce using rule 21 (AUX_MENOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 21 (AUX_MENOS -> empty .)


state 194

    (23) E3 -> E3 AND E4 AUX_AND .

    AND             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    POR             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    ENTRE           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MODULO          reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    IGUAL           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DIFERENTE       reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    OR              reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAS             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOS           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DOS_PUNTOS      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PUNTO_COMA      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PARENTESIS_DERECHO reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)


state 195

    (27) AUX_AND -> empty .

    AND             reduce using rule 27 (AUX_AND -> empty .)
    POR             reduce using rule 27 (AUX_AND -> empty .)
    ENTRE           reduce using rule 27 (AUX_AND -> empty .)
    MODULO          reduce using rule 27 (AUX_AND -> empty .)
    MENOR           reduce using rule 27 (AUX_AND -> empty .)
    MAYOR           reduce using rule 27 (AUX_AND -> empty .)
    MENOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    MAYOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    IGUAL           reduce using rule 27 (AUX_AND -> empty .)
    DIFERENTE       reduce using rule 27 (AUX_AND -> empty .)
    OR              reduce using rule 27 (AUX_AND -> empty .)
    MAS             reduce using rule 27 (AUX_AND -> empty .)
    MENOS           reduce using rule 27 (AUX_AND -> empty .)
    DOS_PUNTOS      reduce using rule 27 (AUX_AND -> empty .)
    PUNTO_COMA      reduce using rule 27 (AUX_AND -> empty .)
    PARENTESIS_DERECHO reduce using rule 27 (AUX_AND -> empty .)


state 196

    (24) E3 -> E3 POR E4 AUX_POR .

    AND             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    POR             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    ENTRE           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MODULO          reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    IGUAL           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DIFERENTE       reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    OR              reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAS             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOS           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DOS_PUNTOS      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PUNTO_COMA      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PARENTESIS_DERECHO reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)


state 197

    (28) AUX_POR -> empty .

    AND             reduce using rule 28 (AUX_POR -> empty .)
    POR             reduce using rule 28 (AUX_POR -> empty .)
    ENTRE           reduce using rule 28 (AUX_POR -> empty .)
    MODULO          reduce using rule 28 (AUX_POR -> empty .)
    MENOR           reduce using rule 28 (AUX_POR -> empty .)
    MAYOR           reduce using rule 28 (AUX_POR -> empty .)
    MENOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    MAYOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    IGUAL           reduce using rule 28 (AUX_POR -> empty .)
    DIFERENTE       reduce using rule 28 (AUX_POR -> empty .)
    OR              reduce using rule 28 (AUX_POR -> empty .)
    MAS             reduce using rule 28 (AUX_POR -> empty .)
    MENOS           reduce using rule 28 (AUX_POR -> empty .)
    DOS_PUNTOS      reduce using rule 28 (AUX_POR -> empty .)
    PUNTO_COMA      reduce using rule 28 (AUX_POR -> empty .)
    PARENTESIS_DERECHO reduce using rule 28 (AUX_POR -> empty .)


state 198

    (25) E3 -> E3 ENTRE E4 AUX_ENTRE .

    AND             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    POR             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    ENTRE           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MODULO          reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    IGUAL           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DIFERENTE       reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    OR              reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAS             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOS           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DOS_PUNTOS      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PUNTO_COMA      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PARENTESIS_DERECHO reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)


state 199

    (29) AUX_ENTRE -> empty .

    AND             reduce using rule 29 (AUX_ENTRE -> empty .)
    POR             reduce using rule 29 (AUX_ENTRE -> empty .)
    ENTRE           reduce using rule 29 (AUX_ENTRE -> empty .)
    MODULO          reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    IGUAL           reduce using rule 29 (AUX_ENTRE -> empty .)
    DIFERENTE       reduce using rule 29 (AUX_ENTRE -> empty .)
    OR              reduce using rule 29 (AUX_ENTRE -> empty .)
    MAS             reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOS           reduce using rule 29 (AUX_ENTRE -> empty .)
    DOS_PUNTOS      reduce using rule 29 (AUX_ENTRE -> empty .)
    PUNTO_COMA      reduce using rule 29 (AUX_ENTRE -> empty .)
    PARENTESIS_DERECHO reduce using rule 29 (AUX_ENTRE -> empty .)


state 200

    (26) E3 -> E3 MODULO E4 AUX_MODULO .

    AND             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    POR             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    ENTRE           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MODULO          reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    IGUAL           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DIFERENTE       reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    OR              reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAS             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOS           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DOS_PUNTOS      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PUNTO_COMA      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PARENTESIS_DERECHO reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)


state 201

    (30) AUX_MODULO -> empty .

    AND             reduce using rule 30 (AUX_MODULO -> empty .)
    POR             reduce using rule 30 (AUX_MODULO -> empty .)
    ENTRE           reduce using rule 30 (AUX_MODULO -> empty .)
    MODULO          reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    IGUAL           reduce using rule 30 (AUX_MODULO -> empty .)
    DIFERENTE       reduce using rule 30 (AUX_MODULO -> empty .)
    OR              reduce using rule 30 (AUX_MODULO -> empty .)
    MAS             reduce using rule 30 (AUX_MODULO -> empty .)
    MENOS           reduce using rule 30 (AUX_MODULO -> empty .)
    DOS_PUNTOS      reduce using rule 30 (AUX_MODULO -> empty .)
    PUNTO_COMA      reduce using rule 30 (AUX_MODULO -> empty .)
    PARENTESIS_DERECHO reduce using rule 30 (AUX_MODULO -> empty .)


state 202

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST . END LOOP PUNTO_COMA

    END             shift and go to state 212


state 203

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS . EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 213
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 204

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E . AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (73) AUX_FOR2 -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_FOR2                       shift and go to state 214
    empty                          shift and go to state 215

state 205

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END . FUNCTION PUNTO_COMA

    FUNCTION        shift and go to state 216


state 206

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .

    $end            reduce using rule 88 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)


state 207

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 217


state 208

    (86) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 86 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 86 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 86 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)


state 209

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA . EST
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 218
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 210

    (75) IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF . ELSIF_
    (76) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (77) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (78) ELSIF_ -> . ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    END             shift and go to state 220
    ELSE            shift and go to state 221
    ELSIF           shift and go to state 222

    ELSIF_                         shift and go to state 219

state 211

    (83) AUX_SALIRIF -> empty .

    END             reduce using rule 83 (AUX_SALIRIF -> empty .)
    ELSE            reduce using rule 83 (AUX_SALIRIF -> empty .)
    ELSIF           reduce using rule 83 (AUX_SALIRIF -> empty .)


state 212

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END . LOOP PUNTO_COMA

    LOOP            shift and go to state 223


state 213

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST . END LOOP PUNTO_COMA AUX_ENDWHILE

    END             shift and go to state 224


state 214

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 . PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 225


state 215

    (73) AUX_FOR2 -> empty .

    PUNTO_COMA      reduce using rule 73 (AUX_FOR2 -> empty .)


state 216

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 226


state 217

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 227


state 218

    (60) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .

    END             reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    RETURN          reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 60 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)


state 219

    (75) IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .

    PROCEDURE       reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FUNCTION        reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    PRINT           reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    INPUT           reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ID              reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    IF              reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    DO              reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    WHILE           reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FOR             reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    END             reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    RETURN          reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSE            reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSIF           reduce using rule 75 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)


state 220

    (76) ELSIF_ -> END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 228


state 221

    (77) ELSIF_ -> ELSE . AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (82) AUX_ELSE -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSE                       shift and go to state 229
    empty                          shift and go to state 230

state 222

    (78) ELSIF_ -> ELSIF . AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (80) AUX_ELSIF -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_ELSIF                      shift and go to state 231
    empty                          shift and go to state 232

state 223

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP . PUNTO_COMA

    PUNTO_COMA      shift and go to state 233


state 224

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END . LOOP PUNTO_COMA AUX_ENDWHILE

    LOOP            shift and go to state 234


state 225

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA . A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (39) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 41

    A                              shift and go to state 235
    ID_COMPLETO                    shift and go to state 58

state 226

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .

    PROCEDURE       reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    INT             reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    FLOAT           reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)


state 227

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .

    $end            reduce using rule 89 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)


state 228

    (76) ELSIF_ -> END IF . AUX_ENDIF PUNTO_COMA
    (84) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 236
    empty                          shift and go to state 237

state 229

    (77) ELSIF_ -> ELSE AUX_ELSE . DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA

    DOS_PUNTOS      shift and go to state 238


state 230

    (82) AUX_ELSE -> empty .

    DOS_PUNTOS      reduce using rule 82 (AUX_ELSE -> empty .)


state 231

    (78) ELSIF_ -> ELSIF AUX_ELSIF . E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . FUNCTION
    (36) T -> . ID_COMPLETO
    (37) T -> . VALOR_INT
    (38) T -> . VALOR_FLOAT
    (39) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 85
    PARENTESIS_IZQUIERDO shift and go to state 86
    FUNCTION        shift and go to state 87
    VALOR_INT       shift and go to state 89
    VALOR_FLOAT     shift and go to state 90
    ID              shift and go to state 41

    E                              shift and go to state 239
    E2                             shift and go to state 81
    E3                             shift and go to state 82
    E4                             shift and go to state 83
    T                              shift and go to state 84
    ID_COMPLETO                    shift and go to state 88

state 232

    (80) AUX_ELSIF -> empty .

    NOT             reduce using rule 80 (AUX_ELSIF -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 80 (AUX_ELSIF -> empty .)
    FUNCTION        reduce using rule 80 (AUX_ELSIF -> empty .)
    VALOR_INT       reduce using rule 80 (AUX_ELSIF -> empty .)
    VALOR_FLOAT     reduce using rule 80 (AUX_ELSIF -> empty .)
    ID              reduce using rule 80 (AUX_ELSIF -> empty .)


state 233

    (66) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .

    PROCEDURE       reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FUNCTION        reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    PRINT           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    INPUT           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ID              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    IF              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    DO              reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    WHILE           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FOR             reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    END             reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    RETURN          reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSE            reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSIF           reduce using rule 66 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)


state 234

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP . PUNTO_COMA AUX_ENDWHILE

    PUNTO_COMA      shift and go to state 240


state 235

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A . DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    DOS_PUNTOS      shift and go to state 241


state 236

    (76) ELSIF_ -> END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 242


state 237

    (84) AUX_ENDIF -> empty .

    PUNTO_COMA      reduce using rule 84 (AUX_ENDIF -> empty .)


state 238

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS . EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 243
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 239

    (78) ELSIF_ -> ELSIF AUX_ELSIF E . AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (81) AUX_ELSIF2 -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSIF2                     shift and go to state 244
    empty                          shift and go to state 245

state 240

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA . AUX_ENDWHILE
    (70) AUX_ENDWHILE -> . empty
    (1) empty -> .

    PROCEDURE       reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    INPUT           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_ENDWHILE                   shift and go to state 246
    empty                          shift and go to state 247

state 241

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS . EST END LOOP PUNTO_COMA AUX_ENDFOR
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    A                              shift and go to state 50
    EST                            shift and go to state 248
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 242

    (76) ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .

    PROCEDURE       reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    FUNCTION        reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    PRINT           reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 76 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)


state 243

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST . AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (83) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 249
    empty                          shift and go to state 211

state 244

    (78) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 . DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    DOS_PUNTOS      shift and go to state 250


state 245

    (81) AUX_ELSIF2 -> empty .

    DOS_PUNTOS      reduce using rule 81 (AUX_ELSIF2 -> empty .)


state 246

    (67) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .

    PROCEDURE       reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    FUNCTION        reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    PRINT           reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    INPUT           reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ID              reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    IF              reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    DO              reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    WHILE           reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    FOR             reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    END             reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    RETURN          reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ELSE            reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ELSIF           reduce using rule 67 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)


state 247

    (70) AUX_ENDWHILE -> empty .

    PROCEDURE       reduce using rule 70 (AUX_ENDWHILE -> empty .)
    FUNCTION        reduce using rule 70 (AUX_ENDWHILE -> empty .)
    PRINT           reduce using rule 70 (AUX_ENDWHILE -> empty .)
    INPUT           reduce using rule 70 (AUX_ENDWHILE -> empty .)
    ID              reduce using rule 70 (AUX_ENDWHILE -> empty .)
    IF              reduce using rule 70 (AUX_ENDWHILE -> empty .)
    DO              reduce using rule 70 (AUX_ENDWHILE -> empty .)
    WHILE           reduce using rule 70 (AUX_ENDWHILE -> empty .)
    FOR             reduce using rule 70 (AUX_ENDWHILE -> empty .)
    END             reduce using rule 70 (AUX_ENDWHILE -> empty .)
    RETURN          reduce using rule 70 (AUX_ENDWHILE -> empty .)
    ELSE            reduce using rule 70 (AUX_ENDWHILE -> empty .)
    ELSIF           reduce using rule 70 (AUX_ENDWHILE -> empty .)


state 248

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST . END LOOP PUNTO_COMA AUX_ENDFOR

    END             shift and go to state 251


state 249

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF . END IF AUX_ENDIF PUNTO_COMA

    END             shift and go to state 252


state 250

    (78) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS . EST AUX_SALIRIF ELSIF_
    (54) EST -> . empty
    (55) EST -> . LOOP_ EST
    (56) EST -> . IF_ EST
    (57) EST -> . A PUNTO_COMA EST
    (58) EST -> . PROCEDURE PUNTO_COMA EST
    (59) EST -> . FUNCTION PUNTO_COMA EST
    (60) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (61) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (62) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (1) empty -> .
    (63) LOOP_ -> . DO_WHILE
    (64) LOOP_ -> . WHILE_
    (65) LOOP_ -> . FOR_
    (75) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (49) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (50) A -> . ID_COMPLETO ASIGNACION E
    (51) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (52) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (53) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (66) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (67) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (71) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (39) ID_COMPLETO -> . ID RANGOS

    PROCEDURE       shift and go to state 44
    FUNCTION        shift and go to state 51
    PRINT           shift and go to state 52
    INPUT           shift and go to state 53
    ID              shift and go to state 45
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 57
    DO              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61

    EST                            shift and go to state 253
    empty                          shift and go to state 47
    LOOP_                          shift and go to state 48
    IF_                            shift and go to state 49
    A                              shift and go to state 50
    DO_WHILE                       shift and go to state 54
    WHILE_                         shift and go to state 55
    FOR_                           shift and go to state 56
    ID_COMPLETO                    shift and go to state 58

state 251

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END . LOOP PUNTO_COMA AUX_ENDFOR

    LOOP            shift and go to state 254


state 252

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 255


state 253

    (78) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST . AUX_SALIRIF ELSIF_
    (83) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 256
    empty                          shift and go to state 211

state 254

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP . PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 257


state 255

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF . AUX_ENDIF PUNTO_COMA
    (84) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 258
    empty                          shift and go to state 237

state 256

    (78) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF . ELSIF_
    (76) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (77) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (78) ELSIF_ -> . ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    END             shift and go to state 220
    ELSE            shift and go to state 221
    ELSIF           shift and go to state 222

    ELSIF_                         shift and go to state 259

state 257

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA . AUX_ENDFOR
    (74) AUX_ENDFOR -> . empty
    (1) empty -> .

    PROCEDURE       reduce using rule 1 (empty -> .)
    FUNCTION        reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    INPUT           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_ENDFOR                     shift and go to state 260
    empty                          shift and go to state 261

state 258

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 262


state 259

    (78) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .

    PROCEDURE       reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FUNCTION        reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    PRINT           reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    INPUT           reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ID              reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    IF              reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    DO              reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    WHILE           reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FOR             reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    END             reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    RETURN          reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSE            reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSIF           reduce using rule 78 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)


state 260

    (71) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .

    PROCEDURE       reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    FUNCTION        reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    PRINT           reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    INPUT           reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ID              reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    IF              reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    DO              reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    WHILE           reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    FOR             reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    END             reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    RETURN          reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSE            reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSIF           reduce using rule 71 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)


state 261

    (74) AUX_ENDFOR -> empty .

    PROCEDURE       reduce using rule 74 (AUX_ENDFOR -> empty .)
    FUNCTION        reduce using rule 74 (AUX_ENDFOR -> empty .)
    PRINT           reduce using rule 74 (AUX_ENDFOR -> empty .)
    INPUT           reduce using rule 74 (AUX_ENDFOR -> empty .)
    ID              reduce using rule 74 (AUX_ENDFOR -> empty .)
    IF              reduce using rule 74 (AUX_ENDFOR -> empty .)
    DO              reduce using rule 74 (AUX_ENDFOR -> empty .)
    WHILE           reduce using rule 74 (AUX_ENDFOR -> empty .)
    FOR             reduce using rule 74 (AUX_ENDFOR -> empty .)
    END             reduce using rule 74 (AUX_ENDFOR -> empty .)
    RETURN          reduce using rule 74 (AUX_ENDFOR -> empty .)
    ELSE            reduce using rule 74 (AUX_ENDFOR -> empty .)
    ELSIF           reduce using rule 74 (AUX_ENDFOR -> empty .)


state 262

    (77) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .

    PROCEDURE       reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    FUNCTION        reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    PRINT           reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 77 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROCEDURE in state 0 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 4 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 5 resolved as shift
WARNING: reduce/reduce conflict in state 95 resolved using rule (T -> ID_COMPLETO)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (T -> VALOR_INT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (T -> VALOR_FLOAT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) in state 97
WARNING: Rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) is never reduced
