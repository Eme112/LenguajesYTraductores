Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO
    TEXTO

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     empty -> <empty>
Rule 2     E -> E2
Rule 3     E -> E2 MENOR E2 AUX_MENOR
Rule 4     E -> E2 MAYOR E2 AUX_MAYOR
Rule 5     E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
Rule 6     E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
Rule 7     E -> E2 IGUAL E2 AUX_IGUAL
Rule 8     E -> E2 DIFERENTE E2 AUX_DIFERENTE
Rule 9     AUX_MENOR -> empty
Rule 10    AUX_MAYOR -> empty
Rule 11    AUX_MENOR_IGUAL -> empty
Rule 12    AUX_MAYOR_IGUAL -> empty
Rule 13    AUX_IGUAL -> empty
Rule 14    AUX_DIFERENTE -> empty
Rule 15    E2 -> E3
Rule 16    E2 -> E2 OR E3 AUX_OR
Rule 17    E2 -> E2 MAS E3 AUX_MAS
Rule 18    E2 -> E2 MENOS E3 AUX_MENOS
Rule 19    AUX_OR -> empty
Rule 20    AUX_MAS -> empty
Rule 21    AUX_MENOS -> empty
Rule 22    E3 -> E4
Rule 23    E3 -> E3 AND E4 AUX_AND
Rule 24    E3 -> E3 POR E4 AUX_POR
Rule 25    E3 -> E3 ENTRE E4 AUX_ENTRE
Rule 26    E3 -> E3 MODULO E4 AUX_MODULO
Rule 27    AUX_AND -> empty
Rule 28    AUX_POR -> empty
Rule 29    AUX_ENTRE -> empty
Rule 30    AUX_MODULO -> empty
Rule 31    E4 -> T
Rule 32    E4 -> NOT T AUX_NOT
Rule 33    AUX_NOT -> empty
Rule 34    T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
Rule 35    T -> ID_COMPLETO
Rule 36    T -> VALOR_INT
Rule 37    T -> VALOR_FLOAT
Rule 38    ID_COMPLETO -> ID RANGOS
Rule 39    RANGOS -> empty
Rule 40    RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
Rule 41    V -> TIPO DOS_PUNTOS A PUNTO_COMA
Rule 42    V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
Rule 43    TIPO -> INT
Rule 44    TIPO -> FLOAT
Rule 45    V_M -> empty
Rule 46    V_M -> V V_M
Rule 47    A -> ID_COMPLETO ASIGNACION VALOR_INT
Rule 48    A -> ID_COMPLETO ASIGNACION VALOR_FLOAT
Rule 49    A -> ID_COMPLETO ASIGNACION E
Rule 50    A -> ID_COMPLETO ASIGNACION ID_COMPLETO
Rule 51    A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 52    A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
Rule 53    EST -> empty
Rule 54    EST -> LOOP_ EST
Rule 55    EST -> IF_ EST
Rule 56    EST -> A PUNTO_COMA EST
Rule 57    EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
Rule 58    EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
Rule 59    EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
Rule 60    AUX_PROC -> empty
Rule 61    LOOP_ -> DO_WHILE
Rule 62    LOOP_ -> WHILE_
Rule 63    LOOP_ -> FOR_
Rule 64    DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
Rule 65    WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
Rule 66    AUX_WHILE1 -> empty
Rule 67    AUX_WHILE2 -> empty
Rule 68    AUX_ENDWHILE -> empty
Rule 69    FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
Rule 70    AUX_FOR1 -> empty
Rule 71    AUX_FOR2 -> empty
Rule 72    AUX_ENDFOR -> empty
Rule 73    IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
Rule 74    ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA
Rule 75    ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
Rule 76    ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
Rule 77    AUX_IF -> empty
Rule 78    AUX_ELSIF -> empty
Rule 79    AUX_ELSIF2 -> empty
Rule 80    AUX_ELSE -> empty
Rule 81    AUX_SALIRIF -> empty
Rule 82    AUX_ENDIF -> empty
Rule 83    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
Rule 84    P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
Rule 85    P_AUX -> empty
Rule 86    AUX_ENDPROC -> empty
Rule 87    F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
Rule 88    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
Rule 89    MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
Rule 90    MP_AUX -> empty
Rule 91    PROGRAMA -> F PROGRAMA
Rule 92    PROGRAMA -> P PROGRAMA
Rule 93    PROGRAMA -> MP PROGRAMA
Rule 94    PROGRAMA -> empty

Terminals, with rules where they appear

AND                  : 23
ASIGNACION           : 47 48 49 50 51 52
BEGIN                : 83 84 87 88 89
COMILLAS             : 57 57
CORCHETE_DERECHO     : 40
CORCHETE_IZQUIERDO   : 40
DIFERENTE            : 8
DO                   : 64
DOS_PUNTOS           : 41 42 64 65 69 73 75 76 83 84 87 88 89
ELSE                 : 75
ELSIF                : 76
END                  : 64 65 69 74 75 83 84 87 88 89
ENTRE                : 25
FLOAT                : 44
FOR                  : 69
FUNCTION             : 87
ID                   : 38 51 59 83 84 87 87
IF                   : 73 74 75
IGUAL                : 7
INPUT                : 52 58
INT                  : 43
LOOP                 : 64 65 69
MAIN                 : 88 89
MAS                  : 17
MAYOR                : 4
MAYOR_IGUAL          : 6
MENOR                : 3
MENOR_IGUAL          : 5
MENOS                : 18
MODULO               : 26
NOT                  : 32
OR                   : 16
PARENTESIS_DERECHO   : 34 51 52 57 58 59 83 84 87 88 89
PARENTESIS_IZQUIERDO : 34 51 52 57 58 59 83 84 87 88 89
POR                  : 24
PRINT                : 57
PROCEDURE            : 83 83 84 84 88 88 89 89
PUNTO                : 
PUNTO_COMA           : 41 42 56 57 58 59 64 65 69 69 69 74 75 83 83 84 84 84 87 87 87 88 88 89 89 89
RETURN               : 84 87 89
TEXTO                : 
VALOR_FLOAT          : 37 48
VALOR_INT            : 36 40 47
WHILE                : 64 65
error                : 

Nonterminals, with rules where they appear

A                    : 41 56 69 69
AUX_AND              : 23
AUX_DIFERENTE        : 8
AUX_ELSE             : 75
AUX_ELSIF            : 76
AUX_ELSIF2           : 76
AUX_ENDFOR           : 69
AUX_ENDIF            : 74 75
AUX_ENDPROC          : 83 84
AUX_ENDWHILE         : 65
AUX_ENTRE            : 25
AUX_FOR1             : 69
AUX_FOR2             : 69
AUX_IF               : 73
AUX_IGUAL            : 7
AUX_MAS              : 17
AUX_MAYOR            : 4
AUX_MAYOR_IGUAL      : 6
AUX_MENOR            : 3
AUX_MENOR_IGUAL      : 5
AUX_MENOS            : 18
AUX_MODULO           : 26
AUX_NOT              : 32
AUX_OR               : 16
AUX_POR              : 24
AUX_PROC             : 59
AUX_SALIRIF          : 73 75 76
AUX_WHILE1           : 65
AUX_WHILE2           : 65
DO_WHILE             : 61
E                    : 34 49 64 65 69 73 76
E2                   : 2 3 3 4 4 5 5 6 6 7 7 8 8 16 17 18
E3                   : 15 16 17 18 23 24 25 26
E4                   : 22 23 24 25 26
ELSIF_               : 73 76
EST                  : 54 55 56 57 58 59 64 65 69 73 75 76 83 84 87 88 89
F                    : 91
FOR_                 : 63
ID_COMPLETO          : 35 42 47 48 49 50 50 51 52
IF_                  : 55
LOOP_                : 54
MP                   : 93
MP_AUX               : 88 89
P                    : 92
PROGRAMA             : 91 92 93 0
P_AUX                : 83 84
RANGOS               : 38 40
T                    : 31 32
TIPO                 : 41 42 87
V                    : 46
V_M                  : 46 83 84 87 88 89
WHILE_               : 62
empty                : 9 10 11 12 13 14 19 20 21 27 28 29 30 33 39 45 53 60 66 67 68 70 71 72 77 78 79 80 81 82 85 86 90 94

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (91) PROGRAMA -> . F PROGRAMA
    (92) PROGRAMA -> . P PROGRAMA
    (93) PROGRAMA -> . MP PROGRAMA
    (94) PROGRAMA -> . empty
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (83) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (88) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (1) empty -> .
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    PROCEDURE       shift and go to state 7
    $end            reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    PROGRAMA                       shift and go to state 1
    F                              shift and go to state 2
    P                              shift and go to state 3
    MP                             shift and go to state 4
    empty                          shift and go to state 5
    TIPO                           shift and go to state 6

state 1

    (0) S' -> PROGRAMA .



state 2

    (91) PROGRAMA -> F . PROGRAMA
    (91) PROGRAMA -> . F PROGRAMA
    (92) PROGRAMA -> . P PROGRAMA
    (93) PROGRAMA -> . MP PROGRAMA
    (94) PROGRAMA -> . empty
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (83) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (88) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (1) empty -> .
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    PROCEDURE       shift and go to state 7
    $end            reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    F                              shift and go to state 2
    PROGRAMA                       shift and go to state 10
    P                              shift and go to state 3
    MP                             shift and go to state 4
    empty                          shift and go to state 5
    TIPO                           shift and go to state 6

state 3

    (92) PROGRAMA -> P . PROGRAMA
    (91) PROGRAMA -> . F PROGRAMA
    (92) PROGRAMA -> . P PROGRAMA
    (93) PROGRAMA -> . MP PROGRAMA
    (94) PROGRAMA -> . empty
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (83) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (88) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (1) empty -> .
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    PROCEDURE       shift and go to state 7
    $end            reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    P                              shift and go to state 3
    PROGRAMA                       shift and go to state 11
    F                              shift and go to state 2
    MP                             shift and go to state 4
    empty                          shift and go to state 5
    TIPO                           shift and go to state 6

state 4

    (93) PROGRAMA -> MP . PROGRAMA
    (91) PROGRAMA -> . F PROGRAMA
    (92) PROGRAMA -> . P PROGRAMA
    (93) PROGRAMA -> . MP PROGRAMA
    (94) PROGRAMA -> . empty
    (87) F -> . TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (83) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> . PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (88) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> . PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (1) empty -> .
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    PROCEDURE       shift and go to state 7
    $end            reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    MP                             shift and go to state 4
    PROGRAMA                       shift and go to state 12
    F                              shift and go to state 2
    P                              shift and go to state 3
    empty                          shift and go to state 5
    TIPO                           shift and go to state 6

state 5

    (94) PROGRAMA -> empty .

    $end            reduce using rule 94 (PROGRAMA -> empty .)


state 6

    (87) F -> TIPO . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 13


state 7

    (83) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (88) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE . MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    ID              shift and go to state 14
    MAIN            shift and go to state 15


state 8

    (43) TIPO -> INT .

    ID              reduce using rule 43 (TIPO -> INT .)
    DOS_PUNTOS      reduce using rule 43 (TIPO -> INT .)


state 9

    (44) TIPO -> FLOAT .

    ID              reduce using rule 44 (TIPO -> FLOAT .)
    DOS_PUNTOS      reduce using rule 44 (TIPO -> FLOAT .)


state 10

    (91) PROGRAMA -> F PROGRAMA .

    $end            reduce using rule 91 (PROGRAMA -> F PROGRAMA .)


state 11

    (92) PROGRAMA -> P PROGRAMA .

    $end            reduce using rule 92 (PROGRAMA -> P PROGRAMA .)


state 12

    (93) PROGRAMA -> MP PROGRAMA .

    $end            reduce using rule 93 (PROGRAMA -> MP PROGRAMA .)


state 13

    (87) F -> TIPO ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 16


state 14

    (83) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    PARENTESIS_IZQUIERDO shift and go to state 17


state 15

    (88) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_IZQUIERDO shift and go to state 18


state 16

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 19


state 17

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    PARENTESIS_DERECHO shift and go to state 20


state 18

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PARENTESIS_DERECHO shift and go to state 21


state 19

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    DOS_PUNTOS      shift and go to state 22


state 20

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    DOS_PUNTOS      shift and go to state 23


state 21

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    DOS_PUNTOS      shift and go to state 24


state 22

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (45) V_M -> . empty
    (46) V_M -> . V V_M
    (1) empty -> .
    (41) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (42) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    TIPO                           shift and go to state 25
    V_M                            shift and go to state 26
    empty                          shift and go to state 27
    V                              shift and go to state 28

state 23

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (85) P_AUX -> . empty
    (1) empty -> .

    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    BEGIN           reduce using rule 1 (empty -> .)

    P_AUX                          shift and go to state 29
    empty                          shift and go to state 30

state 24

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS . MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (90) MP_AUX -> . empty
    (1) empty -> .

    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    BEGIN           reduce using rule 1 (empty -> .)

    MP_AUX                         shift and go to state 31
    empty                          shift and go to state 32

state 25

    (41) V -> TIPO . DOS_PUNTOS A PUNTO_COMA
    (42) V -> TIPO . DOS_PUNTOS ID_COMPLETO PUNTO_COMA

    DOS_PUNTOS      shift and go to state 33


state 26

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M . BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    BEGIN           shift and go to state 34


state 27

    (45) V_M -> empty .

    BEGIN           reduce using rule 45 (V_M -> empty .)


state 28

    (46) V_M -> V . V_M
    (45) V_M -> . empty
    (46) V_M -> . V V_M
    (1) empty -> .
    (41) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (42) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V                              shift and go to state 28
    V_M                            shift and go to state 35
    empty                          shift and go to state 27
    TIPO                           shift and go to state 25

state 29

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (45) V_M -> . empty
    (46) V_M -> . V V_M
    (1) empty -> .
    (41) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (42) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V_M                            shift and go to state 36
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 25

state 30

    (85) P_AUX -> empty .

    INT             reduce using rule 85 (P_AUX -> empty .)
    FLOAT           reduce using rule 85 (P_AUX -> empty .)
    BEGIN           reduce using rule 85 (P_AUX -> empty .)


state 31

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX . V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX . V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (45) V_M -> . empty
    (46) V_M -> . V V_M
    (1) empty -> .
    (41) V -> . TIPO DOS_PUNTOS A PUNTO_COMA
    (42) V -> . TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA
    (43) TIPO -> . INT
    (44) TIPO -> . FLOAT

    BEGIN           reduce using rule 1 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    V_M                            shift and go to state 37
    empty                          shift and go to state 27
    V                              shift and go to state 28
    TIPO                           shift and go to state 25

state 32

    (90) MP_AUX -> empty .

    INT             reduce using rule 90 (MP_AUX -> empty .)
    FLOAT           reduce using rule 90 (MP_AUX -> empty .)
    BEGIN           reduce using rule 90 (MP_AUX -> empty .)


state 33

    (41) V -> TIPO DOS_PUNTOS . A PUNTO_COMA
    (42) V -> TIPO DOS_PUNTOS . ID_COMPLETO PUNTO_COMA
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (38) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 38
    ID_COMPLETO                    shift and go to state 39

state 34

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN . PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 41


state 35

    (46) V_M -> V V_M .

    BEGIN           reduce using rule 46 (V_M -> V V_M .)


state 36

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    BEGIN           shift and go to state 42


state 37

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M . BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M . BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    BEGIN           shift and go to state 43


state 38

    (41) V -> TIPO DOS_PUNTOS A . PUNTO_COMA

    PUNTO_COMA      shift and go to state 44


state 39

    (42) V -> TIPO DOS_PUNTOS ID_COMPLETO . PUNTO_COMA
    (47) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (48) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (49) A -> ID_COMPLETO . ASIGNACION E
    (50) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (51) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PUNTO_COMA      shift and go to state 45
    ASIGNACION      shift and go to state 46


state 40

    (38) ID_COMPLETO -> ID . RANGOS
    (39) RANGOS -> . empty
    (40) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 47
    empty                          shift and go to state 48

state 41

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA . EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 51
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 42

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    PUNTO_COMA      shift and go to state 66


state 43

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN . PUNTO_COMA EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN . PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 67


state 44

    (41) V -> TIPO DOS_PUNTOS A PUNTO_COMA .

    INT             reduce using rule 41 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    FLOAT           reduce using rule 41 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)
    BEGIN           reduce using rule 41 (V -> TIPO DOS_PUNTOS A PUNTO_COMA .)


state 45

    (42) V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .

    INT             reduce using rule 42 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    FLOAT           reduce using rule 42 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)
    BEGIN           reduce using rule 42 (V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA .)


state 46

    (47) A -> ID_COMPLETO ASIGNACION . VALOR_INT
    (48) A -> ID_COMPLETO ASIGNACION . VALOR_FLOAT
    (49) A -> ID_COMPLETO ASIGNACION . E
    (50) A -> ID_COMPLETO ASIGNACION . ID_COMPLETO
    (51) A -> ID_COMPLETO ASIGNACION . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> ID_COMPLETO ASIGNACION . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (38) ID_COMPLETO -> . ID RANGOS
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT

    VALOR_INT       shift and go to state 69
    VALOR_FLOAT     shift and go to state 70
    ID              shift and go to state 72
    INPUT           shift and go to state 74
    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73

    ID_COMPLETO                    shift and go to state 68
    E                              shift and go to state 71
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78

state 47

    (38) ID_COMPLETO -> ID RANGOS .

    PUNTO_COMA      reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    ASIGNACION      reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    AND             reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    POR             reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    ENTRE           reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MODULO          reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MENOR           reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MAYOR           reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MENOR_IGUAL     reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MAYOR_IGUAL     reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    IGUAL           reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    DIFERENTE       reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    OR              reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MAS             reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    MENOS           reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    DOS_PUNTOS      reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)
    PARENTESIS_DERECHO reduce using rule 38 (ID_COMPLETO -> ID RANGOS .)


state 48

    (39) RANGOS -> empty .

    PUNTO_COMA      reduce using rule 39 (RANGOS -> empty .)
    ASIGNACION      reduce using rule 39 (RANGOS -> empty .)
    AND             reduce using rule 39 (RANGOS -> empty .)
    POR             reduce using rule 39 (RANGOS -> empty .)
    ENTRE           reduce using rule 39 (RANGOS -> empty .)
    MODULO          reduce using rule 39 (RANGOS -> empty .)
    MENOR           reduce using rule 39 (RANGOS -> empty .)
    MAYOR           reduce using rule 39 (RANGOS -> empty .)
    MENOR_IGUAL     reduce using rule 39 (RANGOS -> empty .)
    MAYOR_IGUAL     reduce using rule 39 (RANGOS -> empty .)
    IGUAL           reduce using rule 39 (RANGOS -> empty .)
    DIFERENTE       reduce using rule 39 (RANGOS -> empty .)
    OR              reduce using rule 39 (RANGOS -> empty .)
    MAS             reduce using rule 39 (RANGOS -> empty .)
    MENOS           reduce using rule 39 (RANGOS -> empty .)
    DOS_PUNTOS      reduce using rule 39 (RANGOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 39 (RANGOS -> empty .)


state 49

    (40) RANGOS -> CORCHETE_IZQUIERDO . VALOR_INT CORCHETE_DERECHO RANGOS

    VALOR_INT       shift and go to state 80


state 50

    (59) EST -> ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (38) ID_COMPLETO -> ID . RANGOS
    (39) RANGOS -> . empty
    (40) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 81
    CORCHETE_IZQUIERDO shift and go to state 49
    ASIGNACION      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 47
    empty                          shift and go to state 48

state 51

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST . RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA

    RETURN          shift and go to state 82


state 52

    (53) EST -> empty .

    RETURN          reduce using rule 53 (EST -> empty .)
    END             reduce using rule 53 (EST -> empty .)
    ELSE            reduce using rule 53 (EST -> empty .)
    ELSIF           reduce using rule 53 (EST -> empty .)


state 53

    (54) EST -> LOOP_ . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    LOOP_                          shift and go to state 53
    EST                            shift and go to state 83
    empty                          shift and go to state 52
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 54

    (55) EST -> IF_ . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    IF_                            shift and go to state 54
    EST                            shift and go to state 84
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 55

    (56) EST -> A . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 85


state 56

    (57) EST -> PRINT . PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 86


state 57

    (58) EST -> INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_IZQUIERDO shift and go to state 87


state 58

    (61) LOOP_ -> DO_WHILE .

    PRINT           reduce using rule 61 (LOOP_ -> DO_WHILE .)
    INPUT           reduce using rule 61 (LOOP_ -> DO_WHILE .)
    ID              reduce using rule 61 (LOOP_ -> DO_WHILE .)
    IF              reduce using rule 61 (LOOP_ -> DO_WHILE .)
    DO              reduce using rule 61 (LOOP_ -> DO_WHILE .)
    WHILE           reduce using rule 61 (LOOP_ -> DO_WHILE .)
    FOR             reduce using rule 61 (LOOP_ -> DO_WHILE .)
    RETURN          reduce using rule 61 (LOOP_ -> DO_WHILE .)
    END             reduce using rule 61 (LOOP_ -> DO_WHILE .)
    ELSE            reduce using rule 61 (LOOP_ -> DO_WHILE .)
    ELSIF           reduce using rule 61 (LOOP_ -> DO_WHILE .)


state 59

    (62) LOOP_ -> WHILE_ .

    PRINT           reduce using rule 62 (LOOP_ -> WHILE_ .)
    INPUT           reduce using rule 62 (LOOP_ -> WHILE_ .)
    ID              reduce using rule 62 (LOOP_ -> WHILE_ .)
    IF              reduce using rule 62 (LOOP_ -> WHILE_ .)
    DO              reduce using rule 62 (LOOP_ -> WHILE_ .)
    WHILE           reduce using rule 62 (LOOP_ -> WHILE_ .)
    FOR             reduce using rule 62 (LOOP_ -> WHILE_ .)
    RETURN          reduce using rule 62 (LOOP_ -> WHILE_ .)
    END             reduce using rule 62 (LOOP_ -> WHILE_ .)
    ELSE            reduce using rule 62 (LOOP_ -> WHILE_ .)
    ELSIF           reduce using rule 62 (LOOP_ -> WHILE_ .)


state 60

    (63) LOOP_ -> FOR_ .

    PRINT           reduce using rule 63 (LOOP_ -> FOR_ .)
    INPUT           reduce using rule 63 (LOOP_ -> FOR_ .)
    ID              reduce using rule 63 (LOOP_ -> FOR_ .)
    IF              reduce using rule 63 (LOOP_ -> FOR_ .)
    DO              reduce using rule 63 (LOOP_ -> FOR_ .)
    WHILE           reduce using rule 63 (LOOP_ -> FOR_ .)
    FOR             reduce using rule 63 (LOOP_ -> FOR_ .)
    RETURN          reduce using rule 63 (LOOP_ -> FOR_ .)
    END             reduce using rule 63 (LOOP_ -> FOR_ .)
    ELSE            reduce using rule 63 (LOOP_ -> FOR_ .)
    ELSIF           reduce using rule 63 (LOOP_ -> FOR_ .)


state 61

    (73) IF_ -> IF . E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 88
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 62

    (47) A -> ID_COMPLETO . ASIGNACION VALOR_INT
    (48) A -> ID_COMPLETO . ASIGNACION VALOR_FLOAT
    (49) A -> ID_COMPLETO . ASIGNACION E
    (50) A -> ID_COMPLETO . ASIGNACION ID_COMPLETO
    (51) A -> ID_COMPLETO . ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> ID_COMPLETO . ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    ASIGNACION      shift and go to state 46


state 63

    (64) DO_WHILE -> DO . WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA

    WHILE           shift and go to state 92


state 64

    (65) WHILE_ -> WHILE . AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (66) AUX_WHILE1 -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_WHILE1                     shift and go to state 93
    empty                          shift and go to state 94

state 65

    (69) FOR_ -> FOR . A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (38) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 95
    ID_COMPLETO                    shift and go to state 62

state 66

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 96
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 67

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA . EST END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA . EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 97
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 68

    (50) A -> ID_COMPLETO ASIGNACION ID_COMPLETO .
    (35) T -> ID_COMPLETO .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 35 (T -> ID_COMPLETO .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 35 (T -> ID_COMPLETO .)
    AND             reduce using rule 35 (T -> ID_COMPLETO .)
    POR             reduce using rule 35 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 35 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 35 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 35 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 35 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 35 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 35 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 35 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 35 (T -> ID_COMPLETO .)
    OR              reduce using rule 35 (T -> ID_COMPLETO .)
    MAS             reduce using rule 35 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 35 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 35 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 35 (T -> ID_COMPLETO .)

  ! PUNTO_COMA      [ reduce using rule 50 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]
  ! DOS_PUNTOS      [ reduce using rule 50 (A -> ID_COMPLETO ASIGNACION ID_COMPLETO .) ]


state 69

    (47) A -> ID_COMPLETO ASIGNACION VALOR_INT .
    (36) T -> VALOR_INT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 36 (T -> VALOR_INT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 36 (T -> VALOR_INT .)
    AND             reduce using rule 36 (T -> VALOR_INT .)
    POR             reduce using rule 36 (T -> VALOR_INT .)
    ENTRE           reduce using rule 36 (T -> VALOR_INT .)
    MODULO          reduce using rule 36 (T -> VALOR_INT .)
    MENOR           reduce using rule 36 (T -> VALOR_INT .)
    MAYOR           reduce using rule 36 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 36 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 36 (T -> VALOR_INT .)
    IGUAL           reduce using rule 36 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 36 (T -> VALOR_INT .)
    OR              reduce using rule 36 (T -> VALOR_INT .)
    MAS             reduce using rule 36 (T -> VALOR_INT .)
    MENOS           reduce using rule 36 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 36 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 36 (T -> VALOR_INT .)

  ! PUNTO_COMA      [ reduce using rule 47 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]
  ! DOS_PUNTOS      [ reduce using rule 47 (A -> ID_COMPLETO ASIGNACION VALOR_INT .) ]


state 70

    (48) A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .
    (37) T -> VALOR_FLOAT .

  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 37 (T -> VALOR_FLOAT .)
  ! reduce/reduce conflict for DOS_PUNTOS resolved using rule 37 (T -> VALOR_FLOAT .)
    AND             reduce using rule 37 (T -> VALOR_FLOAT .)
    POR             reduce using rule 37 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 37 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 37 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 37 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_FLOAT .)
    OR              reduce using rule 37 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 37 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_FLOAT .)

  ! PUNTO_COMA      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]
  ! DOS_PUNTOS      [ reduce using rule 48 (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT .) ]


state 71

    (49) A -> ID_COMPLETO ASIGNACION E .

    PUNTO_COMA      reduce using rule 49 (A -> ID_COMPLETO ASIGNACION E .)
    DOS_PUNTOS      reduce using rule 49 (A -> ID_COMPLETO ASIGNACION E .)


state 72

    (51) A -> ID_COMPLETO ASIGNACION ID . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (38) ID_COMPLETO -> ID . RANGOS
    (39) RANGOS -> . empty
    (40) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    PARENTESIS_IZQUIERDO shift and go to state 98
    CORCHETE_IZQUIERDO shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 47
    empty                          shift and go to state 48

state 73

    (34) T -> PARENTESIS_IZQUIERDO . E PARENTESIS_DERECHO
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 99
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 74

    (52) A -> ID_COMPLETO ASIGNACION INPUT . PARENTESIS_IZQUIERDO PARENTESIS_DERECHO

    PARENTESIS_IZQUIERDO shift and go to state 100


state 75

    (2) E -> E2 .
    (3) E -> E2 . MENOR E2 AUX_MENOR
    (4) E -> E2 . MAYOR E2 AUX_MAYOR
    (5) E -> E2 . MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> E2 . MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> E2 . IGUAL E2 AUX_IGUAL
    (8) E -> E2 . DIFERENTE E2 AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS

    PUNTO_COMA      reduce using rule 2 (E -> E2 .)
    DOS_PUNTOS      reduce using rule 2 (E -> E2 .)
    PARENTESIS_DERECHO reduce using rule 2 (E -> E2 .)
    MENOR           shift and go to state 101
    MAYOR           shift and go to state 102
    MENOR_IGUAL     shift and go to state 103
    MAYOR_IGUAL     shift and go to state 104
    IGUAL           shift and go to state 105
    DIFERENTE       shift and go to state 106
    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109


state 76

    (15) E2 -> E3 .
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO

    MENOR           reduce using rule 15 (E2 -> E3 .)
    MAYOR           reduce using rule 15 (E2 -> E3 .)
    MENOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    MAYOR_IGUAL     reduce using rule 15 (E2 -> E3 .)
    IGUAL           reduce using rule 15 (E2 -> E3 .)
    DIFERENTE       reduce using rule 15 (E2 -> E3 .)
    OR              reduce using rule 15 (E2 -> E3 .)
    MAS             reduce using rule 15 (E2 -> E3 .)
    MENOS           reduce using rule 15 (E2 -> E3 .)
    PUNTO_COMA      reduce using rule 15 (E2 -> E3 .)
    DOS_PUNTOS      reduce using rule 15 (E2 -> E3 .)
    PARENTESIS_DERECHO reduce using rule 15 (E2 -> E3 .)
    AND             shift and go to state 110
    POR             shift and go to state 111
    ENTRE           shift and go to state 112
    MODULO          shift and go to state 113


state 77

    (22) E3 -> E4 .

    AND             reduce using rule 22 (E3 -> E4 .)
    POR             reduce using rule 22 (E3 -> E4 .)
    ENTRE           reduce using rule 22 (E3 -> E4 .)
    MODULO          reduce using rule 22 (E3 -> E4 .)
    MENOR           reduce using rule 22 (E3 -> E4 .)
    MAYOR           reduce using rule 22 (E3 -> E4 .)
    MENOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    MAYOR_IGUAL     reduce using rule 22 (E3 -> E4 .)
    IGUAL           reduce using rule 22 (E3 -> E4 .)
    DIFERENTE       reduce using rule 22 (E3 -> E4 .)
    OR              reduce using rule 22 (E3 -> E4 .)
    MAS             reduce using rule 22 (E3 -> E4 .)
    MENOS           reduce using rule 22 (E3 -> E4 .)
    PUNTO_COMA      reduce using rule 22 (E3 -> E4 .)
    DOS_PUNTOS      reduce using rule 22 (E3 -> E4 .)
    PARENTESIS_DERECHO reduce using rule 22 (E3 -> E4 .)


state 78

    (31) E4 -> T .

    AND             reduce using rule 31 (E4 -> T .)
    POR             reduce using rule 31 (E4 -> T .)
    ENTRE           reduce using rule 31 (E4 -> T .)
    MODULO          reduce using rule 31 (E4 -> T .)
    MENOR           reduce using rule 31 (E4 -> T .)
    MAYOR           reduce using rule 31 (E4 -> T .)
    MENOR_IGUAL     reduce using rule 31 (E4 -> T .)
    MAYOR_IGUAL     reduce using rule 31 (E4 -> T .)
    IGUAL           reduce using rule 31 (E4 -> T .)
    DIFERENTE       reduce using rule 31 (E4 -> T .)
    OR              reduce using rule 31 (E4 -> T .)
    MAS             reduce using rule 31 (E4 -> T .)
    MENOS           reduce using rule 31 (E4 -> T .)
    PUNTO_COMA      reduce using rule 31 (E4 -> T .)
    DOS_PUNTOS      reduce using rule 31 (E4 -> T .)
    PARENTESIS_DERECHO reduce using rule 31 (E4 -> T .)


state 79

    (32) E4 -> NOT . T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    T                              shift and go to state 114
    ID_COMPLETO                    shift and go to state 89

state 80

    (40) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT . CORCHETE_DERECHO RANGOS

    CORCHETE_DERECHO shift and go to state 115


state 81

    (59) EST -> ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 116


state 82

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN . ID PUNTO_COMA END FUNCTION PUNTO_COMA

    ID              shift and go to state 117


state 83

    (54) EST -> LOOP_ EST .

    RETURN          reduce using rule 54 (EST -> LOOP_ EST .)
    END             reduce using rule 54 (EST -> LOOP_ EST .)
    ELSE            reduce using rule 54 (EST -> LOOP_ EST .)
    ELSIF           reduce using rule 54 (EST -> LOOP_ EST .)


state 84

    (55) EST -> IF_ EST .

    RETURN          reduce using rule 55 (EST -> IF_ EST .)
    END             reduce using rule 55 (EST -> IF_ EST .)
    ELSE            reduce using rule 55 (EST -> IF_ EST .)
    ELSIF           reduce using rule 55 (EST -> IF_ EST .)


state 85

    (56) EST -> A PUNTO_COMA . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    A                              shift and go to state 55
    EST                            shift and go to state 118
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 86

    (57) EST -> PRINT PARENTESIS_IZQUIERDO . COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 119


state 87

    (58) EST -> INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 120


state 88

    (73) IF_ -> IF E . AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (77) AUX_IF -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_IF                         shift and go to state 121
    empty                          shift and go to state 122

state 89

    (35) T -> ID_COMPLETO .

    AND             reduce using rule 35 (T -> ID_COMPLETO .)
    POR             reduce using rule 35 (T -> ID_COMPLETO .)
    ENTRE           reduce using rule 35 (T -> ID_COMPLETO .)
    MODULO          reduce using rule 35 (T -> ID_COMPLETO .)
    MENOR           reduce using rule 35 (T -> ID_COMPLETO .)
    MAYOR           reduce using rule 35 (T -> ID_COMPLETO .)
    MENOR_IGUAL     reduce using rule 35 (T -> ID_COMPLETO .)
    MAYOR_IGUAL     reduce using rule 35 (T -> ID_COMPLETO .)
    IGUAL           reduce using rule 35 (T -> ID_COMPLETO .)
    DIFERENTE       reduce using rule 35 (T -> ID_COMPLETO .)
    OR              reduce using rule 35 (T -> ID_COMPLETO .)
    MAS             reduce using rule 35 (T -> ID_COMPLETO .)
    MENOS           reduce using rule 35 (T -> ID_COMPLETO .)
    DOS_PUNTOS      reduce using rule 35 (T -> ID_COMPLETO .)
    PARENTESIS_DERECHO reduce using rule 35 (T -> ID_COMPLETO .)
    PUNTO_COMA      reduce using rule 35 (T -> ID_COMPLETO .)


state 90

    (36) T -> VALOR_INT .

    AND             reduce using rule 36 (T -> VALOR_INT .)
    POR             reduce using rule 36 (T -> VALOR_INT .)
    ENTRE           reduce using rule 36 (T -> VALOR_INT .)
    MODULO          reduce using rule 36 (T -> VALOR_INT .)
    MENOR           reduce using rule 36 (T -> VALOR_INT .)
    MAYOR           reduce using rule 36 (T -> VALOR_INT .)
    MENOR_IGUAL     reduce using rule 36 (T -> VALOR_INT .)
    MAYOR_IGUAL     reduce using rule 36 (T -> VALOR_INT .)
    IGUAL           reduce using rule 36 (T -> VALOR_INT .)
    DIFERENTE       reduce using rule 36 (T -> VALOR_INT .)
    OR              reduce using rule 36 (T -> VALOR_INT .)
    MAS             reduce using rule 36 (T -> VALOR_INT .)
    MENOS           reduce using rule 36 (T -> VALOR_INT .)
    DOS_PUNTOS      reduce using rule 36 (T -> VALOR_INT .)
    PARENTESIS_DERECHO reduce using rule 36 (T -> VALOR_INT .)
    PUNTO_COMA      reduce using rule 36 (T -> VALOR_INT .)


state 91

    (37) T -> VALOR_FLOAT .

    AND             reduce using rule 37 (T -> VALOR_FLOAT .)
    POR             reduce using rule 37 (T -> VALOR_FLOAT .)
    ENTRE           reduce using rule 37 (T -> VALOR_FLOAT .)
    MODULO          reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOR           reduce using rule 37 (T -> VALOR_FLOAT .)
    MAYOR           reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOR_IGUAL     reduce using rule 37 (T -> VALOR_FLOAT .)
    MAYOR_IGUAL     reduce using rule 37 (T -> VALOR_FLOAT .)
    IGUAL           reduce using rule 37 (T -> VALOR_FLOAT .)
    DIFERENTE       reduce using rule 37 (T -> VALOR_FLOAT .)
    OR              reduce using rule 37 (T -> VALOR_FLOAT .)
    MAS             reduce using rule 37 (T -> VALOR_FLOAT .)
    MENOS           reduce using rule 37 (T -> VALOR_FLOAT .)
    DOS_PUNTOS      reduce using rule 37 (T -> VALOR_FLOAT .)
    PARENTESIS_DERECHO reduce using rule 37 (T -> VALOR_FLOAT .)
    PUNTO_COMA      reduce using rule 37 (T -> VALOR_FLOAT .)


state 92

    (64) DO_WHILE -> DO WHILE . E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 123
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 93

    (65) WHILE_ -> WHILE AUX_WHILE1 . E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 124
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 94

    (66) AUX_WHILE1 -> empty .

    NOT             reduce using rule 66 (AUX_WHILE1 -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 66 (AUX_WHILE1 -> empty .)
    VALOR_INT       reduce using rule 66 (AUX_WHILE1 -> empty .)
    VALOR_FLOAT     reduce using rule 66 (AUX_WHILE1 -> empty .)
    ID              reduce using rule 66 (AUX_WHILE1 -> empty .)


state 95

    (69) FOR_ -> FOR A . PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 125


state 96

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA AUX_ENDPROC
    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    END             shift and go to state 126
    RETURN          shift and go to state 127


state 97

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST . END PROCEDURE PUNTO_COMA
    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST . RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA

    END             shift and go to state 128
    RETURN          shift and go to state 129


state 98

    (51) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 130


state 99

    (34) T -> PARENTESIS_IZQUIERDO E . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 131


state 100

    (52) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO . PARENTESIS_DERECHO

    PARENTESIS_DERECHO shift and go to state 132


state 101

    (3) E -> E2 MENOR . E2 AUX_MENOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 133
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 102

    (4) E -> E2 MAYOR . E2 AUX_MAYOR
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 134
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 103

    (5) E -> E2 MENOR_IGUAL . E2 AUX_MENOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 135
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 104

    (6) E -> E2 MAYOR_IGUAL . E2 AUX_MAYOR_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 136
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 105

    (7) E -> E2 IGUAL . E2 AUX_IGUAL
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 137
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 106

    (8) E -> E2 DIFERENTE . E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E2                             shift and go to state 138
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 107

    (16) E2 -> E2 OR . E3 AUX_OR
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E3                             shift and go to state 139
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 108

    (17) E2 -> E2 MAS . E3 AUX_MAS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E3                             shift and go to state 140
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 109

    (18) E2 -> E2 MENOS . E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E3                             shift and go to state 141
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 110

    (23) E3 -> E3 AND . E4 AUX_AND
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E4                             shift and go to state 142
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 111

    (24) E3 -> E3 POR . E4 AUX_POR
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E4                             shift and go to state 143
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 112

    (25) E3 -> E3 ENTRE . E4 AUX_ENTRE
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E4                             shift and go to state 144
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 113

    (26) E3 -> E3 MODULO . E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E4                             shift and go to state 145
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 114

    (32) E4 -> NOT T . AUX_NOT
    (33) AUX_NOT -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_NOT                        shift and go to state 146
    empty                          shift and go to state 147

state 115

    (40) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO . RANGOS
    (39) RANGOS -> . empty
    (40) RANGOS -> . CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS
    (1) empty -> .

    CORCHETE_IZQUIERDO shift and go to state 49
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    ASIGNACION      reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    RANGOS                         shift and go to state 148
    empty                          shift and go to state 48

state 116

    (59) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . AUX_PROC PUNTO_COMA EST
    (60) AUX_PROC -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_PROC                       shift and go to state 149
    empty                          shift and go to state 150

state 117

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID . PUNTO_COMA END FUNCTION PUNTO_COMA

    PUNTO_COMA      shift and go to state 151


state 118

    (56) EST -> A PUNTO_COMA EST .

    RETURN          reduce using rule 56 (EST -> A PUNTO_COMA EST .)
    END             reduce using rule 56 (EST -> A PUNTO_COMA EST .)
    ELSE            reduce using rule 56 (EST -> A PUNTO_COMA EST .)
    ELSIF           reduce using rule 56 (EST -> A PUNTO_COMA EST .)


state 119

    (57) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS . COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST

    COMILLAS        shift and go to state 152


state 120

    (58) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 153


state 121

    (73) IF_ -> IF E AUX_IF . DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    DOS_PUNTOS      shift and go to state 154


state 122

    (77) AUX_IF -> empty .

    DOS_PUNTOS      reduce using rule 77 (AUX_IF -> empty .)


state 123

    (64) DO_WHILE -> DO WHILE E . DOS_PUNTOS EST END LOOP PUNTO_COMA

    DOS_PUNTOS      shift and go to state 155


state 124

    (65) WHILE_ -> WHILE AUX_WHILE1 E . AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (67) AUX_WHILE2 -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_WHILE2                     shift and go to state 156
    empty                          shift and go to state 157

state 125

    (69) FOR_ -> FOR A PUNTO_COMA . AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (70) AUX_FOR1 -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_FOR1                       shift and go to state 158
    empty                          shift and go to state 159

state 126

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA AUX_ENDPROC

    PROCEDURE       shift and go to state 160


state 127

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC

    PUNTO_COMA      shift and go to state 161


state 128

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 162


state 129

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN . PUNTO_COMA END PROCEDURE PUNTO_COMA

    PUNTO_COMA      shift and go to state 163


state 130

    (51) A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 51 (A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 131

    (34) T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .

    AND             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    POR             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    ENTRE           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MODULO          reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAYOR_IGUAL     reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    IGUAL           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DIFERENTE       reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    OR              reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MAS             reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    MENOS           reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PUNTO_COMA      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)
    PARENTESIS_DERECHO reduce using rule 34 (T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO .)


state 132

    (52) A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .

    PUNTO_COMA      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)
    DOS_PUNTOS      reduce using rule 52 (A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO .)


state 133

    (3) E -> E2 MENOR E2 . AUX_MENOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (9) AUX_MENOR -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR                      shift and go to state 164
    empty                          shift and go to state 165

state 134

    (4) E -> E2 MAYOR E2 . AUX_MAYOR
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (10) AUX_MAYOR -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR                      shift and go to state 166
    empty                          shift and go to state 167

state 135

    (5) E -> E2 MENOR_IGUAL E2 . AUX_MENOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (11) AUX_MENOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOR_IGUAL                shift and go to state 168
    empty                          shift and go to state 169

state 136

    (6) E -> E2 MAYOR_IGUAL E2 . AUX_MAYOR_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (12) AUX_MAYOR_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAYOR_IGUAL                shift and go to state 170
    empty                          shift and go to state 171

state 137

    (7) E -> E2 IGUAL E2 . AUX_IGUAL
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (13) AUX_IGUAL -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_IGUAL                      shift and go to state 172
    empty                          shift and go to state 173

state 138

    (8) E -> E2 DIFERENTE E2 . AUX_DIFERENTE
    (16) E2 -> E2 . OR E3 AUX_OR
    (17) E2 -> E2 . MAS E3 AUX_MAS
    (18) E2 -> E2 . MENOS E3 AUX_MENOS
    (14) AUX_DIFERENTE -> . empty
    (1) empty -> .

    OR              shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_DIFERENTE                  shift and go to state 174
    empty                          shift and go to state 175

state 139

    (16) E2 -> E2 OR E3 . AUX_OR
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (19) AUX_OR -> . empty
    (1) empty -> .

    AND             shift and go to state 110
    POR             shift and go to state 111
    ENTRE           shift and go to state 112
    MODULO          shift and go to state 113
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_OR                         shift and go to state 176
    empty                          shift and go to state 177

state 140

    (17) E2 -> E2 MAS E3 . AUX_MAS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (20) AUX_MAS -> . empty
    (1) empty -> .

    AND             shift and go to state 110
    POR             shift and go to state 111
    ENTRE           shift and go to state 112
    MODULO          shift and go to state 113
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MAS                        shift and go to state 178
    empty                          shift and go to state 179

state 141

    (18) E2 -> E2 MENOS E3 . AUX_MENOS
    (23) E3 -> E3 . AND E4 AUX_AND
    (24) E3 -> E3 . POR E4 AUX_POR
    (25) E3 -> E3 . ENTRE E4 AUX_ENTRE
    (26) E3 -> E3 . MODULO E4 AUX_MODULO
    (21) AUX_MENOS -> . empty
    (1) empty -> .

    AND             shift and go to state 110
    POR             shift and go to state 111
    ENTRE           shift and go to state 112
    MODULO          shift and go to state 113
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MENOS                      shift and go to state 180
    empty                          shift and go to state 181

state 142

    (23) E3 -> E3 AND E4 . AUX_AND
    (27) AUX_AND -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_AND                        shift and go to state 182
    empty                          shift and go to state 183

state 143

    (24) E3 -> E3 POR E4 . AUX_POR
    (28) AUX_POR -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_POR                        shift and go to state 184
    empty                          shift and go to state 185

state 144

    (25) E3 -> E3 ENTRE E4 . AUX_ENTRE
    (29) AUX_ENTRE -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_ENTRE                      shift and go to state 186
    empty                          shift and go to state 187

state 145

    (26) E3 -> E3 MODULO E4 . AUX_MODULO
    (30) AUX_MODULO -> . empty
    (1) empty -> .

    AND             reduce using rule 1 (empty -> .)
    POR             reduce using rule 1 (empty -> .)
    ENTRE           reduce using rule 1 (empty -> .)
    MODULO          reduce using rule 1 (empty -> .)
    MENOR           reduce using rule 1 (empty -> .)
    MAYOR           reduce using rule 1 (empty -> .)
    MENOR_IGUAL     reduce using rule 1 (empty -> .)
    MAYOR_IGUAL     reduce using rule 1 (empty -> .)
    IGUAL           reduce using rule 1 (empty -> .)
    DIFERENTE       reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    MAS             reduce using rule 1 (empty -> .)
    MENOS           reduce using rule 1 (empty -> .)
    PUNTO_COMA      reduce using rule 1 (empty -> .)
    DOS_PUNTOS      reduce using rule 1 (empty -> .)
    PARENTESIS_DERECHO reduce using rule 1 (empty -> .)

    AUX_MODULO                     shift and go to state 188
    empty                          shift and go to state 189

state 146

    (32) E4 -> NOT T AUX_NOT .

    AND             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    POR             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    ENTRE           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MODULO          reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAYOR_IGUAL     reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    IGUAL           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DIFERENTE       reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    OR              reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MAS             reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    MENOS           reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PUNTO_COMA      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    DOS_PUNTOS      reduce using rule 32 (E4 -> NOT T AUX_NOT .)
    PARENTESIS_DERECHO reduce using rule 32 (E4 -> NOT T AUX_NOT .)


state 147

    (33) AUX_NOT -> empty .

    AND             reduce using rule 33 (AUX_NOT -> empty .)
    POR             reduce using rule 33 (AUX_NOT -> empty .)
    ENTRE           reduce using rule 33 (AUX_NOT -> empty .)
    MODULO          reduce using rule 33 (AUX_NOT -> empty .)
    MENOR           reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR           reduce using rule 33 (AUX_NOT -> empty .)
    MENOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    MAYOR_IGUAL     reduce using rule 33 (AUX_NOT -> empty .)
    IGUAL           reduce using rule 33 (AUX_NOT -> empty .)
    DIFERENTE       reduce using rule 33 (AUX_NOT -> empty .)
    OR              reduce using rule 33 (AUX_NOT -> empty .)
    MAS             reduce using rule 33 (AUX_NOT -> empty .)
    MENOS           reduce using rule 33 (AUX_NOT -> empty .)
    PUNTO_COMA      reduce using rule 33 (AUX_NOT -> empty .)
    DOS_PUNTOS      reduce using rule 33 (AUX_NOT -> empty .)
    PARENTESIS_DERECHO reduce using rule 33 (AUX_NOT -> empty .)


state 148

    (40) RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .

    PUNTO_COMA      reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ASIGNACION      reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    AND             reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    POR             reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    ENTRE           reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MODULO          reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR           reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR           reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOR_IGUAL     reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAYOR_IGUAL     reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    IGUAL           reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DIFERENTE       reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    OR              reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MAS             reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    MENOS           reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    DOS_PUNTOS      reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)
    PARENTESIS_DERECHO reduce using rule 40 (RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS .)


state 149

    (59) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 190


state 150

    (60) AUX_PROC -> empty .

    PUNTO_COMA      reduce using rule 60 (AUX_PROC -> empty .)


state 151

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA . END FUNCTION PUNTO_COMA

    END             shift and go to state 191


state 152

    (57) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS . PARENTESIS_DERECHO PUNTO_COMA EST

    PARENTESIS_DERECHO shift and go to state 192


state 153

    (58) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 193
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 154

    (73) IF_ -> IF E AUX_IF DOS_PUNTOS . EST AUX_SALIRIF ELSIF_
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 194
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 155

    (64) DO_WHILE -> DO WHILE E DOS_PUNTOS . EST END LOOP PUNTO_COMA
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 195
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 156

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 . DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE

    DOS_PUNTOS      shift and go to state 196


state 157

    (67) AUX_WHILE2 -> empty .

    DOS_PUNTOS      reduce using rule 67 (AUX_WHILE2 -> empty .)


state 158

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 . E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 197
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 159

    (70) AUX_FOR1 -> empty .

    NOT             reduce using rule 70 (AUX_FOR1 -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 70 (AUX_FOR1 -> empty .)
    VALOR_INT       reduce using rule 70 (AUX_FOR1 -> empty .)
    VALOR_FLOAT     reduce using rule 70 (AUX_FOR1 -> empty .)
    ID              reduce using rule 70 (AUX_FOR1 -> empty .)


state 160

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA AUX_ENDPROC

    PUNTO_COMA      shift and go to state 198


state 161

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA AUX_ENDPROC

    END             shift and go to state 199


state 162

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 200


state 163

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA . END PROCEDURE PUNTO_COMA

    END             shift and go to state 201


state 164

    (3) E -> E2 MENOR E2 AUX_MENOR .

    PUNTO_COMA      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    DOS_PUNTOS      reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)
    PARENTESIS_DERECHO reduce using rule 3 (E -> E2 MENOR E2 AUX_MENOR .)


state 165

    (9) AUX_MENOR -> empty .

    PUNTO_COMA      reduce using rule 9 (AUX_MENOR -> empty .)
    DOS_PUNTOS      reduce using rule 9 (AUX_MENOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 9 (AUX_MENOR -> empty .)


state 166

    (4) E -> E2 MAYOR E2 AUX_MAYOR .

    PUNTO_COMA      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    DOS_PUNTOS      reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)
    PARENTESIS_DERECHO reduce using rule 4 (E -> E2 MAYOR E2 AUX_MAYOR .)


state 167

    (10) AUX_MAYOR -> empty .

    PUNTO_COMA      reduce using rule 10 (AUX_MAYOR -> empty .)
    DOS_PUNTOS      reduce using rule 10 (AUX_MAYOR -> empty .)
    PARENTESIS_DERECHO reduce using rule 10 (AUX_MAYOR -> empty .)


state 168

    (5) E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .

    PUNTO_COMA      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    DOS_PUNTOS      reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 5 (E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL .)


state 169

    (11) AUX_MENOR_IGUAL -> empty .

    PUNTO_COMA      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    DOS_PUNTOS      reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 11 (AUX_MENOR_IGUAL -> empty .)


state 170

    (6) E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .

    PUNTO_COMA      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    DOS_PUNTOS      reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 6 (E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL .)


state 171

    (12) AUX_MAYOR_IGUAL -> empty .

    PUNTO_COMA      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    DOS_PUNTOS      reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 12 (AUX_MAYOR_IGUAL -> empty .)


state 172

    (7) E -> E2 IGUAL E2 AUX_IGUAL .

    PUNTO_COMA      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    DOS_PUNTOS      reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)
    PARENTESIS_DERECHO reduce using rule 7 (E -> E2 IGUAL E2 AUX_IGUAL .)


state 173

    (13) AUX_IGUAL -> empty .

    PUNTO_COMA      reduce using rule 13 (AUX_IGUAL -> empty .)
    DOS_PUNTOS      reduce using rule 13 (AUX_IGUAL -> empty .)
    PARENTESIS_DERECHO reduce using rule 13 (AUX_IGUAL -> empty .)


state 174

    (8) E -> E2 DIFERENTE E2 AUX_DIFERENTE .

    PUNTO_COMA      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    DOS_PUNTOS      reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)
    PARENTESIS_DERECHO reduce using rule 8 (E -> E2 DIFERENTE E2 AUX_DIFERENTE .)


state 175

    (14) AUX_DIFERENTE -> empty .

    PUNTO_COMA      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    DOS_PUNTOS      reduce using rule 14 (AUX_DIFERENTE -> empty .)
    PARENTESIS_DERECHO reduce using rule 14 (AUX_DIFERENTE -> empty .)


state 176

    (16) E2 -> E2 OR E3 AUX_OR .

    MENOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAYOR_IGUAL     reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    IGUAL           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DIFERENTE       reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    OR              reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MAS             reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    MENOS           reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PUNTO_COMA      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    DOS_PUNTOS      reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)
    PARENTESIS_DERECHO reduce using rule 16 (E2 -> E2 OR E3 AUX_OR .)


state 177

    (19) AUX_OR -> empty .

    MENOR           reduce using rule 19 (AUX_OR -> empty .)
    MAYOR           reduce using rule 19 (AUX_OR -> empty .)
    MENOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    MAYOR_IGUAL     reduce using rule 19 (AUX_OR -> empty .)
    IGUAL           reduce using rule 19 (AUX_OR -> empty .)
    DIFERENTE       reduce using rule 19 (AUX_OR -> empty .)
    OR              reduce using rule 19 (AUX_OR -> empty .)
    MAS             reduce using rule 19 (AUX_OR -> empty .)
    MENOS           reduce using rule 19 (AUX_OR -> empty .)
    PUNTO_COMA      reduce using rule 19 (AUX_OR -> empty .)
    DOS_PUNTOS      reduce using rule 19 (AUX_OR -> empty .)
    PARENTESIS_DERECHO reduce using rule 19 (AUX_OR -> empty .)


state 178

    (17) E2 -> E2 MAS E3 AUX_MAS .

    MENOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAYOR_IGUAL     reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    IGUAL           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DIFERENTE       reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    OR              reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MAS             reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    MENOS           reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PUNTO_COMA      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    DOS_PUNTOS      reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)
    PARENTESIS_DERECHO reduce using rule 17 (E2 -> E2 MAS E3 AUX_MAS .)


state 179

    (20) AUX_MAS -> empty .

    MENOR           reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR           reduce using rule 20 (AUX_MAS -> empty .)
    MENOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    MAYOR_IGUAL     reduce using rule 20 (AUX_MAS -> empty .)
    IGUAL           reduce using rule 20 (AUX_MAS -> empty .)
    DIFERENTE       reduce using rule 20 (AUX_MAS -> empty .)
    OR              reduce using rule 20 (AUX_MAS -> empty .)
    MAS             reduce using rule 20 (AUX_MAS -> empty .)
    MENOS           reduce using rule 20 (AUX_MAS -> empty .)
    PUNTO_COMA      reduce using rule 20 (AUX_MAS -> empty .)
    DOS_PUNTOS      reduce using rule 20 (AUX_MAS -> empty .)
    PARENTESIS_DERECHO reduce using rule 20 (AUX_MAS -> empty .)


state 180

    (18) E2 -> E2 MENOS E3 AUX_MENOS .

    MENOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAYOR_IGUAL     reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    IGUAL           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DIFERENTE       reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    OR              reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MAS             reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    MENOS           reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PUNTO_COMA      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    DOS_PUNTOS      reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)
    PARENTESIS_DERECHO reduce using rule 18 (E2 -> E2 MENOS E3 AUX_MENOS .)


state 181

    (21) AUX_MENOS -> empty .

    MENOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR           reduce using rule 21 (AUX_MENOS -> empty .)
    MENOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    MAYOR_IGUAL     reduce using rule 21 (AUX_MENOS -> empty .)
    IGUAL           reduce using rule 21 (AUX_MENOS -> empty .)
    DIFERENTE       reduce using rule 21 (AUX_MENOS -> empty .)
    OR              reduce using rule 21 (AUX_MENOS -> empty .)
    MAS             reduce using rule 21 (AUX_MENOS -> empty .)
    MENOS           reduce using rule 21 (AUX_MENOS -> empty .)
    PUNTO_COMA      reduce using rule 21 (AUX_MENOS -> empty .)
    DOS_PUNTOS      reduce using rule 21 (AUX_MENOS -> empty .)
    PARENTESIS_DERECHO reduce using rule 21 (AUX_MENOS -> empty .)


state 182

    (23) E3 -> E3 AND E4 AUX_AND .

    AND             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    POR             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    ENTRE           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MODULO          reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAYOR_IGUAL     reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    IGUAL           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DIFERENTE       reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    OR              reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MAS             reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    MENOS           reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PUNTO_COMA      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    DOS_PUNTOS      reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)
    PARENTESIS_DERECHO reduce using rule 23 (E3 -> E3 AND E4 AUX_AND .)


state 183

    (27) AUX_AND -> empty .

    AND             reduce using rule 27 (AUX_AND -> empty .)
    POR             reduce using rule 27 (AUX_AND -> empty .)
    ENTRE           reduce using rule 27 (AUX_AND -> empty .)
    MODULO          reduce using rule 27 (AUX_AND -> empty .)
    MENOR           reduce using rule 27 (AUX_AND -> empty .)
    MAYOR           reduce using rule 27 (AUX_AND -> empty .)
    MENOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    MAYOR_IGUAL     reduce using rule 27 (AUX_AND -> empty .)
    IGUAL           reduce using rule 27 (AUX_AND -> empty .)
    DIFERENTE       reduce using rule 27 (AUX_AND -> empty .)
    OR              reduce using rule 27 (AUX_AND -> empty .)
    MAS             reduce using rule 27 (AUX_AND -> empty .)
    MENOS           reduce using rule 27 (AUX_AND -> empty .)
    PUNTO_COMA      reduce using rule 27 (AUX_AND -> empty .)
    DOS_PUNTOS      reduce using rule 27 (AUX_AND -> empty .)
    PARENTESIS_DERECHO reduce using rule 27 (AUX_AND -> empty .)


state 184

    (24) E3 -> E3 POR E4 AUX_POR .

    AND             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    POR             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    ENTRE           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MODULO          reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAYOR_IGUAL     reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    IGUAL           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DIFERENTE       reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    OR              reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MAS             reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    MENOS           reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PUNTO_COMA      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    DOS_PUNTOS      reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)
    PARENTESIS_DERECHO reduce using rule 24 (E3 -> E3 POR E4 AUX_POR .)


state 185

    (28) AUX_POR -> empty .

    AND             reduce using rule 28 (AUX_POR -> empty .)
    POR             reduce using rule 28 (AUX_POR -> empty .)
    ENTRE           reduce using rule 28 (AUX_POR -> empty .)
    MODULO          reduce using rule 28 (AUX_POR -> empty .)
    MENOR           reduce using rule 28 (AUX_POR -> empty .)
    MAYOR           reduce using rule 28 (AUX_POR -> empty .)
    MENOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    MAYOR_IGUAL     reduce using rule 28 (AUX_POR -> empty .)
    IGUAL           reduce using rule 28 (AUX_POR -> empty .)
    DIFERENTE       reduce using rule 28 (AUX_POR -> empty .)
    OR              reduce using rule 28 (AUX_POR -> empty .)
    MAS             reduce using rule 28 (AUX_POR -> empty .)
    MENOS           reduce using rule 28 (AUX_POR -> empty .)
    PUNTO_COMA      reduce using rule 28 (AUX_POR -> empty .)
    DOS_PUNTOS      reduce using rule 28 (AUX_POR -> empty .)
    PARENTESIS_DERECHO reduce using rule 28 (AUX_POR -> empty .)


state 186

    (25) E3 -> E3 ENTRE E4 AUX_ENTRE .

    AND             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    POR             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    ENTRE           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MODULO          reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAYOR_IGUAL     reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    IGUAL           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DIFERENTE       reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    OR              reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MAS             reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    MENOS           reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PUNTO_COMA      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    DOS_PUNTOS      reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)
    PARENTESIS_DERECHO reduce using rule 25 (E3 -> E3 ENTRE E4 AUX_ENTRE .)


state 187

    (29) AUX_ENTRE -> empty .

    AND             reduce using rule 29 (AUX_ENTRE -> empty .)
    POR             reduce using rule 29 (AUX_ENTRE -> empty .)
    ENTRE           reduce using rule 29 (AUX_ENTRE -> empty .)
    MODULO          reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR           reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    MAYOR_IGUAL     reduce using rule 29 (AUX_ENTRE -> empty .)
    IGUAL           reduce using rule 29 (AUX_ENTRE -> empty .)
    DIFERENTE       reduce using rule 29 (AUX_ENTRE -> empty .)
    OR              reduce using rule 29 (AUX_ENTRE -> empty .)
    MAS             reduce using rule 29 (AUX_ENTRE -> empty .)
    MENOS           reduce using rule 29 (AUX_ENTRE -> empty .)
    PUNTO_COMA      reduce using rule 29 (AUX_ENTRE -> empty .)
    DOS_PUNTOS      reduce using rule 29 (AUX_ENTRE -> empty .)
    PARENTESIS_DERECHO reduce using rule 29 (AUX_ENTRE -> empty .)


state 188

    (26) E3 -> E3 MODULO E4 AUX_MODULO .

    AND             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    POR             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    ENTRE           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MODULO          reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAYOR_IGUAL     reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    IGUAL           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DIFERENTE       reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    OR              reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MAS             reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    MENOS           reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PUNTO_COMA      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    DOS_PUNTOS      reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)
    PARENTESIS_DERECHO reduce using rule 26 (E3 -> E3 MODULO E4 AUX_MODULO .)


state 189

    (30) AUX_MODULO -> empty .

    AND             reduce using rule 30 (AUX_MODULO -> empty .)
    POR             reduce using rule 30 (AUX_MODULO -> empty .)
    ENTRE           reduce using rule 30 (AUX_MODULO -> empty .)
    MODULO          reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR           reduce using rule 30 (AUX_MODULO -> empty .)
    MENOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    MAYOR_IGUAL     reduce using rule 30 (AUX_MODULO -> empty .)
    IGUAL           reduce using rule 30 (AUX_MODULO -> empty .)
    DIFERENTE       reduce using rule 30 (AUX_MODULO -> empty .)
    OR              reduce using rule 30 (AUX_MODULO -> empty .)
    MAS             reduce using rule 30 (AUX_MODULO -> empty .)
    MENOS           reduce using rule 30 (AUX_MODULO -> empty .)
    PUNTO_COMA      reduce using rule 30 (AUX_MODULO -> empty .)
    DOS_PUNTOS      reduce using rule 30 (AUX_MODULO -> empty .)
    PARENTESIS_DERECHO reduce using rule 30 (AUX_MODULO -> empty .)


state 190

    (59) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 202
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 191

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END . FUNCTION PUNTO_COMA

    FUNCTION        shift and go to state 203


state 192

    (57) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO . PUNTO_COMA EST

    PUNTO_COMA      shift and go to state 204


state 193

    (58) EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .

    RETURN          reduce using rule 58 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    END             reduce using rule 58 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 58 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 58 (EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST .)


state 194

    (73) IF_ -> IF E AUX_IF DOS_PUNTOS EST . AUX_SALIRIF ELSIF_
    (81) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 205
    empty                          shift and go to state 206

state 195

    (64) DO_WHILE -> DO WHILE E DOS_PUNTOS EST . END LOOP PUNTO_COMA

    END             shift and go to state 207


state 196

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS . EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 208
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 197

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E . AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (71) AUX_FOR2 -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_FOR2                       shift and go to state 209
    empty                          shift and go to state 210

state 198

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA . AUX_ENDPROC
    (86) AUX_ENDPROC -> . empty
    (1) empty -> .

    PROCEDURE       reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    AUX_ENDPROC                    shift and go to state 211
    empty                          shift and go to state 212

state 199

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA AUX_ENDPROC

    PROCEDURE       shift and go to state 213


state 200

    (88) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 88 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 88 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 88 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 88 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA .)


state 201

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END . PROCEDURE PUNTO_COMA

    PROCEDURE       shift and go to state 214


state 202

    (59) EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST .

    RETURN          reduce using rule 59 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST .)
    END             reduce using rule 59 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST .)
    ELSE            reduce using rule 59 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST .)
    ELSIF           reduce using rule 59 (EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST .)


state 203

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 215


state 204

    (57) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA . EST
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 216
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 205

    (73) IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF . ELSIF_
    (74) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (75) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (76) ELSIF_ -> . ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    END             shift and go to state 218
    ELSE            shift and go to state 219
    ELSIF           shift and go to state 220

    ELSIF_                         shift and go to state 217

state 206

    (81) AUX_SALIRIF -> empty .

    END             reduce using rule 81 (AUX_SALIRIF -> empty .)
    ELSE            reduce using rule 81 (AUX_SALIRIF -> empty .)
    ELSIF           reduce using rule 81 (AUX_SALIRIF -> empty .)


state 207

    (64) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END . LOOP PUNTO_COMA

    LOOP            shift and go to state 221


state 208

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST . END LOOP PUNTO_COMA AUX_ENDWHILE

    END             shift and go to state 222


state 209

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 . PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 223


state 210

    (71) AUX_FOR2 -> empty .

    PUNTO_COMA      reduce using rule 71 (AUX_FOR2 -> empty .)


state 211

    (83) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC .

    PROCEDURE       reduce using rule 83 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    INT             reduce using rule 83 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    FLOAT           reduce using rule 83 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    $end            reduce using rule 83 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA AUX_ENDPROC .)


state 212

    (86) AUX_ENDPROC -> empty .

    PROCEDURE       reduce using rule 86 (AUX_ENDPROC -> empty .)
    INT             reduce using rule 86 (AUX_ENDPROC -> empty .)
    FLOAT           reduce using rule 86 (AUX_ENDPROC -> empty .)
    $end            reduce using rule 86 (AUX_ENDPROC -> empty .)


state 213

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA AUX_ENDPROC

    PUNTO_COMA      shift and go to state 224


state 214

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE . PUNTO_COMA

    PUNTO_COMA      shift and go to state 225


state 215

    (87) F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .

    PROCEDURE       reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    INT             reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    FLOAT           reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)
    $end            reduce using rule 87 (F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA .)


state 216

    (57) EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .

    RETURN          reduce using rule 57 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    END             reduce using rule 57 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSE            reduce using rule 57 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)
    ELSIF           reduce using rule 57 (EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST .)


state 217

    (73) IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .

    PRINT           reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    INPUT           reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ID              reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    IF              reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    DO              reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    WHILE           reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FOR             reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    RETURN          reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    END             reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSE            reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSIF           reduce using rule 73 (IF_ -> IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)


state 218

    (74) ELSIF_ -> END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 226


state 219

    (75) ELSIF_ -> ELSE . AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (80) AUX_ELSE -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSE                       shift and go to state 227
    empty                          shift and go to state 228

state 220

    (76) ELSIF_ -> ELSIF . AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (78) AUX_ELSIF -> . empty
    (1) empty -> .

    NOT             reduce using rule 1 (empty -> .)
    PARENTESIS_IZQUIERDO reduce using rule 1 (empty -> .)
    VALOR_INT       reduce using rule 1 (empty -> .)
    VALOR_FLOAT     reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    AUX_ELSIF                      shift and go to state 229
    empty                          shift and go to state 230

state 221

    (64) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP . PUNTO_COMA

    PUNTO_COMA      shift and go to state 231


state 222

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END . LOOP PUNTO_COMA AUX_ENDWHILE

    LOOP            shift and go to state 232


state 223

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA . A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (38) ID_COMPLETO -> . ID RANGOS

    ID              shift and go to state 40

    A                              shift and go to state 233
    ID_COMPLETO                    shift and go to state 62

state 224

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA . AUX_ENDPROC
    (86) AUX_ENDPROC -> . empty
    (1) empty -> .

    PROCEDURE       reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    AUX_ENDPROC                    shift and go to state 234
    empty                          shift and go to state 212

state 225

    (89) MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .

    PROCEDURE       reduce using rule 89 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    INT             reduce using rule 89 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    FLOAT           reduce using rule 89 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)
    $end            reduce using rule 89 (MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS MP_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA .)


state 226

    (74) ELSIF_ -> END IF . AUX_ENDIF PUNTO_COMA
    (82) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 235
    empty                          shift and go to state 236

state 227

    (75) ELSIF_ -> ELSE AUX_ELSE . DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA

    DOS_PUNTOS      shift and go to state 237


state 228

    (80) AUX_ELSE -> empty .

    DOS_PUNTOS      reduce using rule 80 (AUX_ELSE -> empty .)


state 229

    (76) ELSIF_ -> ELSIF AUX_ELSIF . E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (2) E -> . E2
    (3) E -> . E2 MENOR E2 AUX_MENOR
    (4) E -> . E2 MAYOR E2 AUX_MAYOR
    (5) E -> . E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL
    (6) E -> . E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL
    (7) E -> . E2 IGUAL E2 AUX_IGUAL
    (8) E -> . E2 DIFERENTE E2 AUX_DIFERENTE
    (15) E2 -> . E3
    (16) E2 -> . E2 OR E3 AUX_OR
    (17) E2 -> . E2 MAS E3 AUX_MAS
    (18) E2 -> . E2 MENOS E3 AUX_MENOS
    (22) E3 -> . E4
    (23) E3 -> . E3 AND E4 AUX_AND
    (24) E3 -> . E3 POR E4 AUX_POR
    (25) E3 -> . E3 ENTRE E4 AUX_ENTRE
    (26) E3 -> . E3 MODULO E4 AUX_MODULO
    (31) E4 -> . T
    (32) E4 -> . NOT T AUX_NOT
    (34) T -> . PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO
    (35) T -> . ID_COMPLETO
    (36) T -> . VALOR_INT
    (37) T -> . VALOR_FLOAT
    (38) ID_COMPLETO -> . ID RANGOS

    NOT             shift and go to state 79
    PARENTESIS_IZQUIERDO shift and go to state 73
    VALOR_INT       shift and go to state 90
    VALOR_FLOAT     shift and go to state 91
    ID              shift and go to state 40

    E                              shift and go to state 238
    E2                             shift and go to state 75
    E3                             shift and go to state 76
    E4                             shift and go to state 77
    T                              shift and go to state 78
    ID_COMPLETO                    shift and go to state 89

state 230

    (78) AUX_ELSIF -> empty .

    NOT             reduce using rule 78 (AUX_ELSIF -> empty .)
    PARENTESIS_IZQUIERDO reduce using rule 78 (AUX_ELSIF -> empty .)
    VALOR_INT       reduce using rule 78 (AUX_ELSIF -> empty .)
    VALOR_FLOAT     reduce using rule 78 (AUX_ELSIF -> empty .)
    ID              reduce using rule 78 (AUX_ELSIF -> empty .)


state 231

    (64) DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .

    PRINT           reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    INPUT           reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ID              reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    IF              reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    DO              reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    WHILE           reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    FOR             reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    RETURN          reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    END             reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSE            reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)
    ELSIF           reduce using rule 64 (DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA .)


state 232

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP . PUNTO_COMA AUX_ENDWHILE

    PUNTO_COMA      shift and go to state 239


state 233

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A . DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR

    DOS_PUNTOS      shift and go to state 240


state 234

    (84) P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC .

    PROCEDURE       reduce using rule 84 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    INT             reduce using rule 84 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    FLOAT           reduce using rule 84 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC .)
    $end            reduce using rule 84 (P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS P_AUX V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA AUX_ENDPROC .)


state 235

    (74) ELSIF_ -> END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 241


state 236

    (82) AUX_ENDIF -> empty .

    PUNTO_COMA      reduce using rule 82 (AUX_ENDIF -> empty .)


state 237

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS . EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 242
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 238

    (76) ELSIF_ -> ELSIF AUX_ELSIF E . AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (79) AUX_ELSIF2 -> . empty
    (1) empty -> .

    DOS_PUNTOS      reduce using rule 1 (empty -> .)

    AUX_ELSIF2                     shift and go to state 243
    empty                          shift and go to state 244

state 239

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA . AUX_ENDWHILE
    (68) AUX_ENDWHILE -> . empty
    (1) empty -> .

    PRINT           reduce using rule 1 (empty -> .)
    INPUT           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_ENDWHILE                   shift and go to state 245
    empty                          shift and go to state 246

state 240

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS . EST END LOOP PUNTO_COMA AUX_ENDFOR
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    A                              shift and go to state 55
    EST                            shift and go to state 247
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 241

    (74) ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .

    PRINT           reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 74 (ELSIF_ -> END IF AUX_ENDIF PUNTO_COMA .)


state 242

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST . AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (81) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 248
    empty                          shift and go to state 206

state 243

    (76) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 . DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    DOS_PUNTOS      shift and go to state 249


state 244

    (79) AUX_ELSIF2 -> empty .

    DOS_PUNTOS      reduce using rule 79 (AUX_ELSIF2 -> empty .)


state 245

    (65) WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .

    PRINT           reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    INPUT           reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ID              reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    IF              reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    DO              reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    WHILE           reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    FOR             reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    RETURN          reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    END             reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ELSE            reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)
    ELSIF           reduce using rule 65 (WHILE_ -> WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE .)


state 246

    (68) AUX_ENDWHILE -> empty .

    PRINT           reduce using rule 68 (AUX_ENDWHILE -> empty .)
    INPUT           reduce using rule 68 (AUX_ENDWHILE -> empty .)
    ID              reduce using rule 68 (AUX_ENDWHILE -> empty .)
    IF              reduce using rule 68 (AUX_ENDWHILE -> empty .)
    DO              reduce using rule 68 (AUX_ENDWHILE -> empty .)
    WHILE           reduce using rule 68 (AUX_ENDWHILE -> empty .)
    FOR             reduce using rule 68 (AUX_ENDWHILE -> empty .)
    RETURN          reduce using rule 68 (AUX_ENDWHILE -> empty .)
    END             reduce using rule 68 (AUX_ENDWHILE -> empty .)
    ELSE            reduce using rule 68 (AUX_ENDWHILE -> empty .)
    ELSIF           reduce using rule 68 (AUX_ENDWHILE -> empty .)


state 247

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST . END LOOP PUNTO_COMA AUX_ENDFOR

    END             shift and go to state 250


state 248

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF . END IF AUX_ENDIF PUNTO_COMA

    END             shift and go to state 251


state 249

    (76) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS . EST AUX_SALIRIF ELSIF_
    (53) EST -> . empty
    (54) EST -> . LOOP_ EST
    (55) EST -> . IF_ EST
    (56) EST -> . A PUNTO_COMA EST
    (57) EST -> . PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST
    (58) EST -> . INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST
    (59) EST -> . ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO AUX_PROC PUNTO_COMA EST
    (1) empty -> .
    (61) LOOP_ -> . DO_WHILE
    (62) LOOP_ -> . WHILE_
    (63) LOOP_ -> . FOR_
    (73) IF_ -> . IF E AUX_IF DOS_PUNTOS EST AUX_SALIRIF ELSIF_
    (47) A -> . ID_COMPLETO ASIGNACION VALOR_INT
    (48) A -> . ID_COMPLETO ASIGNACION VALOR_FLOAT
    (49) A -> . ID_COMPLETO ASIGNACION E
    (50) A -> . ID_COMPLETO ASIGNACION ID_COMPLETO
    (51) A -> . ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (52) A -> . ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO
    (64) DO_WHILE -> . DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA
    (65) WHILE_ -> . WHILE AUX_WHILE1 E AUX_WHILE2 DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDWHILE
    (69) FOR_ -> . FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR
    (38) ID_COMPLETO -> . ID RANGOS

    PRINT           shift and go to state 56
    INPUT           shift and go to state 57
    ID              shift and go to state 50
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)
    IF              shift and go to state 61
    DO              shift and go to state 63
    WHILE           shift and go to state 64
    FOR             shift and go to state 65

    EST                            shift and go to state 252
    empty                          shift and go to state 52
    LOOP_                          shift and go to state 53
    IF_                            shift and go to state 54
    A                              shift and go to state 55
    DO_WHILE                       shift and go to state 58
    WHILE_                         shift and go to state 59
    FOR_                           shift and go to state 60
    ID_COMPLETO                    shift and go to state 62

state 250

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END . LOOP PUNTO_COMA AUX_ENDFOR

    LOOP            shift and go to state 253


state 251

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END . IF AUX_ENDIF PUNTO_COMA

    IF              shift and go to state 254


state 252

    (76) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST . AUX_SALIRIF ELSIF_
    (81) AUX_SALIRIF -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_SALIRIF                    shift and go to state 255
    empty                          shift and go to state 206

state 253

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP . PUNTO_COMA AUX_ENDFOR

    PUNTO_COMA      shift and go to state 256


state 254

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF . AUX_ENDIF PUNTO_COMA
    (82) AUX_ENDIF -> . empty
    (1) empty -> .

    PUNTO_COMA      reduce using rule 1 (empty -> .)

    AUX_ENDIF                      shift and go to state 257
    empty                          shift and go to state 236

state 255

    (76) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF . ELSIF_
    (74) ELSIF_ -> . END IF AUX_ENDIF PUNTO_COMA
    (75) ELSIF_ -> . ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA
    (76) ELSIF_ -> . ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_

    END             shift and go to state 218
    ELSE            shift and go to state 219
    ELSIF           shift and go to state 220

    ELSIF_                         shift and go to state 258

state 256

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA . AUX_ENDFOR
    (72) AUX_ENDFOR -> . empty
    (1) empty -> .

    PRINT           reduce using rule 1 (empty -> .)
    INPUT           reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    ELSIF           reduce using rule 1 (empty -> .)

    AUX_ENDFOR                     shift and go to state 259
    empty                          shift and go to state 260

state 257

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF . PUNTO_COMA

    PUNTO_COMA      shift and go to state 261


state 258

    (76) ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .

    PRINT           reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    INPUT           reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ID              reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    IF              reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    DO              reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    WHILE           reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    FOR             reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    RETURN          reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    END             reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSE            reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)
    ELSIF           reduce using rule 76 (ELSIF_ -> ELSIF AUX_ELSIF E AUX_ELSIF2 DOS_PUNTOS EST AUX_SALIRIF ELSIF_ .)


state 259

    (69) FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .

    PRINT           reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    INPUT           reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ID              reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    IF              reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    DO              reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    WHILE           reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    FOR             reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    RETURN          reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    END             reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSE            reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)
    ELSIF           reduce using rule 69 (FOR_ -> FOR A PUNTO_COMA AUX_FOR1 E AUX_FOR2 PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA AUX_ENDFOR .)


state 260

    (72) AUX_ENDFOR -> empty .

    PRINT           reduce using rule 72 (AUX_ENDFOR -> empty .)
    INPUT           reduce using rule 72 (AUX_ENDFOR -> empty .)
    ID              reduce using rule 72 (AUX_ENDFOR -> empty .)
    IF              reduce using rule 72 (AUX_ENDFOR -> empty .)
    DO              reduce using rule 72 (AUX_ENDFOR -> empty .)
    WHILE           reduce using rule 72 (AUX_ENDFOR -> empty .)
    FOR             reduce using rule 72 (AUX_ENDFOR -> empty .)
    RETURN          reduce using rule 72 (AUX_ENDFOR -> empty .)
    END             reduce using rule 72 (AUX_ENDFOR -> empty .)
    ELSE            reduce using rule 72 (AUX_ENDFOR -> empty .)
    ELSIF           reduce using rule 72 (AUX_ENDFOR -> empty .)


state 261

    (75) ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .

    PRINT           reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    INPUT           reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ID              reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    IF              reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    DO              reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    WHILE           reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    FOR             reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    RETURN          reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    END             reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ELSE            reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)
    ELSIF           reduce using rule 75 (ELSIF_ -> ELSE AUX_ELSE DOS_PUNTOS EST AUX_SALIRIF END IF AUX_ENDIF PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 68 resolved using rule (T -> ID_COMPLETO)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) in state 68
WARNING: reduce/reduce conflict in state 69 resolved using rule (T -> VALOR_INT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) in state 69
WARNING: reduce/reduce conflict in state 70 resolved using rule (T -> VALOR_FLOAT)
WARNING: rejected rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) in state 70
WARNING: Rule (A -> ID_COMPLETO ASIGNACION ID_COMPLETO) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_INT) is never reduced
WARNING: Rule (A -> ID_COMPLETO ASIGNACION VALOR_FLOAT) is never reduced
