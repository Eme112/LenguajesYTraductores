
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAAND ASIGNACION BEGIN COMILLAS CORCHETE_DERECHO CORCHETE_IZQUIERDO DIFERENTE DO DOS_PUNTOS ELSE ELSIF END ENTRE FLOAT FOR FUNCTION ID IF IGUAL INPUT INT LOOP MAIN MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MODULO NOT OR PARENTESIS_DERECHO PARENTESIS_IZQUIERDO POR PRINT PROCEDURE PUNTO PUNTO_COMA RETURN TEXTO VALOR_FLOAT VALOR_INT WHILE\n  empty :\n  E : E2\n         | E2 MENOR E2 AUX_MENOR\n         | E2 MAYOR E2 AUX_MAYOR\n         | E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL\n         | E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL\n         | E2 IGUAL E2 AUX_IGUAL\n         | E2 DIFERENTE E2 AUX_DIFERENTEAUX_MENOR : emptyAUX_MAYOR : emptyAUX_MENOR_IGUAL : emptyAUX_MAYOR_IGUAL : emptyAUX_IGUAL : emptyAUX_DIFERENTE : emptyE2 : E3\n          | E2 OR E3 AUX_OR\n          | E2 MAS E3 AUX_MAS\n          | E2 MENOS E3 AUX_MENOSAUX_OR : emptyAUX_MAS : emptyAUX_MENOS : emptyE3 : E4\n          | E3 AND E4 AUX_AND\n          | E3 POR E4 AUX_POR\n          | E3 ENTRE E4 AUX_ENTRE\n          | E3 MODULO E4 AUX_MODULOAUX_AND : emptyAUX_POR : emptyAUX_ENTRE : emptyAUX_MODULO : emptyE4 : T\n          | NOT T AUX_NOTAUX_NOT : emptyT : PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO\n         | FUNCTION\n         | ID_COMPLETO\n         | VALOR_INT\n         | VALOR_FLOATID_COMPLETO : ID RANGOSRANGOS : empty\n              | CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOSV : TIPO DOS_PUNTOS A PUNTO_COMA\n         | TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMATIPO : INT\n            | FLOATV_M : empty\n           | V V_MA : ID_COMPLETO ASIGNACION VALOR_INT\n         | ID_COMPLETO ASIGNACION VALOR_FLOAT\n         | ID_COMPLETO ASIGNACION E\n         | ID_COMPLETO ASIGNACION ID_COMPLETO\n         | ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO\n         | ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHOEST : empty\n           | LOOP_ EST\n           | IF_ EST\n           | A PUNTO_COMA EST\n           | PROCEDURE PUNTO_COMA EST\n           | FUNCTION PUNTO_COMA EST\n           | PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST\n           | INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST\n           | ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA ESTLOOP_ : DO_WHILE\n             | WHILE_\n             | FOR_DO_WHILE : DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMAWHILE_ : WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMAFOR_ : FOR A PUNTO_COMA E PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMAIF_ : IF E DOS_PUNTOS EST ELSIF_ELSIF_ : END IF PUNTO_COMA\n              | ELSE DOS_PUNTOS EST END IF PUNTO_COMA\n              | ELSIF E DOS_PUNTOS EST ELSIF_P : PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA\n         | PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMAF : TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMAMP : PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA\n          | PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMAPROGRAMA : MP PROGRAMA_HPROGRAMA_H : empty\n                  | P PROGRAMA_H\n                  | F PROGRAMA_H '
    
_lr_action_items = {'PROCEDURE':([0,2,6,7,37,41,42,46,47,53,54,55,69,70,74,75,100,111,128,136,137,139,140,158,164,165,171,206,207,209,214,217,219,221,222,223,226,229,231,233,],[3,8,8,8,43,43,43,43,43,-63,-64,-65,43,104,43,43,133,43,43,-76,167,43,43,43,-73,204,-69,-77,43,43,-74,-70,43,-67,43,-75,-66,-72,-71,-68,]),'$end':([1,2,4,5,6,7,13,14,136,164,206,214,223,],[0,-1,-78,-79,-1,-1,-80,-81,-76,-73,-77,-74,-75,]),'INT':([2,6,7,23,24,25,28,61,62,136,164,206,214,223,],[10,10,10,10,10,10,10,-42,-43,-76,-73,-77,-74,-75,]),'FLOAT':([2,6,7,23,24,25,28,61,62,136,164,206,214,223,],[11,11,11,11,11,11,11,-42,-43,-76,-73,-77,-74,-75,]),'MAIN':([3,],[12,]),'ID':([8,9,10,11,34,37,41,42,46,47,53,54,55,56,59,60,63,69,74,75,84,85,90,102,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,139,140,158,171,174,203,207,209,217,219,221,222,226,229,231,233,],[15,16,-44,-45,40,52,52,52,52,52,-63,-64,-65,40,40,40,97,52,52,52,40,40,40,135,52,40,40,40,40,40,40,40,40,40,40,40,40,40,52,40,52,52,52,-69,40,40,52,52,-70,52,-67,52,-66,-72,-71,-68,]),'DOS_PUNTOS':([10,11,20,21,22,29,40,64,65,79,80,81,82,83,86,87,88,89,91,93,94,95,96,97,125,127,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,161,162,163,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,210,213,],[-44,-45,23,24,25,34,-1,-39,-40,111,-2,-15,-22,-31,-35,-36,-37,-38,128,-36,-37,-38,-50,-1,-1,158,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-52,-53,-41,209,-3,-9,-4,-10,-5,-11,-6,-12,-7,-13,-8,-14,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,219,222,]),'PARENTESIS_IZQUIERDO':([12,15,16,50,51,52,56,59,63,84,85,90,97,98,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[17,18,19,76,77,78,85,85,85,85,85,85,130,131,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'PARENTESIS_DERECHO':([17,18,19,40,64,65,77,78,80,81,82,83,86,87,88,89,125,126,130,131,132,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[20,21,22,-1,-39,-40,109,110,-2,-15,-22,-31,-35,-36,-37,-38,-1,157,161,162,-1,168,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-3,-9,-4,-10,-5,-11,-6,-12,-7,-13,-8,-14,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'BEGIN':([23,24,25,26,27,28,30,31,33,61,62,],[-1,-1,-1,32,-46,-1,35,36,-47,-42,-43,]),'PUNTO_COMA':([32,35,36,38,39,40,43,48,49,64,65,71,80,81,82,83,86,87,88,89,92,93,94,95,96,97,101,104,109,110,125,132,133,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,161,162,163,167,168,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,208,212,215,220,228,232,],[37,41,42,61,62,-1,69,74,75,-39,-40,105,-2,-15,-22,-31,-35,-36,-37,-38,129,-36,-37,-38,-50,-1,134,136,139,140,-1,-1,164,166,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,203,-52,-53,-41,206,207,-3,-9,-4,-10,-5,-11,-6,-12,-7,-13,-8,-14,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,214,217,221,223,226,231,233,]),'FUNCTION':([37,41,42,46,47,53,54,55,56,59,63,69,74,75,84,85,90,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,139,140,158,171,174,205,207,209,217,219,221,222,226,229,231,233,],[49,49,49,49,49,-63,-64,-65,86,86,86,49,49,49,86,86,86,49,86,86,86,86,86,86,86,86,86,86,86,86,86,49,86,49,49,49,-69,86,215,49,49,-70,49,-67,49,-66,-72,-71,-68,]),'PRINT':([37,41,42,46,47,53,54,55,69,74,75,111,128,139,140,158,171,207,209,217,219,221,222,226,229,231,233,],[50,50,50,50,50,-63,-64,-65,50,50,50,50,50,50,50,50,-69,50,50,-70,50,-67,50,-66,-72,-71,-68,]),'INPUT':([37,41,42,46,47,53,54,55,63,69,74,75,111,128,139,140,158,171,207,209,217,219,221,222,226,229,231,233,],[51,51,51,51,51,-63,-64,-65,98,51,51,51,51,51,51,51,51,-69,51,51,-70,51,-67,51,-66,-72,-71,-68,]),'END':([37,41,44,45,46,47,53,54,55,67,69,72,73,74,75,103,105,106,107,111,128,134,139,140,141,158,159,166,169,170,171,201,207,209,216,217,218,219,221,222,225,226,227,229,231,233,],[-1,-1,70,-54,-1,-1,-63,-64,-65,100,-1,-55,-56,-1,-1,-58,137,-57,-59,-1,-1,165,-1,-1,172,-1,202,205,-61,-62,-69,211,-1,-1,-60,-70,224,-1,-67,-1,172,-66,230,-72,-71,-68,]),'RETURN':([37,41,42,44,45,46,47,53,54,55,67,68,69,72,73,74,75,103,106,107,139,140,169,170,171,207,216,217,221,226,229,231,233,],[-1,-1,-1,71,-54,-1,-1,-63,-64,-65,101,102,-1,-55,-56,-1,-1,-58,-57,-59,-1,-1,-61,-62,-69,-1,-60,-70,-67,-66,-72,-71,-68,]),'IF':([37,41,42,46,47,53,54,55,69,74,75,111,128,139,140,158,171,172,207,209,217,219,221,222,224,226,229,231,233,],[56,56,56,56,56,-63,-64,-65,56,56,56,56,56,56,56,56,-69,208,56,56,-70,56,-67,56,228,-66,-72,-71,-68,]),'DO':([37,41,42,46,47,53,54,55,69,74,75,111,128,139,140,158,171,207,209,217,219,221,222,226,229,231,233,],[58,58,58,58,58,-63,-64,-65,58,58,58,58,58,58,58,58,-69,58,58,-70,58,-67,58,-66,-72,-71,-68,]),'WHILE':([37,41,42,46,47,53,54,55,58,69,74,75,111,128,139,140,158,171,207,209,217,219,221,222,226,229,231,233,],[59,59,59,59,59,-63,-64,-65,90,59,59,59,59,59,59,59,59,-69,59,59,-70,59,-67,59,-66,-72,-71,-68,]),'FOR':([37,41,42,46,47,53,54,55,69,74,75,111,128,139,140,158,171,207,209,217,219,221,222,226,229,231,233,],[60,60,60,60,60,-63,-64,-65,60,60,60,60,60,60,60,60,-69,60,60,-70,60,-67,60,-66,-72,-71,-68,]),'ASIGNACION':([39,40,52,57,64,65,132,163,],[63,-1,-1,63,-39,-40,-1,-41,]),'CORCHETE_IZQUIERDO':([40,52,97,132,],[66,66,66,66,]),'AND':([40,64,65,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,193,194,195,196,197,198,199,200,],[-1,-39,-40,121,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,121,121,121,-1,-1,-1,-1,-32,-33,-34,-41,-23,-27,-24,-28,-25,-29,-26,-30,]),'POR':([40,64,65,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,193,194,195,196,197,198,199,200,],[-1,-39,-40,122,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,122,122,122,-1,-1,-1,-1,-32,-33,-34,-41,-23,-27,-24,-28,-25,-29,-26,-30,]),'ENTRE':([40,64,65,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,193,194,195,196,197,198,199,200,],[-1,-39,-40,123,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,123,123,123,-1,-1,-1,-1,-32,-33,-34,-41,-23,-27,-24,-28,-25,-29,-26,-30,]),'MODULO':([40,64,65,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,193,194,195,196,197,198,199,200,],[-1,-39,-40,124,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,124,124,124,-1,-1,-1,-1,-32,-33,-34,-41,-23,-27,-24,-28,-25,-29,-26,-30,]),'MENOR':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,112,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'MAYOR':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,113,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'MENOR_IGUAL':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,114,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'MAYOR_IGUAL':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,115,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'IGUAL':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,116,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'DIFERENTE':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,117,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'OR':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,118,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,118,118,118,118,118,118,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'MAS':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,119,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,119,119,119,119,119,119,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'MENOS':([40,64,65,80,81,82,83,86,87,88,89,93,94,95,97,125,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,187,188,189,190,191,192,193,194,195,196,197,198,199,200,],[-1,-39,-40,120,-15,-22,-31,-35,-36,-37,-38,-36,-37,-38,-1,-1,-1,120,120,120,120,120,120,-1,-1,-1,-1,-1,-1,-1,-32,-33,-34,-41,-16,-19,-17,-20,-18,-21,-23,-27,-24,-28,-25,-29,-26,-30,]),'ELSE':([45,46,47,53,54,55,69,72,73,74,75,103,106,107,111,139,140,141,169,170,171,207,216,217,219,221,225,226,229,231,233,],[-54,-1,-1,-63,-64,-65,-1,-55,-56,-1,-1,-58,-57,-59,-1,-1,-1,173,-61,-62,-69,-1,-60,-70,-1,-67,173,-66,-72,-71,-68,]),'ELSIF':([45,46,47,53,54,55,69,72,73,74,75,103,106,107,111,139,140,141,169,170,171,207,216,217,219,221,225,226,229,231,233,],[-54,-1,-1,-63,-64,-65,-1,-55,-56,-1,-1,-58,-57,-59,-1,-1,-1,174,-61,-62,-69,-1,-60,-70,-1,-67,174,-66,-72,-71,-68,]),'NOT':([56,59,63,85,90,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'VALOR_INT':([56,59,63,66,84,85,90,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[88,88,94,99,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'VALOR_FLOAT':([56,59,63,84,85,90,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[89,89,95,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'COMILLAS':([76,108,],[108,138,]),'CORCHETE_DERECHO':([99,],[132,]),'LOOP':([202,211,230,],[212,220,232,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'MP':([0,],[2,]),'PROGRAMA_H':([2,6,7,],[4,13,14,]),'empty':([2,6,7,23,24,25,28,37,40,41,42,46,47,52,69,74,75,97,111,125,128,132,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,158,207,209,219,222,],[5,5,5,27,27,27,27,45,65,45,45,45,45,65,45,45,45,65,45,156,45,65,45,45,176,178,180,182,184,186,188,190,192,194,196,198,200,45,45,45,45,45,]),'P':([2,6,7,],[6,6,6,]),'F':([2,6,7,],[7,7,7,]),'TIPO':([2,6,7,23,24,25,28,],[9,9,9,29,29,29,29,]),'V_M':([23,24,25,28,],[26,30,31,33,]),'V':([23,24,25,28,],[28,28,28,28,]),'A':([34,37,41,42,46,47,60,69,74,75,111,128,139,140,158,203,207,209,219,222,],[38,48,48,48,48,48,92,48,48,48,48,48,48,48,48,213,48,48,48,48,]),'ID_COMPLETO':([34,37,41,42,46,47,56,59,60,63,69,74,75,84,85,90,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,139,140,158,174,203,207,209,219,222,],[39,57,57,57,57,57,87,87,57,93,57,57,57,87,87,87,57,87,87,87,87,87,87,87,87,87,87,87,87,87,57,87,57,57,57,87,57,57,57,57,57,]),'EST':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[44,67,68,72,73,103,106,107,141,159,169,170,201,216,218,225,227,]),'LOOP_':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'IF_':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'DO_WHILE':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'WHILE_':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FOR_':([37,41,42,46,47,69,74,75,111,128,139,140,158,207,209,219,222,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RANGOS':([40,52,97,132,],[64,64,64,163,]),'E':([56,59,63,85,90,129,174,],[79,91,96,126,127,160,210,]),'E2':([56,59,63,85,90,112,113,114,115,116,117,129,174,],[80,80,80,80,80,142,143,144,145,146,147,80,80,]),'E3':([56,59,63,85,90,112,113,114,115,116,117,118,119,120,129,174,],[81,81,81,81,81,81,81,81,81,81,81,148,149,150,81,81,]),'E4':([56,59,63,85,90,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,151,152,153,154,82,82,]),'T':([56,59,63,84,85,90,112,113,114,115,116,117,118,119,120,121,122,123,124,129,174,],[83,83,83,125,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'AUX_NOT':([125,],[155,]),'ELSIF_':([141,225,],[171,229,]),'AUX_MENOR':([142,],[175,]),'AUX_MAYOR':([143,],[177,]),'AUX_MENOR_IGUAL':([144,],[179,]),'AUX_MAYOR_IGUAL':([145,],[181,]),'AUX_IGUAL':([146,],[183,]),'AUX_DIFERENTE':([147,],[185,]),'AUX_OR':([148,],[187,]),'AUX_MAS':([149,],[189,]),'AUX_MENOS':([150,],[191,]),'AUX_AND':([151,],[193,]),'AUX_POR':([152,],[195,]),'AUX_ENTRE':([153,],[197,]),'AUX_MODULO':([154,],[199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','cuadruplos.py',181),
  ('E -> E2','E',1,'p_E','cuadruplos.py',187),
  ('E -> E2 MENOR E2 AUX_MENOR','E',4,'p_E','cuadruplos.py',188),
  ('E -> E2 MAYOR E2 AUX_MAYOR','E',4,'p_E','cuadruplos.py',189),
  ('E -> E2 MENOR_IGUAL E2 AUX_MENOR_IGUAL','E',4,'p_E','cuadruplos.py',190),
  ('E -> E2 MAYOR_IGUAL E2 AUX_MAYOR_IGUAL','E',4,'p_E','cuadruplos.py',191),
  ('E -> E2 IGUAL E2 AUX_IGUAL','E',4,'p_E','cuadruplos.py',192),
  ('E -> E2 DIFERENTE E2 AUX_DIFERENTE','E',4,'p_E','cuadruplos.py',193),
  ('AUX_MENOR -> empty','AUX_MENOR',1,'p_AUX_MENOR','cuadruplos.py',195),
  ('AUX_MAYOR -> empty','AUX_MAYOR',1,'p_AUX_MAYOR','cuadruplos.py',198),
  ('AUX_MENOR_IGUAL -> empty','AUX_MENOR_IGUAL',1,'p_AUX_MENOR_IGUAL','cuadruplos.py',201),
  ('AUX_MAYOR_IGUAL -> empty','AUX_MAYOR_IGUAL',1,'p_AUX_MAYOR_IGUAL','cuadruplos.py',204),
  ('AUX_IGUAL -> empty','AUX_IGUAL',1,'p_AUX_IGUAL','cuadruplos.py',207),
  ('AUX_DIFERENTE -> empty','AUX_DIFERENTE',1,'p_AUX_DIFERENTE','cuadruplos.py',210),
  ('E2 -> E3','E2',1,'p_E2','cuadruplos.py',215),
  ('E2 -> E2 OR E3 AUX_OR','E2',4,'p_E2','cuadruplos.py',216),
  ('E2 -> E2 MAS E3 AUX_MAS','E2',4,'p_E2','cuadruplos.py',217),
  ('E2 -> E2 MENOS E3 AUX_MENOS','E2',4,'p_E2','cuadruplos.py',218),
  ('AUX_OR -> empty','AUX_OR',1,'p_AUX_OR','cuadruplos.py',220),
  ('AUX_MAS -> empty','AUX_MAS',1,'p_AUX_MAS','cuadruplos.py',223),
  ('AUX_MENOS -> empty','AUX_MENOS',1,'p_AUX_MENOS','cuadruplos.py',226),
  ('E3 -> E4','E3',1,'p_E3','cuadruplos.py',231),
  ('E3 -> E3 AND E4 AUX_AND','E3',4,'p_E3','cuadruplos.py',232),
  ('E3 -> E3 POR E4 AUX_POR','E3',4,'p_E3','cuadruplos.py',233),
  ('E3 -> E3 ENTRE E4 AUX_ENTRE','E3',4,'p_E3','cuadruplos.py',234),
  ('E3 -> E3 MODULO E4 AUX_MODULO','E3',4,'p_E3','cuadruplos.py',235),
  ('AUX_AND -> empty','AUX_AND',1,'p_AUX_AND','cuadruplos.py',237),
  ('AUX_POR -> empty','AUX_POR',1,'p_AUX_POR','cuadruplos.py',240),
  ('AUX_ENTRE -> empty','AUX_ENTRE',1,'p_AUX_ENTRE','cuadruplos.py',243),
  ('AUX_MODULO -> empty','AUX_MODULO',1,'p_AUX_MODULO','cuadruplos.py',246),
  ('E4 -> T','E4',1,'p_E4','cuadruplos.py',251),
  ('E4 -> NOT T AUX_NOT','E4',3,'p_E4','cuadruplos.py',252),
  ('AUX_NOT -> empty','AUX_NOT',1,'p_AUX_NOT','cuadruplos.py',254),
  ('T -> PARENTESIS_IZQUIERDO E PARENTESIS_DERECHO','T',3,'p_T','cuadruplos.py',262),
  ('T -> FUNCTION','T',1,'p_T','cuadruplos.py',263),
  ('T -> ID_COMPLETO','T',1,'p_T','cuadruplos.py',264),
  ('T -> VALOR_INT','T',1,'p_T','cuadruplos.py',265),
  ('T -> VALOR_FLOAT','T',1,'p_T','cuadruplos.py',266),
  ('ID_COMPLETO -> ID RANGOS','ID_COMPLETO',2,'p_ID_COMPLETO','cuadruplos.py',282),
  ('RANGOS -> empty','RANGOS',1,'p_RANGOS','cuadruplos.py',286),
  ('RANGOS -> CORCHETE_IZQUIERDO VALOR_INT CORCHETE_DERECHO RANGOS','RANGOS',4,'p_RANGOS','cuadruplos.py',287),
  ('V -> TIPO DOS_PUNTOS A PUNTO_COMA','V',4,'p_V','cuadruplos.py',291),
  ('V -> TIPO DOS_PUNTOS ID_COMPLETO PUNTO_COMA','V',4,'p_V','cuadruplos.py',292),
  ('TIPO -> INT','TIPO',1,'p_TIPO','cuadruplos.py',296),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','cuadruplos.py',297),
  ('V_M -> empty','V_M',1,'p_V_M','cuadruplos.py',300),
  ('V_M -> V V_M','V_M',2,'p_V_M','cuadruplos.py',301),
  ('A -> ID_COMPLETO ASIGNACION VALOR_INT','A',3,'p_A','cuadruplos.py',305),
  ('A -> ID_COMPLETO ASIGNACION VALOR_FLOAT','A',3,'p_A','cuadruplos.py',306),
  ('A -> ID_COMPLETO ASIGNACION E','A',3,'p_A','cuadruplos.py',307),
  ('A -> ID_COMPLETO ASIGNACION ID_COMPLETO','A',3,'p_A','cuadruplos.py',308),
  ('A -> ID_COMPLETO ASIGNACION ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO','A',5,'p_A','cuadruplos.py',309),
  ('A -> ID_COMPLETO ASIGNACION INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO','A',5,'p_A','cuadruplos.py',310),
  ('EST -> empty','EST',1,'p_EST','cuadruplos.py',338),
  ('EST -> LOOP_ EST','EST',2,'p_EST','cuadruplos.py',339),
  ('EST -> IF_ EST','EST',2,'p_EST','cuadruplos.py',340),
  ('EST -> A PUNTO_COMA EST','EST',3,'p_EST','cuadruplos.py',341),
  ('EST -> PROCEDURE PUNTO_COMA EST','EST',3,'p_EST','cuadruplos.py',342),
  ('EST -> FUNCTION PUNTO_COMA EST','EST',3,'p_EST','cuadruplos.py',343),
  ('EST -> PRINT PARENTESIS_IZQUIERDO COMILLAS COMILLAS PARENTESIS_DERECHO PUNTO_COMA EST','EST',7,'p_EST','cuadruplos.py',344),
  ('EST -> INPUT PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST','EST',5,'p_EST','cuadruplos.py',345),
  ('EST -> ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO PUNTO_COMA EST','EST',5,'p_EST','cuadruplos.py',346),
  ('LOOP_ -> DO_WHILE','LOOP_',1,'p_LOOP','cuadruplos.py',355),
  ('LOOP_ -> WHILE_','LOOP_',1,'p_LOOP','cuadruplos.py',356),
  ('LOOP_ -> FOR_','LOOP_',1,'p_LOOP','cuadruplos.py',357),
  ('DO_WHILE -> DO WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA','DO_WHILE',8,'p_DO_WHILE','cuadruplos.py',359),
  ('WHILE_ -> WHILE E DOS_PUNTOS EST END LOOP PUNTO_COMA','WHILE_',7,'p_WHILE_','cuadruplos.py',361),
  ('FOR_ -> FOR A PUNTO_COMA E PUNTO_COMA A DOS_PUNTOS EST END LOOP PUNTO_COMA','FOR_',11,'p_FOR_','cuadruplos.py',363),
  ('IF_ -> IF E DOS_PUNTOS EST ELSIF_','IF_',5,'p_IF_','cuadruplos.py',367),
  ('ELSIF_ -> END IF PUNTO_COMA','ELSIF_',3,'p_ELSIF_','cuadruplos.py',369),
  ('ELSIF_ -> ELSE DOS_PUNTOS EST END IF PUNTO_COMA','ELSIF_',6,'p_ELSIF_','cuadruplos.py',370),
  ('ELSIF_ -> ELSIF E DOS_PUNTOS EST ELSIF_','ELSIF_',5,'p_ELSIF_','cuadruplos.py',371),
  ('P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA','P',12,'p_P','cuadruplos.py',375),
  ('P -> PROCEDURE ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA','P',14,'p_P','cuadruplos.py',376),
  ('F -> TIPO ID PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN ID PUNTO_COMA END FUNCTION PUNTO_COMA','F',15,'p_F','cuadruplos.py',385),
  ('MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST END PROCEDURE PUNTO_COMA','MP',12,'p_MP','cuadruplos.py',394),
  ('MP -> PROCEDURE MAIN PARENTESIS_IZQUIERDO PARENTESIS_DERECHO DOS_PUNTOS V_M BEGIN PUNTO_COMA EST RETURN PUNTO_COMA END PROCEDURE PUNTO_COMA','MP',14,'p_MP','cuadruplos.py',395),
  ('PROGRAMA -> MP PROGRAMA_H','PROGRAMA',2,'p_PROGRAMA','cuadruplos.py',401),
  ('PROGRAMA_H -> empty','PROGRAMA_H',1,'p_PROGRAMA_H','cuadruplos.py',404),
  ('PROGRAMA_H -> P PROGRAMA_H','PROGRAMA_H',2,'p_PROGRAMA_H','cuadruplos.py',405),
  ('PROGRAMA_H -> F PROGRAMA_H','PROGRAMA_H',2,'p_PROGRAMA_H','cuadruplos.py',406),
]
